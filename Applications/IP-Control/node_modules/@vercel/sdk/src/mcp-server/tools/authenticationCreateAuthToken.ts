/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { authenticationCreateAuthToken } from "../../funcs/authenticationCreateAuthToken.js";
import { CreateAuthTokenRequest$inboundSchema } from "../../models/createauthtokenop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: CreateAuthTokenRequest$inboundSchema,
};

export const tool$authenticationCreateAuthToken: ToolDefinition<typeof args> = {
  name: "authentication-create-auth-token",
  description: `Create an Auth Token

Creates and returns a new authentication token for the currently authenticated User. The \`bearerToken\` property is only provided once, in the response body, so be sure to save it on the client for use with API requests.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await authenticationCreateAuthToken(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
