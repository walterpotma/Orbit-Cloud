/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { rollingReleaseGetRollingReleaseBillingStatus } from "../../funcs/rollingReleaseGetRollingReleaseBillingStatus.js";
import { GetRollingReleaseBillingStatusRequest$inboundSchema } from "../../models/getrollingreleasebillingstatusop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetRollingReleaseBillingStatusRequest$inboundSchema,
};

export const tool$rollingReleaseGetRollingReleaseBillingStatus: ToolDefinition<
  typeof args
> = {
  name: "rolling-release-get-rolling-release-billing-status",
  description: `Get rolling release billing status

Get the Rolling Releases billing status for a project. The team level billing status is used to determine if the project can be configured for rolling releases.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await rollingReleaseGetRollingReleaseBillingStatus(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
