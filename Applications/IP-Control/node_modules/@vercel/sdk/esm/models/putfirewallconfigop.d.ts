import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export declare const PutFirewallConfigAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigAction = ClosedEnum<typeof PutFirewallConfigAction>;
/**
 * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
 */
export type Sd = {
    active: boolean;
    action: PutFirewallConfigAction;
};
export declare const PutFirewallConfigSecurityAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityAction = ClosedEnum<typeof PutFirewallConfigSecurityAction>;
/**
 * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
 */
export type Ma = {
    active: boolean;
    action: PutFirewallConfigSecurityAction;
};
export declare const PutFirewallConfigSecurityRequestAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestAction>;
/**
 * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
 */
export type Lfi = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyAction>;
/**
 * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
 */
export type Rfi = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsAction>;
/**
 * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
 */
export type Rce = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction>;
/**
 * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
 */
export type Php = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsGenAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsGenAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsGenAction>;
/**
 * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
 */
export type Gen = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsGenAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsXssAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsXssAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsXssAction>;
/**
 * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
 */
export type Xss = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsXssAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction>;
/**
 * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
 */
export type Sqli = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSfAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsSfAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSfAction>;
/**
 * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
 */
export type Sf = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsSfAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction>;
/**
 * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
 */
export type Java = {
    active: boolean;
    action: PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction;
};
/**
 * Custom Ruleset
 */
export type Crs = {
    /**
     * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
     */
    sd?: Sd | undefined;
    /**
     * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
     */
    ma?: Ma | undefined;
    /**
     * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
     */
    lfi?: Lfi | undefined;
    /**
     * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
     */
    rfi?: Rfi | undefined;
    /**
     * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
     */
    rce?: Rce | undefined;
    /**
     * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
     */
    php?: Php | undefined;
    /**
     * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
     */
    gen?: Gen | undefined;
    /**
     * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
     */
    xss?: Xss | undefined;
    /**
     * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
     */
    sqli?: Sqli | undefined;
    /**
     * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
     */
    sf?: Sf | undefined;
    /**
     * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
     */
    java?: Java | undefined;
};
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export declare const PutFirewallConfigType: {
    readonly Host: "host";
    readonly Path: "path";
    readonly Method: "method";
    readonly Header: "header";
    readonly Query: "query";
    readonly Cookie: "cookie";
    readonly TargetPath: "target_path";
    readonly Route: "route";
    readonly RawPath: "raw_path";
    readonly IpAddress: "ip_address";
    readonly Region: "region";
    readonly Protocol: "protocol";
    readonly Scheme: "scheme";
    readonly Environment: "environment";
    readonly UserAgent: "user_agent";
    readonly GeoContinent: "geo_continent";
    readonly GeoCountry: "geo_country";
    readonly GeoCountryRegion: "geo_country_region";
    readonly GeoCity: "geo_city";
    readonly GeoAsNumber: "geo_as_number";
    readonly Ja4Digest: "ja4_digest";
    readonly Ja3Digest: "ja3_digest";
    readonly RateLimitApiId: "rate_limit_api_id";
};
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export type PutFirewallConfigType = ClosedEnum<typeof PutFirewallConfigType>;
export declare const Op: {
    readonly Re: "re";
    readonly Eq: "eq";
    readonly Neq: "neq";
    readonly Ex: "ex";
    readonly Nex: "nex";
    readonly Inc: "inc";
    readonly Ninc: "ninc";
    readonly Pre: "pre";
    readonly Suf: "suf";
    readonly Sub: "sub";
    readonly Gt: "gt";
    readonly Gte: "gte";
    readonly Lt: "lt";
    readonly Lte: "lte";
};
export type Op = ClosedEnum<typeof Op>;
export type Value = string | Array<string> | number;
export type Conditions = {
    /**
     * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
     */
    type: PutFirewallConfigType;
    op: Op;
    neg?: boolean | undefined;
    key?: string | undefined;
    value?: string | Array<string> | number | undefined;
};
export type ConditionGroup = {
    conditions: Array<Conditions>;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyRulesActionAction: {
    readonly Log: "log";
    readonly Challenge: "challenge";
    readonly Deny: "deny";
    readonly Bypass: "bypass";
    readonly RateLimit: "rate_limit";
    readonly Redirect: "redirect";
};
export type PutFirewallConfigSecurityRequestRequestBodyRulesActionAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyRulesActionAction>;
export declare const Algo: {
    readonly FixedWindow: "fixed_window";
    readonly TokenBucket: "token_bucket";
};
export type Algo = ClosedEnum<typeof Algo>;
export declare const Action1: {
    readonly Log: "log";
    readonly Challenge: "challenge";
    readonly Deny: "deny";
    readonly RateLimit: "rate_limit";
};
export type Action1 = ClosedEnum<typeof Action1>;
export type RateLimitAction = Action1 | any;
export type RateLimit1 = {
    algo: Algo;
    window: number;
    limit: number;
    keys: Array<string>;
    action?: Action1 | any | null | undefined;
};
export type RateLimit = RateLimit1 | any;
export type Redirect1 = {
    location: string;
    permanent: boolean;
};
export type Redirect = Redirect1 | any;
export type Mitigate = {
    action: PutFirewallConfigSecurityRequestRequestBodyRulesActionAction;
    rateLimit?: RateLimit1 | any | null | undefined;
    redirect?: Redirect1 | any | null | undefined;
    actionDuration?: string | null | undefined;
    bypassSystem?: boolean | null | undefined;
};
export type PutFirewallConfigSecurityRequestRequestBodyRulesAction = {
    mitigate?: Mitigate | undefined;
};
export type PutFirewallConfigRules = {
    id?: string | undefined;
    name: string;
    description?: string | undefined;
    active: boolean;
    conditionGroup: Array<ConditionGroup>;
    action: PutFirewallConfigSecurityRequestRequestBodyRulesAction;
};
export declare const PutFirewallConfigSecurityRequestRequestBodyIpsAction: {
    readonly Deny: "deny";
    readonly Challenge: "challenge";
    readonly Log: "log";
    readonly Bypass: "bypass";
};
export type PutFirewallConfigSecurityRequestRequestBodyIpsAction = ClosedEnum<typeof PutFirewallConfigSecurityRequestRequestBodyIpsAction>;
export type Ips = {
    id?: string | undefined;
    hostname: string;
    ip: string;
    notes?: string | undefined;
    action: PutFirewallConfigSecurityRequestRequestBodyIpsAction;
};
export type PutFirewallConfigRequestBody = {
    firewallEnabled: boolean;
    managedRules?: {
        [k: string]: any;
    } | undefined;
    /**
     * Custom Ruleset
     */
    crs?: Crs | undefined;
    rules?: Array<PutFirewallConfigRules> | undefined;
    ips?: Array<Ips> | undefined;
    botIdEnabled?: boolean | undefined;
};
export type PutFirewallConfigRequest = {
    projectId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: PutFirewallConfigRequestBody;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction>;
/**
 * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
 */
export type PutFirewallConfigSd = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction>;
/**
 * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
 */
export type PutFirewallConfigMa = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONAction>;
/**
 * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
 */
export type PutFirewallConfigLfi = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction>;
/**
 * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
 */
export type PutFirewallConfigRfi = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction>;
/**
 * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
 */
export type PutFirewallConfigRce = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction>;
/**
 * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
 */
export type PutFirewallConfigPhp = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction>;
/**
 * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
 */
export type PutFirewallConfigGen = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction>;
/**
 * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
 */
export type PutFirewallConfigXss = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction>;
/**
 * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
 */
export type PutFirewallConfigSqli = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction>;
/**
 * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
 */
export type PutFirewallConfigSf = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction: {
    readonly Deny: "deny";
    readonly Log: "log";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction>;
/**
 * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
 */
export type PutFirewallConfigJava = {
    active: boolean;
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction;
};
/**
 * Custom Ruleset
 */
export type PutFirewallConfigCrs = {
    /**
     * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
     */
    sd: PutFirewallConfigSd;
    /**
     * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
     */
    ma: PutFirewallConfigMa;
    /**
     * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
     */
    lfi: PutFirewallConfigLfi;
    /**
     * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
     */
    rfi: PutFirewallConfigRfi;
    /**
     * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
     */
    rce: PutFirewallConfigRce;
    /**
     * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
     */
    php: PutFirewallConfigPhp;
    /**
     * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
     */
    gen: PutFirewallConfigGen;
    /**
     * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
     */
    xss: PutFirewallConfigXss;
    /**
     * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
     */
    sqli: PutFirewallConfigSqli;
    /**
     * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
     */
    sf: PutFirewallConfigSf;
    /**
     * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
     */
    java: PutFirewallConfigJava;
};
export declare const PutFirewallConfigSecurityType: {
    readonly Host: "host";
    readonly Path: "path";
    readonly Method: "method";
    readonly Header: "header";
    readonly Query: "query";
    readonly Cookie: "cookie";
    readonly TargetPath: "target_path";
    readonly Route: "route";
    readonly RawPath: "raw_path";
    readonly IpAddress: "ip_address";
    readonly Protocol: "protocol";
    readonly Region: "region";
    readonly Scheme: "scheme";
    readonly Environment: "environment";
    readonly UserAgent: "user_agent";
    readonly GeoContinent: "geo_continent";
    readonly GeoCountry: "geo_country";
    readonly GeoCountryRegion: "geo_country_region";
    readonly GeoCity: "geo_city";
    readonly GeoAsNumber: "geo_as_number";
    readonly Ja4Digest: "ja4_digest";
    readonly Ja3Digest: "ja3_digest";
    readonly RateLimitApiId: "rate_limit_api_id";
    readonly ServerAction: "server_action";
};
export type PutFirewallConfigSecurityType = ClosedEnum<typeof PutFirewallConfigSecurityType>;
export declare const PutFirewallConfigOp: {
    readonly Re: "re";
    readonly Eq: "eq";
    readonly Ex: "ex";
    readonly Inc: "inc";
    readonly Pre: "pre";
    readonly Suf: "suf";
    readonly Sub: "sub";
    readonly Gt: "gt";
    readonly Gte: "gte";
    readonly Lt: "lt";
    readonly Lte: "lte";
    readonly Nex: "nex";
    readonly Ninc: "ninc";
    readonly Neq: "neq";
};
export type PutFirewallConfigOp = ClosedEnum<typeof PutFirewallConfigOp>;
export type PutFirewallConfigValue = string | number | Array<string>;
export type PutFirewallConfigConditions = {
    type: PutFirewallConfigSecurityType;
    op: PutFirewallConfigOp;
    neg?: boolean | undefined;
    key?: string | undefined;
    value?: string | number | Array<string> | undefined;
};
export type PutFirewallConfigConditionGroup = {
    conditions: Array<PutFirewallConfigConditions>;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
    readonly Bypass: "bypass";
    readonly RateLimit: "rate_limit";
    readonly Redirect: "redirect";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction>;
export declare const PutFirewallConfigAlgo: {
    readonly FixedWindow: "fixed_window";
    readonly TokenBucket: "token_bucket";
};
export type PutFirewallConfigAlgo = ClosedEnum<typeof PutFirewallConfigAlgo>;
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
    readonly RateLimit: "rate_limit";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction>;
export type PutFirewallConfigRateLimit = {
    algo: PutFirewallConfigAlgo;
    window: number;
    limit: number;
    keys: Array<string>;
    action?: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction | null | undefined;
};
export type PutFirewallConfigRedirect = {
    location: string;
    permanent: boolean;
};
export type PutFirewallConfigMitigate = {
    action: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction;
    rateLimit?: PutFirewallConfigRateLimit | null | undefined;
    redirect?: PutFirewallConfigRedirect | null | undefined;
    actionDuration?: string | null | undefined;
    bypassSystem?: boolean | null | undefined;
};
export type PutFirewallConfigSecurityResponseAction = {
    mitigate?: PutFirewallConfigMitigate | undefined;
};
export type PutFirewallConfigSecurityRules = {
    id: string;
    name: string;
    description?: string | undefined;
    active: boolean;
    conditionGroup: Array<PutFirewallConfigConditionGroup>;
    action: PutFirewallConfigSecurityResponseAction;
};
export declare const PutFirewallConfigSecurityResponse200Action: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
    readonly Bypass: "bypass";
};
export type PutFirewallConfigSecurityResponse200Action = ClosedEnum<typeof PutFirewallConfigSecurityResponse200Action>;
export type PutFirewallConfigIps = {
    id: string;
    hostname: string;
    ip: string;
    notes?: string | undefined;
    action: PutFirewallConfigSecurityResponse200Action;
};
export type PutFirewallConfigChanges = {};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction>;
export type PutFirewallConfigBotProtection = {
    active: boolean;
    action?: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction>;
export type PutFirewallConfigAiBots = {
    active: boolean;
    action?: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction: {
    readonly Deny: "deny";
    readonly Log: "log";
    readonly Challenge: "challenge";
};
export type PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction = ClosedEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction>;
export type PutFirewallConfigOwasp = {
    active: boolean;
    action?: PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
export type PutFirewallConfigManagedRules = {
    botProtection?: PutFirewallConfigBotProtection | undefined;
    aiBots?: PutFirewallConfigAiBots | undefined;
    owasp?: PutFirewallConfigOwasp | undefined;
};
export type Active = {
    ownerId: string;
    projectKey: string;
    id: string;
    version: number;
    updatedAt: string;
    firewallEnabled: boolean;
    /**
     * Custom Ruleset
     */
    crs: PutFirewallConfigCrs;
    rules: Array<PutFirewallConfigSecurityRules>;
    ips: Array<PutFirewallConfigIps>;
    changes: Array<PutFirewallConfigChanges>;
    managedRules?: PutFirewallConfigManagedRules | undefined;
    botIdEnabled?: boolean | undefined;
};
export type PutFirewallConfigResponseBody = {
    active: Active;
};
/** @internal */
export declare const PutFirewallConfigAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigAction>;
/** @internal */
export declare const PutFirewallConfigAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigAction$ {
    /** @deprecated use `PutFirewallConfigAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Sd$inboundSchema: z.ZodType<Sd, z.ZodTypeDef, unknown>;
/** @internal */
export type Sd$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Sd$outboundSchema: z.ZodType<Sd$Outbound, z.ZodTypeDef, Sd>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Sd$ {
    /** @deprecated use `Sd$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Sd, z.ZodTypeDef, unknown>;
    /** @deprecated use `Sd$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Sd$Outbound, z.ZodTypeDef, Sd>;
    /** @deprecated use `Sd$Outbound` instead. */
    type Outbound = Sd$Outbound;
}
export declare function sdToJSON(sd: Sd): string;
export declare function sdFromJSON(jsonString: string): SafeParseResult<Sd, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityAction>;
/** @internal */
export declare const PutFirewallConfigSecurityAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityAction$ {
    /** @deprecated use `PutFirewallConfigSecurityAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Ma$inboundSchema: z.ZodType<Ma, z.ZodTypeDef, unknown>;
/** @internal */
export type Ma$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Ma$outboundSchema: z.ZodType<Ma$Outbound, z.ZodTypeDef, Ma>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Ma$ {
    /** @deprecated use `Ma$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Ma, z.ZodTypeDef, unknown>;
    /** @deprecated use `Ma$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Ma$Outbound, z.ZodTypeDef, Ma>;
    /** @deprecated use `Ma$Outbound` instead. */
    type Outbound = Ma$Outbound;
}
export declare function maToJSON(ma: Ma): string;
export declare function maFromJSON(jsonString: string): SafeParseResult<Ma, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Lfi$inboundSchema: z.ZodType<Lfi, z.ZodTypeDef, unknown>;
/** @internal */
export type Lfi$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Lfi$outboundSchema: z.ZodType<Lfi$Outbound, z.ZodTypeDef, Lfi>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Lfi$ {
    /** @deprecated use `Lfi$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Lfi, z.ZodTypeDef, unknown>;
    /** @deprecated use `Lfi$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Lfi$Outbound, z.ZodTypeDef, Lfi>;
    /** @deprecated use `Lfi$Outbound` instead. */
    type Outbound = Lfi$Outbound;
}
export declare function lfiToJSON(lfi: Lfi): string;
export declare function lfiFromJSON(jsonString: string): SafeParseResult<Lfi, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Rfi$inboundSchema: z.ZodType<Rfi, z.ZodTypeDef, unknown>;
/** @internal */
export type Rfi$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Rfi$outboundSchema: z.ZodType<Rfi$Outbound, z.ZodTypeDef, Rfi>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Rfi$ {
    /** @deprecated use `Rfi$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Rfi, z.ZodTypeDef, unknown>;
    /** @deprecated use `Rfi$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Rfi$Outbound, z.ZodTypeDef, Rfi>;
    /** @deprecated use `Rfi$Outbound` instead. */
    type Outbound = Rfi$Outbound;
}
export declare function rfiToJSON(rfi: Rfi): string;
export declare function rfiFromJSON(jsonString: string): SafeParseResult<Rfi, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Rce$inboundSchema: z.ZodType<Rce, z.ZodTypeDef, unknown>;
/** @internal */
export type Rce$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Rce$outboundSchema: z.ZodType<Rce$Outbound, z.ZodTypeDef, Rce>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Rce$ {
    /** @deprecated use `Rce$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Rce, z.ZodTypeDef, unknown>;
    /** @deprecated use `Rce$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Rce$Outbound, z.ZodTypeDef, Rce>;
    /** @deprecated use `Rce$Outbound` instead. */
    type Outbound = Rce$Outbound;
}
export declare function rceToJSON(rce: Rce): string;
export declare function rceFromJSON(jsonString: string): SafeParseResult<Rce, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsPhpAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Php$inboundSchema: z.ZodType<Php, z.ZodTypeDef, unknown>;
/** @internal */
export type Php$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Php$outboundSchema: z.ZodType<Php$Outbound, z.ZodTypeDef, Php>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Php$ {
    /** @deprecated use `Php$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Php, z.ZodTypeDef, unknown>;
    /** @deprecated use `Php$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Php$Outbound, z.ZodTypeDef, Php>;
    /** @deprecated use `Php$Outbound` instead. */
    type Outbound = Php$Outbound;
}
export declare function phpToJSON(php: Php): string;
export declare function phpFromJSON(jsonString: string): SafeParseResult<Php, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsGenAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsGenAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsGenAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsGenAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsGenAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsGenAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsGenAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Gen$inboundSchema: z.ZodType<Gen, z.ZodTypeDef, unknown>;
/** @internal */
export type Gen$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Gen$outboundSchema: z.ZodType<Gen$Outbound, z.ZodTypeDef, Gen>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Gen$ {
    /** @deprecated use `Gen$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Gen, z.ZodTypeDef, unknown>;
    /** @deprecated use `Gen$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Gen$Outbound, z.ZodTypeDef, Gen>;
    /** @deprecated use `Gen$Outbound` instead. */
    type Outbound = Gen$Outbound;
}
export declare function genToJSON(gen: Gen): string;
export declare function genFromJSON(jsonString: string): SafeParseResult<Gen, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsXssAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsXssAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsXssAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsXssAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsXssAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsXssAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsXssAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Xss$inboundSchema: z.ZodType<Xss, z.ZodTypeDef, unknown>;
/** @internal */
export type Xss$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Xss$outboundSchema: z.ZodType<Xss$Outbound, z.ZodTypeDef, Xss>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Xss$ {
    /** @deprecated use `Xss$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Xss, z.ZodTypeDef, unknown>;
    /** @deprecated use `Xss$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Xss$Outbound, z.ZodTypeDef, Xss>;
    /** @deprecated use `Xss$Outbound` instead. */
    type Outbound = Xss$Outbound;
}
export declare function xssToJSON(xss: Xss): string;
export declare function xssFromJSON(jsonString: string): SafeParseResult<Xss, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsSqliAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Sqli$inboundSchema: z.ZodType<Sqli, z.ZodTypeDef, unknown>;
/** @internal */
export type Sqli$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Sqli$outboundSchema: z.ZodType<Sqli$Outbound, z.ZodTypeDef, Sqli>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Sqli$ {
    /** @deprecated use `Sqli$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Sqli, z.ZodTypeDef, unknown>;
    /** @deprecated use `Sqli$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Sqli$Outbound, z.ZodTypeDef, Sqli>;
    /** @deprecated use `Sqli$Outbound` instead. */
    type Outbound = Sqli$Outbound;
}
export declare function sqliToJSON(sqli: Sqli): string;
export declare function sqliFromJSON(jsonString: string): SafeParseResult<Sqli, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSfAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSfAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsSfAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsSfAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsSfAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsSfAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsSfAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Sf$inboundSchema: z.ZodType<Sf, z.ZodTypeDef, unknown>;
/** @internal */
export type Sf$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Sf$outboundSchema: z.ZodType<Sf$Outbound, z.ZodTypeDef, Sf>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Sf$ {
    /** @deprecated use `Sf$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Sf, z.ZodTypeDef, unknown>;
    /** @deprecated use `Sf$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Sf$Outbound, z.ZodTypeDef, Sf>;
    /** @deprecated use `Sf$Outbound` instead. */
    type Outbound = Sf$Outbound;
}
export declare function sfToJSON(sf: Sf): string;
export declare function sfFromJSON(jsonString: string): SafeParseResult<Sf, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyCrsJavaAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const Java$inboundSchema: z.ZodType<Java, z.ZodTypeDef, unknown>;
/** @internal */
export type Java$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const Java$outboundSchema: z.ZodType<Java$Outbound, z.ZodTypeDef, Java>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Java$ {
    /** @deprecated use `Java$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Java, z.ZodTypeDef, unknown>;
    /** @deprecated use `Java$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Java$Outbound, z.ZodTypeDef, Java>;
    /** @deprecated use `Java$Outbound` instead. */
    type Outbound = Java$Outbound;
}
export declare function javaToJSON(java: Java): string;
export declare function javaFromJSON(jsonString: string): SafeParseResult<Java, SDKValidationError>;
/** @internal */
export declare const Crs$inboundSchema: z.ZodType<Crs, z.ZodTypeDef, unknown>;
/** @internal */
export type Crs$Outbound = {
    sd?: Sd$Outbound | undefined;
    ma?: Ma$Outbound | undefined;
    lfi?: Lfi$Outbound | undefined;
    rfi?: Rfi$Outbound | undefined;
    rce?: Rce$Outbound | undefined;
    php?: Php$Outbound | undefined;
    gen?: Gen$Outbound | undefined;
    xss?: Xss$Outbound | undefined;
    sqli?: Sqli$Outbound | undefined;
    sf?: Sf$Outbound | undefined;
    java?: Java$Outbound | undefined;
};
/** @internal */
export declare const Crs$outboundSchema: z.ZodType<Crs$Outbound, z.ZodTypeDef, Crs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Crs$ {
    /** @deprecated use `Crs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Crs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Crs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Crs$Outbound, z.ZodTypeDef, Crs>;
    /** @deprecated use `Crs$Outbound` instead. */
    type Outbound = Crs$Outbound;
}
export declare function crsToJSON(crs: Crs): string;
export declare function crsFromJSON(jsonString: string): SafeParseResult<Crs, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigType$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigType>;
/** @internal */
export declare const PutFirewallConfigType$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigType$ {
    /** @deprecated use `PutFirewallConfigType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Host: "host";
        readonly Path: "path";
        readonly Method: "method";
        readonly Header: "header";
        readonly Query: "query";
        readonly Cookie: "cookie";
        readonly TargetPath: "target_path";
        readonly Route: "route";
        readonly RawPath: "raw_path";
        readonly IpAddress: "ip_address";
        readonly Region: "region";
        readonly Protocol: "protocol";
        readonly Scheme: "scheme";
        readonly Environment: "environment";
        readonly UserAgent: "user_agent";
        readonly GeoContinent: "geo_continent";
        readonly GeoCountry: "geo_country";
        readonly GeoCountryRegion: "geo_country_region";
        readonly GeoCity: "geo_city";
        readonly GeoAsNumber: "geo_as_number";
        readonly Ja4Digest: "ja4_digest";
        readonly Ja3Digest: "ja3_digest";
        readonly RateLimitApiId: "rate_limit_api_id";
    }>;
    /** @deprecated use `PutFirewallConfigType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Host: "host";
        readonly Path: "path";
        readonly Method: "method";
        readonly Header: "header";
        readonly Query: "query";
        readonly Cookie: "cookie";
        readonly TargetPath: "target_path";
        readonly Route: "route";
        readonly RawPath: "raw_path";
        readonly IpAddress: "ip_address";
        readonly Region: "region";
        readonly Protocol: "protocol";
        readonly Scheme: "scheme";
        readonly Environment: "environment";
        readonly UserAgent: "user_agent";
        readonly GeoContinent: "geo_continent";
        readonly GeoCountry: "geo_country";
        readonly GeoCountryRegion: "geo_country_region";
        readonly GeoCity: "geo_city";
        readonly GeoAsNumber: "geo_as_number";
        readonly Ja4Digest: "ja4_digest";
        readonly Ja3Digest: "ja3_digest";
        readonly RateLimitApiId: "rate_limit_api_id";
    }>;
}
/** @internal */
export declare const Op$inboundSchema: z.ZodNativeEnum<typeof Op>;
/** @internal */
export declare const Op$outboundSchema: z.ZodNativeEnum<typeof Op>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Op$ {
    /** @deprecated use `Op$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Re: "re";
        readonly Eq: "eq";
        readonly Neq: "neq";
        readonly Ex: "ex";
        readonly Nex: "nex";
        readonly Inc: "inc";
        readonly Ninc: "ninc";
        readonly Pre: "pre";
        readonly Suf: "suf";
        readonly Sub: "sub";
        readonly Gt: "gt";
        readonly Gte: "gte";
        readonly Lt: "lt";
        readonly Lte: "lte";
    }>;
    /** @deprecated use `Op$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Re: "re";
        readonly Eq: "eq";
        readonly Neq: "neq";
        readonly Ex: "ex";
        readonly Nex: "nex";
        readonly Inc: "inc";
        readonly Ninc: "ninc";
        readonly Pre: "pre";
        readonly Suf: "suf";
        readonly Sub: "sub";
        readonly Gt: "gt";
        readonly Gte: "gte";
        readonly Lt: "lt";
        readonly Lte: "lte";
    }>;
}
/** @internal */
export declare const Value$inboundSchema: z.ZodType<Value, z.ZodTypeDef, unknown>;
/** @internal */
export type Value$Outbound = string | Array<string> | number;
/** @internal */
export declare const Value$outboundSchema: z.ZodType<Value$Outbound, z.ZodTypeDef, Value>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Value$ {
    /** @deprecated use `Value$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Value, z.ZodTypeDef, unknown>;
    /** @deprecated use `Value$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Value$Outbound, z.ZodTypeDef, Value>;
    /** @deprecated use `Value$Outbound` instead. */
    type Outbound = Value$Outbound;
}
export declare function valueToJSON(value: Value): string;
export declare function valueFromJSON(jsonString: string): SafeParseResult<Value, SDKValidationError>;
/** @internal */
export declare const Conditions$inboundSchema: z.ZodType<Conditions, z.ZodTypeDef, unknown>;
/** @internal */
export type Conditions$Outbound = {
    type: string;
    op: string;
    neg?: boolean | undefined;
    key?: string | undefined;
    value?: string | Array<string> | number | undefined;
};
/** @internal */
export declare const Conditions$outboundSchema: z.ZodType<Conditions$Outbound, z.ZodTypeDef, Conditions>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Conditions$ {
    /** @deprecated use `Conditions$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Conditions, z.ZodTypeDef, unknown>;
    /** @deprecated use `Conditions$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Conditions$Outbound, z.ZodTypeDef, Conditions>;
    /** @deprecated use `Conditions$Outbound` instead. */
    type Outbound = Conditions$Outbound;
}
export declare function conditionsToJSON(conditions: Conditions): string;
export declare function conditionsFromJSON(jsonString: string): SafeParseResult<Conditions, SDKValidationError>;
/** @internal */
export declare const ConditionGroup$inboundSchema: z.ZodType<ConditionGroup, z.ZodTypeDef, unknown>;
/** @internal */
export type ConditionGroup$Outbound = {
    conditions: Array<Conditions$Outbound>;
};
/** @internal */
export declare const ConditionGroup$outboundSchema: z.ZodType<ConditionGroup$Outbound, z.ZodTypeDef, ConditionGroup>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConditionGroup$ {
    /** @deprecated use `ConditionGroup$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ConditionGroup, z.ZodTypeDef, unknown>;
    /** @deprecated use `ConditionGroup$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ConditionGroup$Outbound, z.ZodTypeDef, ConditionGroup>;
    /** @deprecated use `ConditionGroup$Outbound` instead. */
    type Outbound = ConditionGroup$Outbound;
}
export declare function conditionGroupToJSON(conditionGroup: ConditionGroup): string;
export declare function conditionGroupFromJSON(jsonString: string): SafeParseResult<ConditionGroup, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyRulesActionAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyRulesActionAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyRulesActionAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyRulesActionAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyRulesActionAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyRulesActionAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Deny: "deny";
        readonly Bypass: "bypass";
        readonly RateLimit: "rate_limit";
        readonly Redirect: "redirect";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyRulesActionAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Deny: "deny";
        readonly Bypass: "bypass";
        readonly RateLimit: "rate_limit";
        readonly Redirect: "redirect";
    }>;
}
/** @internal */
export declare const Algo$inboundSchema: z.ZodNativeEnum<typeof Algo>;
/** @internal */
export declare const Algo$outboundSchema: z.ZodNativeEnum<typeof Algo>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Algo$ {
    /** @deprecated use `Algo$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FixedWindow: "fixed_window";
        readonly TokenBucket: "token_bucket";
    }>;
    /** @deprecated use `Algo$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FixedWindow: "fixed_window";
        readonly TokenBucket: "token_bucket";
    }>;
}
/** @internal */
export declare const Action1$inboundSchema: z.ZodNativeEnum<typeof Action1>;
/** @internal */
export declare const Action1$outboundSchema: z.ZodNativeEnum<typeof Action1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Action1$ {
    /** @deprecated use `Action1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Deny: "deny";
        readonly RateLimit: "rate_limit";
    }>;
    /** @deprecated use `Action1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Deny: "deny";
        readonly RateLimit: "rate_limit";
    }>;
}
/** @internal */
export declare const RateLimitAction$inboundSchema: z.ZodType<RateLimitAction, z.ZodTypeDef, unknown>;
/** @internal */
export type RateLimitAction$Outbound = string | any;
/** @internal */
export declare const RateLimitAction$outboundSchema: z.ZodType<RateLimitAction$Outbound, z.ZodTypeDef, RateLimitAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RateLimitAction$ {
    /** @deprecated use `RateLimitAction$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `RateLimitAction$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `RateLimitAction$Outbound` instead. */
    type Outbound = RateLimitAction$Outbound;
}
export declare function rateLimitActionToJSON(rateLimitAction: RateLimitAction): string;
export declare function rateLimitActionFromJSON(jsonString: string): SafeParseResult<RateLimitAction, SDKValidationError>;
/** @internal */
export declare const RateLimit1$inboundSchema: z.ZodType<RateLimit1, z.ZodTypeDef, unknown>;
/** @internal */
export type RateLimit1$Outbound = {
    algo: string;
    window: number;
    limit: number;
    keys: Array<string>;
    action?: string | any | null | undefined;
};
/** @internal */
export declare const RateLimit1$outboundSchema: z.ZodType<RateLimit1$Outbound, z.ZodTypeDef, RateLimit1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RateLimit1$ {
    /** @deprecated use `RateLimit1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RateLimit1, z.ZodTypeDef, unknown>;
    /** @deprecated use `RateLimit1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RateLimit1$Outbound, z.ZodTypeDef, RateLimit1>;
    /** @deprecated use `RateLimit1$Outbound` instead. */
    type Outbound = RateLimit1$Outbound;
}
export declare function rateLimit1ToJSON(rateLimit1: RateLimit1): string;
export declare function rateLimit1FromJSON(jsonString: string): SafeParseResult<RateLimit1, SDKValidationError>;
/** @internal */
export declare const RateLimit$inboundSchema: z.ZodType<RateLimit, z.ZodTypeDef, unknown>;
/** @internal */
export type RateLimit$Outbound = RateLimit1$Outbound | any;
/** @internal */
export declare const RateLimit$outboundSchema: z.ZodType<RateLimit$Outbound, z.ZodTypeDef, RateLimit>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RateLimit$ {
    /** @deprecated use `RateLimit$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `RateLimit$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `RateLimit$Outbound` instead. */
    type Outbound = RateLimit$Outbound;
}
export declare function rateLimitToJSON(rateLimit: RateLimit): string;
export declare function rateLimitFromJSON(jsonString: string): SafeParseResult<RateLimit, SDKValidationError>;
/** @internal */
export declare const Redirect1$inboundSchema: z.ZodType<Redirect1, z.ZodTypeDef, unknown>;
/** @internal */
export type Redirect1$Outbound = {
    location: string;
    permanent: boolean;
};
/** @internal */
export declare const Redirect1$outboundSchema: z.ZodType<Redirect1$Outbound, z.ZodTypeDef, Redirect1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Redirect1$ {
    /** @deprecated use `Redirect1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Redirect1, z.ZodTypeDef, unknown>;
    /** @deprecated use `Redirect1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Redirect1$Outbound, z.ZodTypeDef, Redirect1>;
    /** @deprecated use `Redirect1$Outbound` instead. */
    type Outbound = Redirect1$Outbound;
}
export declare function redirect1ToJSON(redirect1: Redirect1): string;
export declare function redirect1FromJSON(jsonString: string): SafeParseResult<Redirect1, SDKValidationError>;
/** @internal */
export declare const Redirect$inboundSchema: z.ZodType<Redirect, z.ZodTypeDef, unknown>;
/** @internal */
export type Redirect$Outbound = Redirect1$Outbound | any;
/** @internal */
export declare const Redirect$outboundSchema: z.ZodType<Redirect$Outbound, z.ZodTypeDef, Redirect>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Redirect$ {
    /** @deprecated use `Redirect$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `Redirect$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `Redirect$Outbound` instead. */
    type Outbound = Redirect$Outbound;
}
export declare function redirectToJSON(redirect: Redirect): string;
export declare function redirectFromJSON(jsonString: string): SafeParseResult<Redirect, SDKValidationError>;
/** @internal */
export declare const Mitigate$inboundSchema: z.ZodType<Mitigate, z.ZodTypeDef, unknown>;
/** @internal */
export type Mitigate$Outbound = {
    action: string;
    rateLimit?: RateLimit1$Outbound | any | null | undefined;
    redirect?: Redirect1$Outbound | any | null | undefined;
    actionDuration?: string | null | undefined;
    bypassSystem?: boolean | null | undefined;
};
/** @internal */
export declare const Mitigate$outboundSchema: z.ZodType<Mitigate$Outbound, z.ZodTypeDef, Mitigate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Mitigate$ {
    /** @deprecated use `Mitigate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Mitigate, z.ZodTypeDef, unknown>;
    /** @deprecated use `Mitigate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Mitigate$Outbound, z.ZodTypeDef, Mitigate>;
    /** @deprecated use `Mitigate$Outbound` instead. */
    type Outbound = Mitigate$Outbound;
}
export declare function mitigateToJSON(mitigate: Mitigate): string;
export declare function mitigateFromJSON(jsonString: string): SafeParseResult<Mitigate, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyRulesAction$inboundSchema: z.ZodType<PutFirewallConfigSecurityRequestRequestBodyRulesAction, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound = {
    mitigate?: Mitigate$Outbound | undefined;
};
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyRulesAction$outboundSchema: z.ZodType<PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityRequestRequestBodyRulesAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyRulesAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyRulesAction$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSecurityRequestRequestBodyRulesAction, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyRulesAction$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityRequestRequestBodyRulesAction>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound` instead. */
    type Outbound = PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound;
}
export declare function putFirewallConfigSecurityRequestRequestBodyRulesActionToJSON(putFirewallConfigSecurityRequestRequestBodyRulesAction: PutFirewallConfigSecurityRequestRequestBodyRulesAction): string;
export declare function putFirewallConfigSecurityRequestRequestBodyRulesActionFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSecurityRequestRequestBodyRulesAction, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigRules$inboundSchema: z.ZodType<PutFirewallConfigRules, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRules$Outbound = {
    id?: string | undefined;
    name: string;
    description?: string | undefined;
    active: boolean;
    conditionGroup: Array<ConditionGroup$Outbound>;
    action: PutFirewallConfigSecurityRequestRequestBodyRulesAction$Outbound;
};
/** @internal */
export declare const PutFirewallConfigRules$outboundSchema: z.ZodType<PutFirewallConfigRules$Outbound, z.ZodTypeDef, PutFirewallConfigRules>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRules$ {
    /** @deprecated use `PutFirewallConfigRules$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRules, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRules$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRules$Outbound, z.ZodTypeDef, PutFirewallConfigRules>;
    /** @deprecated use `PutFirewallConfigRules$Outbound` instead. */
    type Outbound = PutFirewallConfigRules$Outbound;
}
export declare function putFirewallConfigRulesToJSON(putFirewallConfigRules: PutFirewallConfigRules): string;
export declare function putFirewallConfigRulesFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRules, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyIpsAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyIpsAction>;
/** @internal */
export declare const PutFirewallConfigSecurityRequestRequestBodyIpsAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityRequestRequestBodyIpsAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRequestRequestBodyIpsAction$ {
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyIpsAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Challenge: "challenge";
        readonly Log: "log";
        readonly Bypass: "bypass";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityRequestRequestBodyIpsAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Challenge: "challenge";
        readonly Log: "log";
        readonly Bypass: "bypass";
    }>;
}
/** @internal */
export declare const Ips$inboundSchema: z.ZodType<Ips, z.ZodTypeDef, unknown>;
/** @internal */
export type Ips$Outbound = {
    id?: string | undefined;
    hostname: string;
    ip: string;
    notes?: string | undefined;
    action: string;
};
/** @internal */
export declare const Ips$outboundSchema: z.ZodType<Ips$Outbound, z.ZodTypeDef, Ips>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Ips$ {
    /** @deprecated use `Ips$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Ips, z.ZodTypeDef, unknown>;
    /** @deprecated use `Ips$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Ips$Outbound, z.ZodTypeDef, Ips>;
    /** @deprecated use `Ips$Outbound` instead. */
    type Outbound = Ips$Outbound;
}
export declare function ipsToJSON(ips: Ips): string;
export declare function ipsFromJSON(jsonString: string): SafeParseResult<Ips, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigRequestBody$inboundSchema: z.ZodType<PutFirewallConfigRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRequestBody$Outbound = {
    firewallEnabled: boolean;
    managedRules?: {
        [k: string]: any;
    } | undefined;
    crs?: Crs$Outbound | undefined;
    rules?: Array<PutFirewallConfigRules$Outbound> | undefined;
    ips?: Array<Ips$Outbound> | undefined;
    botIdEnabled?: boolean | undefined;
};
/** @internal */
export declare const PutFirewallConfigRequestBody$outboundSchema: z.ZodType<PutFirewallConfigRequestBody$Outbound, z.ZodTypeDef, PutFirewallConfigRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRequestBody$ {
    /** @deprecated use `PutFirewallConfigRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRequestBody$Outbound, z.ZodTypeDef, PutFirewallConfigRequestBody>;
    /** @deprecated use `PutFirewallConfigRequestBody$Outbound` instead. */
    type Outbound = PutFirewallConfigRequestBody$Outbound;
}
export declare function putFirewallConfigRequestBodyToJSON(putFirewallConfigRequestBody: PutFirewallConfigRequestBody): string;
export declare function putFirewallConfigRequestBodyFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRequestBody, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigRequest$inboundSchema: z.ZodType<PutFirewallConfigRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRequest$Outbound = {
    projectId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: PutFirewallConfigRequestBody$Outbound;
};
/** @internal */
export declare const PutFirewallConfigRequest$outboundSchema: z.ZodType<PutFirewallConfigRequest$Outbound, z.ZodTypeDef, PutFirewallConfigRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRequest$ {
    /** @deprecated use `PutFirewallConfigRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRequest$Outbound, z.ZodTypeDef, PutFirewallConfigRequest>;
    /** @deprecated use `PutFirewallConfigRequest$Outbound` instead. */
    type Outbound = PutFirewallConfigRequest$Outbound;
}
export declare function putFirewallConfigRequestToJSON(putFirewallConfigRequest: PutFirewallConfigRequest): string;
export declare function putFirewallConfigRequestFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRequest, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSdAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigSd$inboundSchema: z.ZodType<PutFirewallConfigSd, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSd$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigSd$outboundSchema: z.ZodType<PutFirewallConfigSd$Outbound, z.ZodTypeDef, PutFirewallConfigSd>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSd$ {
    /** @deprecated use `PutFirewallConfigSd$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSd, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSd$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSd$Outbound, z.ZodTypeDef, PutFirewallConfigSd>;
    /** @deprecated use `PutFirewallConfigSd$Outbound` instead. */
    type Outbound = PutFirewallConfigSd$Outbound;
}
export declare function putFirewallConfigSdToJSON(putFirewallConfigSd: PutFirewallConfigSd): string;
export declare function putFirewallConfigSdFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSd, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsMaAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigMa$inboundSchema: z.ZodType<PutFirewallConfigMa, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigMa$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigMa$outboundSchema: z.ZodType<PutFirewallConfigMa$Outbound, z.ZodTypeDef, PutFirewallConfigMa>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigMa$ {
    /** @deprecated use `PutFirewallConfigMa$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigMa, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigMa$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigMa$Outbound, z.ZodTypeDef, PutFirewallConfigMa>;
    /** @deprecated use `PutFirewallConfigMa$Outbound` instead. */
    type Outbound = PutFirewallConfigMa$Outbound;
}
export declare function putFirewallConfigMaToJSON(putFirewallConfigMa: PutFirewallConfigMa): string;
export declare function putFirewallConfigMaFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigMa, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigLfi$inboundSchema: z.ZodType<PutFirewallConfigLfi, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigLfi$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigLfi$outboundSchema: z.ZodType<PutFirewallConfigLfi$Outbound, z.ZodTypeDef, PutFirewallConfigLfi>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigLfi$ {
    /** @deprecated use `PutFirewallConfigLfi$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigLfi, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigLfi$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigLfi$Outbound, z.ZodTypeDef, PutFirewallConfigLfi>;
    /** @deprecated use `PutFirewallConfigLfi$Outbound` instead. */
    type Outbound = PutFirewallConfigLfi$Outbound;
}
export declare function putFirewallConfigLfiToJSON(putFirewallConfigLfi: PutFirewallConfigLfi): string;
export declare function putFirewallConfigLfiFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigLfi, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigRfi$inboundSchema: z.ZodType<PutFirewallConfigRfi, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRfi$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigRfi$outboundSchema: z.ZodType<PutFirewallConfigRfi$Outbound, z.ZodTypeDef, PutFirewallConfigRfi>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRfi$ {
    /** @deprecated use `PutFirewallConfigRfi$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRfi, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRfi$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRfi$Outbound, z.ZodTypeDef, PutFirewallConfigRfi>;
    /** @deprecated use `PutFirewallConfigRfi$Outbound` instead. */
    type Outbound = PutFirewallConfigRfi$Outbound;
}
export declare function putFirewallConfigRfiToJSON(putFirewallConfigRfi: PutFirewallConfigRfi): string;
export declare function putFirewallConfigRfiFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRfi, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigRce$inboundSchema: z.ZodType<PutFirewallConfigRce, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRce$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigRce$outboundSchema: z.ZodType<PutFirewallConfigRce$Outbound, z.ZodTypeDef, PutFirewallConfigRce>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRce$ {
    /** @deprecated use `PutFirewallConfigRce$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRce, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRce$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRce$Outbound, z.ZodTypeDef, PutFirewallConfigRce>;
    /** @deprecated use `PutFirewallConfigRce$Outbound` instead. */
    type Outbound = PutFirewallConfigRce$Outbound;
}
export declare function putFirewallConfigRceToJSON(putFirewallConfigRce: PutFirewallConfigRce): string;
export declare function putFirewallConfigRceFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRce, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigPhp$inboundSchema: z.ZodType<PutFirewallConfigPhp, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigPhp$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigPhp$outboundSchema: z.ZodType<PutFirewallConfigPhp$Outbound, z.ZodTypeDef, PutFirewallConfigPhp>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigPhp$ {
    /** @deprecated use `PutFirewallConfigPhp$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigPhp, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigPhp$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigPhp$Outbound, z.ZodTypeDef, PutFirewallConfigPhp>;
    /** @deprecated use `PutFirewallConfigPhp$Outbound` instead. */
    type Outbound = PutFirewallConfigPhp$Outbound;
}
export declare function putFirewallConfigPhpToJSON(putFirewallConfigPhp: PutFirewallConfigPhp): string;
export declare function putFirewallConfigPhpFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigPhp, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsGenAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigGen$inboundSchema: z.ZodType<PutFirewallConfigGen, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigGen$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigGen$outboundSchema: z.ZodType<PutFirewallConfigGen$Outbound, z.ZodTypeDef, PutFirewallConfigGen>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigGen$ {
    /** @deprecated use `PutFirewallConfigGen$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigGen, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigGen$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigGen$Outbound, z.ZodTypeDef, PutFirewallConfigGen>;
    /** @deprecated use `PutFirewallConfigGen$Outbound` instead. */
    type Outbound = PutFirewallConfigGen$Outbound;
}
export declare function putFirewallConfigGenToJSON(putFirewallConfigGen: PutFirewallConfigGen): string;
export declare function putFirewallConfigGenFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigGen, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsXssAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigXss$inboundSchema: z.ZodType<PutFirewallConfigXss, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigXss$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigXss$outboundSchema: z.ZodType<PutFirewallConfigXss$Outbound, z.ZodTypeDef, PutFirewallConfigXss>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigXss$ {
    /** @deprecated use `PutFirewallConfigXss$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigXss, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigXss$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigXss$Outbound, z.ZodTypeDef, PutFirewallConfigXss>;
    /** @deprecated use `PutFirewallConfigXss$Outbound` instead. */
    type Outbound = PutFirewallConfigXss$Outbound;
}
export declare function putFirewallConfigXssToJSON(putFirewallConfigXss: PutFirewallConfigXss): string;
export declare function putFirewallConfigXssFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigXss, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSqliAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigSqli$inboundSchema: z.ZodType<PutFirewallConfigSqli, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSqli$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigSqli$outboundSchema: z.ZodType<PutFirewallConfigSqli$Outbound, z.ZodTypeDef, PutFirewallConfigSqli>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSqli$ {
    /** @deprecated use `PutFirewallConfigSqli$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSqli, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSqli$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSqli$Outbound, z.ZodTypeDef, PutFirewallConfigSqli>;
    /** @deprecated use `PutFirewallConfigSqli$Outbound` instead. */
    type Outbound = PutFirewallConfigSqli$Outbound;
}
export declare function putFirewallConfigSqliToJSON(putFirewallConfigSqli: PutFirewallConfigSqli): string;
export declare function putFirewallConfigSqliFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSqli, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsSfAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigSf$inboundSchema: z.ZodType<PutFirewallConfigSf, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSf$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigSf$outboundSchema: z.ZodType<PutFirewallConfigSf$Outbound, z.ZodTypeDef, PutFirewallConfigSf>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSf$ {
    /** @deprecated use `PutFirewallConfigSf$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSf, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSf$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSf$Outbound, z.ZodTypeDef, PutFirewallConfigSf>;
    /** @deprecated use `PutFirewallConfigSf$Outbound` instead. */
    type Outbound = PutFirewallConfigSf$Outbound;
}
export declare function putFirewallConfigSfToJSON(putFirewallConfigSf: PutFirewallConfigSf): string;
export declare function putFirewallConfigSfFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSf, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveCrsJavaAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
    }>;
}
/** @internal */
export declare const PutFirewallConfigJava$inboundSchema: z.ZodType<PutFirewallConfigJava, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigJava$Outbound = {
    active: boolean;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigJava$outboundSchema: z.ZodType<PutFirewallConfigJava$Outbound, z.ZodTypeDef, PutFirewallConfigJava>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigJava$ {
    /** @deprecated use `PutFirewallConfigJava$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigJava, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigJava$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigJava$Outbound, z.ZodTypeDef, PutFirewallConfigJava>;
    /** @deprecated use `PutFirewallConfigJava$Outbound` instead. */
    type Outbound = PutFirewallConfigJava$Outbound;
}
export declare function putFirewallConfigJavaToJSON(putFirewallConfigJava: PutFirewallConfigJava): string;
export declare function putFirewallConfigJavaFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigJava, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigCrs$inboundSchema: z.ZodType<PutFirewallConfigCrs, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigCrs$Outbound = {
    sd: PutFirewallConfigSd$Outbound;
    ma: PutFirewallConfigMa$Outbound;
    lfi: PutFirewallConfigLfi$Outbound;
    rfi: PutFirewallConfigRfi$Outbound;
    rce: PutFirewallConfigRce$Outbound;
    php: PutFirewallConfigPhp$Outbound;
    gen: PutFirewallConfigGen$Outbound;
    xss: PutFirewallConfigXss$Outbound;
    sqli: PutFirewallConfigSqli$Outbound;
    sf: PutFirewallConfigSf$Outbound;
    java: PutFirewallConfigJava$Outbound;
};
/** @internal */
export declare const PutFirewallConfigCrs$outboundSchema: z.ZodType<PutFirewallConfigCrs$Outbound, z.ZodTypeDef, PutFirewallConfigCrs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigCrs$ {
    /** @deprecated use `PutFirewallConfigCrs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigCrs, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigCrs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigCrs$Outbound, z.ZodTypeDef, PutFirewallConfigCrs>;
    /** @deprecated use `PutFirewallConfigCrs$Outbound` instead. */
    type Outbound = PutFirewallConfigCrs$Outbound;
}
export declare function putFirewallConfigCrsToJSON(putFirewallConfigCrs: PutFirewallConfigCrs): string;
export declare function putFirewallConfigCrsFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigCrs, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityType$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityType>;
/** @internal */
export declare const PutFirewallConfigSecurityType$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityType$ {
    /** @deprecated use `PutFirewallConfigSecurityType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Host: "host";
        readonly Path: "path";
        readonly Method: "method";
        readonly Header: "header";
        readonly Query: "query";
        readonly Cookie: "cookie";
        readonly TargetPath: "target_path";
        readonly Route: "route";
        readonly RawPath: "raw_path";
        readonly IpAddress: "ip_address";
        readonly Protocol: "protocol";
        readonly Region: "region";
        readonly Scheme: "scheme";
        readonly Environment: "environment";
        readonly UserAgent: "user_agent";
        readonly GeoContinent: "geo_continent";
        readonly GeoCountry: "geo_country";
        readonly GeoCountryRegion: "geo_country_region";
        readonly GeoCity: "geo_city";
        readonly GeoAsNumber: "geo_as_number";
        readonly Ja4Digest: "ja4_digest";
        readonly Ja3Digest: "ja3_digest";
        readonly RateLimitApiId: "rate_limit_api_id";
        readonly ServerAction: "server_action";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Host: "host";
        readonly Path: "path";
        readonly Method: "method";
        readonly Header: "header";
        readonly Query: "query";
        readonly Cookie: "cookie";
        readonly TargetPath: "target_path";
        readonly Route: "route";
        readonly RawPath: "raw_path";
        readonly IpAddress: "ip_address";
        readonly Protocol: "protocol";
        readonly Region: "region";
        readonly Scheme: "scheme";
        readonly Environment: "environment";
        readonly UserAgent: "user_agent";
        readonly GeoContinent: "geo_continent";
        readonly GeoCountry: "geo_country";
        readonly GeoCountryRegion: "geo_country_region";
        readonly GeoCity: "geo_city";
        readonly GeoAsNumber: "geo_as_number";
        readonly Ja4Digest: "ja4_digest";
        readonly Ja3Digest: "ja3_digest";
        readonly RateLimitApiId: "rate_limit_api_id";
        readonly ServerAction: "server_action";
    }>;
}
/** @internal */
export declare const PutFirewallConfigOp$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigOp>;
/** @internal */
export declare const PutFirewallConfigOp$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigOp>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigOp$ {
    /** @deprecated use `PutFirewallConfigOp$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Re: "re";
        readonly Eq: "eq";
        readonly Ex: "ex";
        readonly Inc: "inc";
        readonly Pre: "pre";
        readonly Suf: "suf";
        readonly Sub: "sub";
        readonly Gt: "gt";
        readonly Gte: "gte";
        readonly Lt: "lt";
        readonly Lte: "lte";
        readonly Nex: "nex";
        readonly Ninc: "ninc";
        readonly Neq: "neq";
    }>;
    /** @deprecated use `PutFirewallConfigOp$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Re: "re";
        readonly Eq: "eq";
        readonly Ex: "ex";
        readonly Inc: "inc";
        readonly Pre: "pre";
        readonly Suf: "suf";
        readonly Sub: "sub";
        readonly Gt: "gt";
        readonly Gte: "gte";
        readonly Lt: "lt";
        readonly Lte: "lte";
        readonly Nex: "nex";
        readonly Ninc: "ninc";
        readonly Neq: "neq";
    }>;
}
/** @internal */
export declare const PutFirewallConfigValue$inboundSchema: z.ZodType<PutFirewallConfigValue, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigValue$Outbound = string | number | Array<string>;
/** @internal */
export declare const PutFirewallConfigValue$outboundSchema: z.ZodType<PutFirewallConfigValue$Outbound, z.ZodTypeDef, PutFirewallConfigValue>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigValue$ {
    /** @deprecated use `PutFirewallConfigValue$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigValue, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigValue$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigValue$Outbound, z.ZodTypeDef, PutFirewallConfigValue>;
    /** @deprecated use `PutFirewallConfigValue$Outbound` instead. */
    type Outbound = PutFirewallConfigValue$Outbound;
}
export declare function putFirewallConfigValueToJSON(putFirewallConfigValue: PutFirewallConfigValue): string;
export declare function putFirewallConfigValueFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigValue, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigConditions$inboundSchema: z.ZodType<PutFirewallConfigConditions, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigConditions$Outbound = {
    type: string;
    op: string;
    neg?: boolean | undefined;
    key?: string | undefined;
    value?: string | number | Array<string> | undefined;
};
/** @internal */
export declare const PutFirewallConfigConditions$outboundSchema: z.ZodType<PutFirewallConfigConditions$Outbound, z.ZodTypeDef, PutFirewallConfigConditions>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigConditions$ {
    /** @deprecated use `PutFirewallConfigConditions$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigConditions, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigConditions$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigConditions$Outbound, z.ZodTypeDef, PutFirewallConfigConditions>;
    /** @deprecated use `PutFirewallConfigConditions$Outbound` instead. */
    type Outbound = PutFirewallConfigConditions$Outbound;
}
export declare function putFirewallConfigConditionsToJSON(putFirewallConfigConditions: PutFirewallConfigConditions): string;
export declare function putFirewallConfigConditionsFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigConditions, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigConditionGroup$inboundSchema: z.ZodType<PutFirewallConfigConditionGroup, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigConditionGroup$Outbound = {
    conditions: Array<PutFirewallConfigConditions$Outbound>;
};
/** @internal */
export declare const PutFirewallConfigConditionGroup$outboundSchema: z.ZodType<PutFirewallConfigConditionGroup$Outbound, z.ZodTypeDef, PutFirewallConfigConditionGroup>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigConditionGroup$ {
    /** @deprecated use `PutFirewallConfigConditionGroup$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigConditionGroup, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigConditionGroup$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigConditionGroup$Outbound, z.ZodTypeDef, PutFirewallConfigConditionGroup>;
    /** @deprecated use `PutFirewallConfigConditionGroup$Outbound` instead. */
    type Outbound = PutFirewallConfigConditionGroup$Outbound;
}
export declare function putFirewallConfigConditionGroupToJSON(putFirewallConfigConditionGroup: PutFirewallConfigConditionGroup): string;
export declare function putFirewallConfigConditionGroupFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigConditionGroup, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Bypass: "bypass";
        readonly RateLimit: "rate_limit";
        readonly Redirect: "redirect";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Bypass: "bypass";
        readonly RateLimit: "rate_limit";
        readonly Redirect: "redirect";
    }>;
}
/** @internal */
export declare const PutFirewallConfigAlgo$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigAlgo>;
/** @internal */
export declare const PutFirewallConfigAlgo$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigAlgo>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigAlgo$ {
    /** @deprecated use `PutFirewallConfigAlgo$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FixedWindow: "fixed_window";
        readonly TokenBucket: "token_bucket";
    }>;
    /** @deprecated use `PutFirewallConfigAlgo$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FixedWindow: "fixed_window";
        readonly TokenBucket: "token_bucket";
    }>;
}
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly RateLimit: "rate_limit";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveRulesActionAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly RateLimit: "rate_limit";
    }>;
}
/** @internal */
export declare const PutFirewallConfigRateLimit$inboundSchema: z.ZodType<PutFirewallConfigRateLimit, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRateLimit$Outbound = {
    algo: string;
    window: number;
    limit: number;
    keys: Array<string>;
    action?: string | null | undefined;
};
/** @internal */
export declare const PutFirewallConfigRateLimit$outboundSchema: z.ZodType<PutFirewallConfigRateLimit$Outbound, z.ZodTypeDef, PutFirewallConfigRateLimit>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRateLimit$ {
    /** @deprecated use `PutFirewallConfigRateLimit$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRateLimit, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRateLimit$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRateLimit$Outbound, z.ZodTypeDef, PutFirewallConfigRateLimit>;
    /** @deprecated use `PutFirewallConfigRateLimit$Outbound` instead. */
    type Outbound = PutFirewallConfigRateLimit$Outbound;
}
export declare function putFirewallConfigRateLimitToJSON(putFirewallConfigRateLimit: PutFirewallConfigRateLimit): string;
export declare function putFirewallConfigRateLimitFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRateLimit, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigRedirect$inboundSchema: z.ZodType<PutFirewallConfigRedirect, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigRedirect$Outbound = {
    location: string;
    permanent: boolean;
};
/** @internal */
export declare const PutFirewallConfigRedirect$outboundSchema: z.ZodType<PutFirewallConfigRedirect$Outbound, z.ZodTypeDef, PutFirewallConfigRedirect>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigRedirect$ {
    /** @deprecated use `PutFirewallConfigRedirect$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigRedirect, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigRedirect$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigRedirect$Outbound, z.ZodTypeDef, PutFirewallConfigRedirect>;
    /** @deprecated use `PutFirewallConfigRedirect$Outbound` instead. */
    type Outbound = PutFirewallConfigRedirect$Outbound;
}
export declare function putFirewallConfigRedirectToJSON(putFirewallConfigRedirect: PutFirewallConfigRedirect): string;
export declare function putFirewallConfigRedirectFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigRedirect, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigMitigate$inboundSchema: z.ZodType<PutFirewallConfigMitigate, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigMitigate$Outbound = {
    action: string;
    rateLimit?: PutFirewallConfigRateLimit$Outbound | null | undefined;
    redirect?: PutFirewallConfigRedirect$Outbound | null | undefined;
    actionDuration?: string | null | undefined;
    bypassSystem?: boolean | null | undefined;
};
/** @internal */
export declare const PutFirewallConfigMitigate$outboundSchema: z.ZodType<PutFirewallConfigMitigate$Outbound, z.ZodTypeDef, PutFirewallConfigMitigate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigMitigate$ {
    /** @deprecated use `PutFirewallConfigMitigate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigMitigate, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigMitigate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigMitigate$Outbound, z.ZodTypeDef, PutFirewallConfigMitigate>;
    /** @deprecated use `PutFirewallConfigMitigate$Outbound` instead. */
    type Outbound = PutFirewallConfigMitigate$Outbound;
}
export declare function putFirewallConfigMitigateToJSON(putFirewallConfigMitigate: PutFirewallConfigMitigate): string;
export declare function putFirewallConfigMitigateFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigMitigate, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponseAction$inboundSchema: z.ZodType<PutFirewallConfigSecurityResponseAction, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSecurityResponseAction$Outbound = {
    mitigate?: PutFirewallConfigMitigate$Outbound | undefined;
};
/** @internal */
export declare const PutFirewallConfigSecurityResponseAction$outboundSchema: z.ZodType<PutFirewallConfigSecurityResponseAction$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityResponseAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponseAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponseAction$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSecurityResponseAction, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSecurityResponseAction$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSecurityResponseAction$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityResponseAction>;
    /** @deprecated use `PutFirewallConfigSecurityResponseAction$Outbound` instead. */
    type Outbound = PutFirewallConfigSecurityResponseAction$Outbound;
}
export declare function putFirewallConfigSecurityResponseActionToJSON(putFirewallConfigSecurityResponseAction: PutFirewallConfigSecurityResponseAction): string;
export declare function putFirewallConfigSecurityResponseActionFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSecurityResponseAction, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityRules$inboundSchema: z.ZodType<PutFirewallConfigSecurityRules, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigSecurityRules$Outbound = {
    id: string;
    name: string;
    description?: string | undefined;
    active: boolean;
    conditionGroup: Array<PutFirewallConfigConditionGroup$Outbound>;
    action: PutFirewallConfigSecurityResponseAction$Outbound;
};
/** @internal */
export declare const PutFirewallConfigSecurityRules$outboundSchema: z.ZodType<PutFirewallConfigSecurityRules$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityRules>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityRules$ {
    /** @deprecated use `PutFirewallConfigSecurityRules$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigSecurityRules, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigSecurityRules$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigSecurityRules$Outbound, z.ZodTypeDef, PutFirewallConfigSecurityRules>;
    /** @deprecated use `PutFirewallConfigSecurityRules$Outbound` instead. */
    type Outbound = PutFirewallConfigSecurityRules$Outbound;
}
export declare function putFirewallConfigSecurityRulesToJSON(putFirewallConfigSecurityRules: PutFirewallConfigSecurityRules): string;
export declare function putFirewallConfigSecurityRulesFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigSecurityRules, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200Action$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200Action>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200Action$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200Action>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200Action$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200Action$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Bypass: "bypass";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200Action$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
        readonly Bypass: "bypass";
    }>;
}
/** @internal */
export declare const PutFirewallConfigIps$inboundSchema: z.ZodType<PutFirewallConfigIps, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigIps$Outbound = {
    id: string;
    hostname: string;
    ip: string;
    notes?: string | undefined;
    action: string;
};
/** @internal */
export declare const PutFirewallConfigIps$outboundSchema: z.ZodType<PutFirewallConfigIps$Outbound, z.ZodTypeDef, PutFirewallConfigIps>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigIps$ {
    /** @deprecated use `PutFirewallConfigIps$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigIps, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigIps$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigIps$Outbound, z.ZodTypeDef, PutFirewallConfigIps>;
    /** @deprecated use `PutFirewallConfigIps$Outbound` instead. */
    type Outbound = PutFirewallConfigIps$Outbound;
}
export declare function putFirewallConfigIpsToJSON(putFirewallConfigIps: PutFirewallConfigIps): string;
export declare function putFirewallConfigIpsFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigIps, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigChanges$inboundSchema: z.ZodType<PutFirewallConfigChanges, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigChanges$Outbound = {};
/** @internal */
export declare const PutFirewallConfigChanges$outboundSchema: z.ZodType<PutFirewallConfigChanges$Outbound, z.ZodTypeDef, PutFirewallConfigChanges>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigChanges$ {
    /** @deprecated use `PutFirewallConfigChanges$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigChanges, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigChanges$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigChanges$Outbound, z.ZodTypeDef, PutFirewallConfigChanges>;
    /** @deprecated use `PutFirewallConfigChanges$Outbound` instead. */
    type Outbound = PutFirewallConfigChanges$Outbound;
}
export declare function putFirewallConfigChangesToJSON(putFirewallConfigChanges: PutFirewallConfigChanges): string;
export declare function putFirewallConfigChangesFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigChanges, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
}
/** @internal */
export declare const PutFirewallConfigBotProtection$inboundSchema: z.ZodType<PutFirewallConfigBotProtection, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigBotProtection$Outbound = {
    active: boolean;
    action?: string | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
/** @internal */
export declare const PutFirewallConfigBotProtection$outboundSchema: z.ZodType<PutFirewallConfigBotProtection$Outbound, z.ZodTypeDef, PutFirewallConfigBotProtection>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigBotProtection$ {
    /** @deprecated use `PutFirewallConfigBotProtection$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigBotProtection, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigBotProtection$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigBotProtection$Outbound, z.ZodTypeDef, PutFirewallConfigBotProtection>;
    /** @deprecated use `PutFirewallConfigBotProtection$Outbound` instead. */
    type Outbound = PutFirewallConfigBotProtection$Outbound;
}
export declare function putFirewallConfigBotProtectionToJSON(putFirewallConfigBotProtection: PutFirewallConfigBotProtection): string;
export declare function putFirewallConfigBotProtectionFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigBotProtection, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesAiBotsAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
}
/** @internal */
export declare const PutFirewallConfigAiBots$inboundSchema: z.ZodType<PutFirewallConfigAiBots, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigAiBots$Outbound = {
    active: boolean;
    action?: string | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
/** @internal */
export declare const PutFirewallConfigAiBots$outboundSchema: z.ZodType<PutFirewallConfigAiBots$Outbound, z.ZodTypeDef, PutFirewallConfigAiBots>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigAiBots$ {
    /** @deprecated use `PutFirewallConfigAiBots$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigAiBots, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigAiBots$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigAiBots$Outbound, z.ZodTypeDef, PutFirewallConfigAiBots>;
    /** @deprecated use `PutFirewallConfigAiBots$Outbound` instead. */
    type Outbound = PutFirewallConfigAiBots$Outbound;
}
export declare function putFirewallConfigAiBotsToJSON(putFirewallConfigAiBots: PutFirewallConfigAiBots): string;
export declare function putFirewallConfigAiBotsFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigAiBots, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction$inboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction>;
/** @internal */
export declare const PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction$outboundSchema: z.ZodNativeEnum<typeof PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction$ {
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
    /** @deprecated use `PutFirewallConfigSecurityResponse200ApplicationJSONResponseBodyActiveManagedRulesOwaspAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Deny: "deny";
        readonly Log: "log";
        readonly Challenge: "challenge";
    }>;
}
/** @internal */
export declare const PutFirewallConfigOwasp$inboundSchema: z.ZodType<PutFirewallConfigOwasp, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigOwasp$Outbound = {
    active: boolean;
    action?: string | undefined;
    updatedAt?: string | undefined;
    userId?: string | undefined;
    username?: string | undefined;
};
/** @internal */
export declare const PutFirewallConfigOwasp$outboundSchema: z.ZodType<PutFirewallConfigOwasp$Outbound, z.ZodTypeDef, PutFirewallConfigOwasp>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigOwasp$ {
    /** @deprecated use `PutFirewallConfigOwasp$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigOwasp, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigOwasp$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigOwasp$Outbound, z.ZodTypeDef, PutFirewallConfigOwasp>;
    /** @deprecated use `PutFirewallConfigOwasp$Outbound` instead. */
    type Outbound = PutFirewallConfigOwasp$Outbound;
}
export declare function putFirewallConfigOwaspToJSON(putFirewallConfigOwasp: PutFirewallConfigOwasp): string;
export declare function putFirewallConfigOwaspFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigOwasp, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigManagedRules$inboundSchema: z.ZodType<PutFirewallConfigManagedRules, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigManagedRules$Outbound = {
    bot_protection?: PutFirewallConfigBotProtection$Outbound | undefined;
    ai_bots?: PutFirewallConfigAiBots$Outbound | undefined;
    owasp?: PutFirewallConfigOwasp$Outbound | undefined;
};
/** @internal */
export declare const PutFirewallConfigManagedRules$outboundSchema: z.ZodType<PutFirewallConfigManagedRules$Outbound, z.ZodTypeDef, PutFirewallConfigManagedRules>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigManagedRules$ {
    /** @deprecated use `PutFirewallConfigManagedRules$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigManagedRules, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigManagedRules$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigManagedRules$Outbound, z.ZodTypeDef, PutFirewallConfigManagedRules>;
    /** @deprecated use `PutFirewallConfigManagedRules$Outbound` instead. */
    type Outbound = PutFirewallConfigManagedRules$Outbound;
}
export declare function putFirewallConfigManagedRulesToJSON(putFirewallConfigManagedRules: PutFirewallConfigManagedRules): string;
export declare function putFirewallConfigManagedRulesFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigManagedRules, SDKValidationError>;
/** @internal */
export declare const Active$inboundSchema: z.ZodType<Active, z.ZodTypeDef, unknown>;
/** @internal */
export type Active$Outbound = {
    ownerId: string;
    projectKey: string;
    id: string;
    version: number;
    updatedAt: string;
    firewallEnabled: boolean;
    crs: PutFirewallConfigCrs$Outbound;
    rules: Array<PutFirewallConfigSecurityRules$Outbound>;
    ips: Array<PutFirewallConfigIps$Outbound>;
    changes: Array<PutFirewallConfigChanges$Outbound>;
    managedRules?: PutFirewallConfigManagedRules$Outbound | undefined;
    botIdEnabled?: boolean | undefined;
};
/** @internal */
export declare const Active$outboundSchema: z.ZodType<Active$Outbound, z.ZodTypeDef, Active>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Active$ {
    /** @deprecated use `Active$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Active, z.ZodTypeDef, unknown>;
    /** @deprecated use `Active$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Active$Outbound, z.ZodTypeDef, Active>;
    /** @deprecated use `Active$Outbound` instead. */
    type Outbound = Active$Outbound;
}
export declare function activeToJSON(active: Active): string;
export declare function activeFromJSON(jsonString: string): SafeParseResult<Active, SDKValidationError>;
/** @internal */
export declare const PutFirewallConfigResponseBody$inboundSchema: z.ZodType<PutFirewallConfigResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PutFirewallConfigResponseBody$Outbound = {
    active: Active$Outbound;
};
/** @internal */
export declare const PutFirewallConfigResponseBody$outboundSchema: z.ZodType<PutFirewallConfigResponseBody$Outbound, z.ZodTypeDef, PutFirewallConfigResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PutFirewallConfigResponseBody$ {
    /** @deprecated use `PutFirewallConfigResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PutFirewallConfigResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PutFirewallConfigResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PutFirewallConfigResponseBody$Outbound, z.ZodTypeDef, PutFirewallConfigResponseBody>;
    /** @deprecated use `PutFirewallConfigResponseBody$Outbound` instead. */
    type Outbound = PutFirewallConfigResponseBody$Outbound;
}
export declare function putFirewallConfigResponseBodyToJSON(putFirewallConfigResponseBody: PutFirewallConfigResponseBody): string;
export declare function putFirewallConfigResponseBodyFromJSON(jsonString: string): SafeParseResult<PutFirewallConfigResponseBody, SDKValidationError>;
//# sourceMappingURL=putfirewallconfigop.d.ts.map