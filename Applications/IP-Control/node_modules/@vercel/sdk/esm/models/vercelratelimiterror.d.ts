import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { RateLimitNotice, RateLimitNotice$Outbound } from "./ratelimitnotice.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import { VercelError } from "./vercelerror.js";
export type VercelRateLimitErrorError = {
    code: string;
    message: string;
    limit?: RateLimitNotice | undefined;
};
export type VercelRateLimitErrorData = {
    error: VercelRateLimitErrorError;
};
export declare class VercelRateLimitError extends VercelError {
    error: VercelRateLimitErrorError;
    /** The original data that was passed to this error instance. */
    data$: VercelRateLimitErrorData;
    constructor(err: VercelRateLimitErrorData, httpMeta: {
        response: Response;
        request: Request;
        body: string;
    });
}
/** @internal */
export declare const VercelRateLimitErrorError$inboundSchema: z.ZodType<VercelRateLimitErrorError, z.ZodTypeDef, unknown>;
/** @internal */
export type VercelRateLimitErrorError$Outbound = {
    code: string;
    message: string;
    limit?: RateLimitNotice$Outbound | undefined;
};
/** @internal */
export declare const VercelRateLimitErrorError$outboundSchema: z.ZodType<VercelRateLimitErrorError$Outbound, z.ZodTypeDef, VercelRateLimitErrorError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VercelRateLimitErrorError$ {
    /** @deprecated use `VercelRateLimitErrorError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VercelRateLimitErrorError, z.ZodTypeDef, unknown>;
    /** @deprecated use `VercelRateLimitErrorError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VercelRateLimitErrorError$Outbound, z.ZodTypeDef, VercelRateLimitErrorError>;
    /** @deprecated use `VercelRateLimitErrorError$Outbound` instead. */
    type Outbound = VercelRateLimitErrorError$Outbound;
}
export declare function vercelRateLimitErrorErrorToJSON(vercelRateLimitErrorError: VercelRateLimitErrorError): string;
export declare function vercelRateLimitErrorErrorFromJSON(jsonString: string): SafeParseResult<VercelRateLimitErrorError, SDKValidationError>;
/** @internal */
export declare const VercelRateLimitError$inboundSchema: z.ZodType<VercelRateLimitError, z.ZodTypeDef, unknown>;
/** @internal */
export type VercelRateLimitError$Outbound = {
    error: VercelRateLimitErrorError$Outbound;
};
/** @internal */
export declare const VercelRateLimitError$outboundSchema: z.ZodType<VercelRateLimitError$Outbound, z.ZodTypeDef, VercelRateLimitError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VercelRateLimitError$ {
    /** @deprecated use `VercelRateLimitError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VercelRateLimitError, z.ZodTypeDef, unknown>;
    /** @deprecated use `VercelRateLimitError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VercelRateLimitError$Outbound, z.ZodTypeDef, VercelRateLimitError>;
    /** @deprecated use `VercelRateLimitError$Outbound` instead. */
    type Outbound = VercelRateLimitError$Outbound;
}
//# sourceMappingURL=vercelratelimiterror.d.ts.map