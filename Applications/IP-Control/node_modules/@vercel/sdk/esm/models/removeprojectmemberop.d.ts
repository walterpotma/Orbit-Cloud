import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type RemoveProjectMemberRequest = {
    /**
     * The ID or name of the Project.
     */
    idOrName: string;
    /**
     * The user ID of the member.
     */
    uid: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export type RemoveProjectMemberResponseBody = {
    id: string;
};
/** @internal */
export declare const RemoveProjectMemberRequest$inboundSchema: z.ZodType<RemoveProjectMemberRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveProjectMemberRequest$Outbound = {
    idOrName: string;
    uid: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const RemoveProjectMemberRequest$outboundSchema: z.ZodType<RemoveProjectMemberRequest$Outbound, z.ZodTypeDef, RemoveProjectMemberRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveProjectMemberRequest$ {
    /** @deprecated use `RemoveProjectMemberRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveProjectMemberRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveProjectMemberRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveProjectMemberRequest$Outbound, z.ZodTypeDef, RemoveProjectMemberRequest>;
    /** @deprecated use `RemoveProjectMemberRequest$Outbound` instead. */
    type Outbound = RemoveProjectMemberRequest$Outbound;
}
export declare function removeProjectMemberRequestToJSON(removeProjectMemberRequest: RemoveProjectMemberRequest): string;
export declare function removeProjectMemberRequestFromJSON(jsonString: string): SafeParseResult<RemoveProjectMemberRequest, SDKValidationError>;
/** @internal */
export declare const RemoveProjectMemberResponseBody$inboundSchema: z.ZodType<RemoveProjectMemberResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveProjectMemberResponseBody$Outbound = {
    id: string;
};
/** @internal */
export declare const RemoveProjectMemberResponseBody$outboundSchema: z.ZodType<RemoveProjectMemberResponseBody$Outbound, z.ZodTypeDef, RemoveProjectMemberResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveProjectMemberResponseBody$ {
    /** @deprecated use `RemoveProjectMemberResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveProjectMemberResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveProjectMemberResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveProjectMemberResponseBody$Outbound, z.ZodTypeDef, RemoveProjectMemberResponseBody>;
    /** @deprecated use `RemoveProjectMemberResponseBody$Outbound` instead. */
    type Outbound = RemoveProjectMemberResponseBody$Outbound;
}
export declare function removeProjectMemberResponseBodyToJSON(removeProjectMemberResponseBody: RemoveProjectMemberResponseBody): string;
export declare function removeProjectMemberResponseBodyFromJSON(jsonString: string): SafeParseResult<RemoveProjectMemberResponseBody, SDKValidationError>;
//# sourceMappingURL=removeprojectmemberop.d.ts.map