import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type PauseProjectRequest = {
    /**
     * The unique project identifier
     */
    projectId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/** @internal */
export declare const PauseProjectRequest$inboundSchema: z.ZodType<PauseProjectRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PauseProjectRequest$Outbound = {
    projectId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const PauseProjectRequest$outboundSchema: z.ZodType<PauseProjectRequest$Outbound, z.ZodTypeDef, PauseProjectRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PauseProjectRequest$ {
    /** @deprecated use `PauseProjectRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PauseProjectRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PauseProjectRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PauseProjectRequest$Outbound, z.ZodTypeDef, PauseProjectRequest>;
    /** @deprecated use `PauseProjectRequest$Outbound` instead. */
    type Outbound = PauseProjectRequest$Outbound;
}
export declare function pauseProjectRequestToJSON(pauseProjectRequest: PauseProjectRequest): string;
export declare function pauseProjectRequestFromJSON(jsonString: string): SafeParseResult<PauseProjectRequest, SDKValidationError>;
//# sourceMappingURL=pauseprojectop.d.ts.map