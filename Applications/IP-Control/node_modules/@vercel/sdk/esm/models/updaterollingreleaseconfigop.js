/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const UpdateRollingReleaseConfigRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const UpdateRollingReleaseConfigRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRollingReleaseConfigRequest$;
(function (UpdateRollingReleaseConfigRequest$) {
    /** @deprecated use `UpdateRollingReleaseConfigRequest$inboundSchema` instead. */
    UpdateRollingReleaseConfigRequest$.inboundSchema = UpdateRollingReleaseConfigRequest$inboundSchema;
    /** @deprecated use `UpdateRollingReleaseConfigRequest$outboundSchema` instead. */
    UpdateRollingReleaseConfigRequest$.outboundSchema = UpdateRollingReleaseConfigRequest$outboundSchema;
})(UpdateRollingReleaseConfigRequest$ || (UpdateRollingReleaseConfigRequest$ = {}));
export function updateRollingReleaseConfigRequestToJSON(updateRollingReleaseConfigRequest) {
    return JSON.stringify(UpdateRollingReleaseConfigRequest$outboundSchema.parse(updateRollingReleaseConfigRequest));
}
export function updateRollingReleaseConfigRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRollingReleaseConfigRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRollingReleaseConfigRequest' from JSON`);
}
/** @internal */
export const ResponseBodyStages$inboundSchema = z.object({
    targetPercentage: z.number(),
    requireApproval: z.boolean().optional(),
    duration: z.number().optional(),
});
/** @internal */
export const ResponseBodyStages$outboundSchema = z.object({
    targetPercentage: z.number(),
    requireApproval: z.boolean().optional(),
    duration: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyStages$;
(function (ResponseBodyStages$) {
    /** @deprecated use `ResponseBodyStages$inboundSchema` instead. */
    ResponseBodyStages$.inboundSchema = ResponseBodyStages$inboundSchema;
    /** @deprecated use `ResponseBodyStages$outboundSchema` instead. */
    ResponseBodyStages$.outboundSchema = ResponseBodyStages$outboundSchema;
})(ResponseBodyStages$ || (ResponseBodyStages$ = {}));
export function responseBodyStagesToJSON(responseBodyStages) {
    return JSON.stringify(ResponseBodyStages$outboundSchema.parse(responseBodyStages));
}
export function responseBodyStagesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyStages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyStages' from JSON`);
}
/** @internal */
export const ResponseBodyRollingRelease$inboundSchema = z.object({
    stages: z.nullable(z.array(z.lazy(() => ResponseBodyStages$inboundSchema)))
        .optional(),
});
/** @internal */
export const ResponseBodyRollingRelease$outboundSchema = z.object({
    stages: z.nullable(z.array(z.lazy(() => ResponseBodyStages$outboundSchema)))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyRollingRelease$;
(function (ResponseBodyRollingRelease$) {
    /** @deprecated use `ResponseBodyRollingRelease$inboundSchema` instead. */
    ResponseBodyRollingRelease$.inboundSchema = ResponseBodyRollingRelease$inboundSchema;
    /** @deprecated use `ResponseBodyRollingRelease$outboundSchema` instead. */
    ResponseBodyRollingRelease$.outboundSchema = ResponseBodyRollingRelease$outboundSchema;
})(ResponseBodyRollingRelease$ || (ResponseBodyRollingRelease$ = {}));
export function responseBodyRollingReleaseToJSON(responseBodyRollingRelease) {
    return JSON.stringify(ResponseBodyRollingRelease$outboundSchema.parse(responseBodyRollingRelease));
}
export function responseBodyRollingReleaseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyRollingRelease$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyRollingRelease' from JSON`);
}
/** @internal */
export const UpdateRollingReleaseConfigResponseBody2$inboundSchema = z.object({
    rollingRelease: z.nullable(z.lazy(() => ResponseBodyRollingRelease$inboundSchema)),
});
/** @internal */
export const UpdateRollingReleaseConfigResponseBody2$outboundSchema = z.object({
    rollingRelease: z.nullable(z.lazy(() => ResponseBodyRollingRelease$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRollingReleaseConfigResponseBody2$;
(function (UpdateRollingReleaseConfigResponseBody2$) {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody2$inboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody2$.inboundSchema = UpdateRollingReleaseConfigResponseBody2$inboundSchema;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody2$outboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody2$.outboundSchema = UpdateRollingReleaseConfigResponseBody2$outboundSchema;
})(UpdateRollingReleaseConfigResponseBody2$ || (UpdateRollingReleaseConfigResponseBody2$ = {}));
export function updateRollingReleaseConfigResponseBody2ToJSON(updateRollingReleaseConfigResponseBody2) {
    return JSON.stringify(UpdateRollingReleaseConfigResponseBody2$outboundSchema.parse(updateRollingReleaseConfigResponseBody2));
}
export function updateRollingReleaseConfigResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRollingReleaseConfigResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRollingReleaseConfigResponseBody2' from JSON`);
}
/** @internal */
export const UpdateRollingReleaseConfigResponseBody1$inboundSchema = z.object({
    rollingRelease: z.nullable(z.any()).optional(),
});
/** @internal */
export const UpdateRollingReleaseConfigResponseBody1$outboundSchema = z.object({
    rollingRelease: z.nullable(z.any()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRollingReleaseConfigResponseBody1$;
(function (UpdateRollingReleaseConfigResponseBody1$) {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody1$inboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody1$.inboundSchema = UpdateRollingReleaseConfigResponseBody1$inboundSchema;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody1$outboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody1$.outboundSchema = UpdateRollingReleaseConfigResponseBody1$outboundSchema;
})(UpdateRollingReleaseConfigResponseBody1$ || (UpdateRollingReleaseConfigResponseBody1$ = {}));
export function updateRollingReleaseConfigResponseBody1ToJSON(updateRollingReleaseConfigResponseBody1) {
    return JSON.stringify(UpdateRollingReleaseConfigResponseBody1$outboundSchema.parse(updateRollingReleaseConfigResponseBody1));
}
export function updateRollingReleaseConfigResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRollingReleaseConfigResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRollingReleaseConfigResponseBody1' from JSON`);
}
/** @internal */
export const UpdateRollingReleaseConfigResponseBody$inboundSchema = z.union([
    z.lazy(() => UpdateRollingReleaseConfigResponseBody1$inboundSchema),
    z.lazy(() => UpdateRollingReleaseConfigResponseBody2$inboundSchema),
]);
/** @internal */
export const UpdateRollingReleaseConfigResponseBody$outboundSchema = z.union([
    z.lazy(() => UpdateRollingReleaseConfigResponseBody1$outboundSchema),
    z.lazy(() => UpdateRollingReleaseConfigResponseBody2$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRollingReleaseConfigResponseBody$;
(function (UpdateRollingReleaseConfigResponseBody$) {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody$inboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody$.inboundSchema = UpdateRollingReleaseConfigResponseBody$inboundSchema;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody$outboundSchema` instead. */
    UpdateRollingReleaseConfigResponseBody$.outboundSchema = UpdateRollingReleaseConfigResponseBody$outboundSchema;
})(UpdateRollingReleaseConfigResponseBody$ || (UpdateRollingReleaseConfigResponseBody$ = {}));
export function updateRollingReleaseConfigResponseBodyToJSON(updateRollingReleaseConfigResponseBody) {
    return JSON.stringify(UpdateRollingReleaseConfigResponseBody$outboundSchema.parse(updateRollingReleaseConfigResponseBody));
}
export function updateRollingReleaseConfigResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRollingReleaseConfigResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRollingReleaseConfigResponseBody' from JSON`);
}
//# sourceMappingURL=updaterollingreleaseconfigop.js.map