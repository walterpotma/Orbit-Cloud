import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type RemoveCertRequest = {
    /**
     * The cert id to remove
     */
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export type RemoveCertResponseBody = {};
/** @internal */
export declare const RemoveCertRequest$inboundSchema: z.ZodType<RemoveCertRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveCertRequest$Outbound = {
    id: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const RemoveCertRequest$outboundSchema: z.ZodType<RemoveCertRequest$Outbound, z.ZodTypeDef, RemoveCertRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveCertRequest$ {
    /** @deprecated use `RemoveCertRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveCertRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveCertRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveCertRequest$Outbound, z.ZodTypeDef, RemoveCertRequest>;
    /** @deprecated use `RemoveCertRequest$Outbound` instead. */
    type Outbound = RemoveCertRequest$Outbound;
}
export declare function removeCertRequestToJSON(removeCertRequest: RemoveCertRequest): string;
export declare function removeCertRequestFromJSON(jsonString: string): SafeParseResult<RemoveCertRequest, SDKValidationError>;
/** @internal */
export declare const RemoveCertResponseBody$inboundSchema: z.ZodType<RemoveCertResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveCertResponseBody$Outbound = {};
/** @internal */
export declare const RemoveCertResponseBody$outboundSchema: z.ZodType<RemoveCertResponseBody$Outbound, z.ZodTypeDef, RemoveCertResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveCertResponseBody$ {
    /** @deprecated use `RemoveCertResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveCertResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveCertResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveCertResponseBody$Outbound, z.ZodTypeDef, RemoveCertResponseBody>;
    /** @deprecated use `RemoveCertResponseBody$Outbound` instead. */
    type Outbound = RemoveCertResponseBody$Outbound;
}
export declare function removeCertResponseBodyToJSON(removeCertResponseBody: RemoveCertResponseBody): string;
export declare function removeCertResponseBodyFromJSON(jsonString: string): SafeParseResult<RemoveCertResponseBody, SDKValidationError>;
//# sourceMappingURL=removecertop.d.ts.map