import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type DownloadArtifactRequest = {
    /**
     * The continuous integration or delivery environment where this artifact is downloaded.
     */
    xArtifactClientCi?: string | undefined;
    /**
     * 1 if the client is an interactive shell. Otherwise 0
     */
    xArtifactClientInteractive?: number | undefined;
    /**
     * The artifact hash
     */
    hash: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/** @internal */
export declare const DownloadArtifactRequest$inboundSchema: z.ZodType<DownloadArtifactRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DownloadArtifactRequest$Outbound = {
    "x-artifact-client-ci"?: string | undefined;
    "x-artifact-client-interactive"?: number | undefined;
    hash: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const DownloadArtifactRequest$outboundSchema: z.ZodType<DownloadArtifactRequest$Outbound, z.ZodTypeDef, DownloadArtifactRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DownloadArtifactRequest$ {
    /** @deprecated use `DownloadArtifactRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DownloadArtifactRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DownloadArtifactRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DownloadArtifactRequest$Outbound, z.ZodTypeDef, DownloadArtifactRequest>;
    /** @deprecated use `DownloadArtifactRequest$Outbound` instead. */
    type Outbound = DownloadArtifactRequest$Outbound;
}
export declare function downloadArtifactRequestToJSON(downloadArtifactRequest: DownloadArtifactRequest): string;
export declare function downloadArtifactRequestFromJSON(jsonString: string): SafeParseResult<DownloadArtifactRequest, SDKValidationError>;
//# sourceMappingURL=downloadartifactop.d.ts.map