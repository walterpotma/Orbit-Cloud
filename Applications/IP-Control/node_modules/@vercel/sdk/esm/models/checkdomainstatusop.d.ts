import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type CheckDomainStatusRequest = {
    /**
     * The name of the domain for which we would like to check the status.
     */
    name: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * Successful response checking if a Domain's name is available.
 */
export type CheckDomainStatusResponseBody = {
    available: boolean;
};
/** @internal */
export declare const CheckDomainStatusRequest$inboundSchema: z.ZodType<CheckDomainStatusRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckDomainStatusRequest$Outbound = {
    name: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const CheckDomainStatusRequest$outboundSchema: z.ZodType<CheckDomainStatusRequest$Outbound, z.ZodTypeDef, CheckDomainStatusRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckDomainStatusRequest$ {
    /** @deprecated use `CheckDomainStatusRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckDomainStatusRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckDomainStatusRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckDomainStatusRequest$Outbound, z.ZodTypeDef, CheckDomainStatusRequest>;
    /** @deprecated use `CheckDomainStatusRequest$Outbound` instead. */
    type Outbound = CheckDomainStatusRequest$Outbound;
}
export declare function checkDomainStatusRequestToJSON(checkDomainStatusRequest: CheckDomainStatusRequest): string;
export declare function checkDomainStatusRequestFromJSON(jsonString: string): SafeParseResult<CheckDomainStatusRequest, SDKValidationError>;
/** @internal */
export declare const CheckDomainStatusResponseBody$inboundSchema: z.ZodType<CheckDomainStatusResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckDomainStatusResponseBody$Outbound = {
    available: boolean;
};
/** @internal */
export declare const CheckDomainStatusResponseBody$outboundSchema: z.ZodType<CheckDomainStatusResponseBody$Outbound, z.ZodTypeDef, CheckDomainStatusResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckDomainStatusResponseBody$ {
    /** @deprecated use `CheckDomainStatusResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckDomainStatusResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckDomainStatusResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckDomainStatusResponseBody$Outbound, z.ZodTypeDef, CheckDomainStatusResponseBody>;
    /** @deprecated use `CheckDomainStatusResponseBody$Outbound` instead. */
    type Outbound = CheckDomainStatusResponseBody$Outbound;
}
export declare function checkDomainStatusResponseBodyToJSON(checkDomainStatusResponseBody: CheckDomainStatusResponseBody): string;
export declare function checkDomainStatusResponseBodyFromJSON(jsonString: string): SafeParseResult<CheckDomainStatusResponseBody, SDKValidationError>;
//# sourceMappingURL=checkdomainstatusop.d.ts.map