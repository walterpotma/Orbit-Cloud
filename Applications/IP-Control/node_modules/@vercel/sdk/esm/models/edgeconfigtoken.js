/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const EdgeConfigToken$inboundSchema = z.object({
    token: z.string(),
    label: z.string(),
    id: z.string(),
    edgeConfigId: z.string(),
    createdAt: z.number(),
});
/** @internal */
export const EdgeConfigToken$outboundSchema = z.object({
    token: z.string(),
    label: z.string(),
    id: z.string(),
    edgeConfigId: z.string(),
    createdAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EdgeConfigToken$;
(function (EdgeConfigToken$) {
    /** @deprecated use `EdgeConfigToken$inboundSchema` instead. */
    EdgeConfigToken$.inboundSchema = EdgeConfigToken$inboundSchema;
    /** @deprecated use `EdgeConfigToken$outboundSchema` instead. */
    EdgeConfigToken$.outboundSchema = EdgeConfigToken$outboundSchema;
})(EdgeConfigToken$ || (EdgeConfigToken$ = {}));
export function edgeConfigTokenToJSON(edgeConfigToken) {
    return JSON.stringify(EdgeConfigToken$outboundSchema.parse(edgeConfigToken));
}
export function edgeConfigTokenFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EdgeConfigToken$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EdgeConfigToken' from JSON`);
}
//# sourceMappingURL=edgeconfigtoken.js.map