/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType = {
    Prepayment: "prepayment",
    Subscription: "subscription",
};
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope = {
    Installation: "installation",
    Resource: "resource",
};
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema = z.object({
    integrationIdOrSlug: z.string(),
    productIdOrSlug: z.string(),
    metadata: z.string().optional(),
});
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema = z.object({
    integrationIdOrSlug: z.string(),
    productIdOrSlug: z.string(),
    metadata: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$;
(function (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$) {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$.inboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$.outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema;
})(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$ || (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$ = {}));
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequestToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest) {
    return JSON.stringify(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema
        .parse(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest));
}
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest' from JSON`);
}
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema = z.nativeEnum(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType);
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$;
(function (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$) {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$.inboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$.outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema;
})(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$ || (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$ = {}));
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema = z.nativeEnum(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope);
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$;
(function (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$) {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$.inboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$.outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema;
})(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$ || (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$ = {}));
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema = z.object({
    label: z.string(),
    value: z.string().optional(),
});
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema = z.object({
    label: z.string(),
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$;
(function (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$) {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$.inboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$.outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema;
})(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$ || (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$ = {}));
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetailsToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails) {
    return JSON.stringify(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema
        .parse(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails));
}
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails' from JSON`);
}
/** @internal */
export const HighlightedDetails$inboundSchema = z.object({
    label: z.string(),
    value: z.string().optional(),
});
/** @internal */
export const HighlightedDetails$outboundSchema = z.object({
    label: z.string(),
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var HighlightedDetails$;
(function (HighlightedDetails$) {
    /** @deprecated use `HighlightedDetails$inboundSchema` instead. */
    HighlightedDetails$.inboundSchema = HighlightedDetails$inboundSchema;
    /** @deprecated use `HighlightedDetails$outboundSchema` instead. */
    HighlightedDetails$.outboundSchema = HighlightedDetails$outboundSchema;
})(HighlightedDetails$ || (HighlightedDetails$ = {}));
export function highlightedDetailsToJSON(highlightedDetails) {
    return JSON.stringify(HighlightedDetails$outboundSchema.parse(highlightedDetails));
}
export function highlightedDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => HighlightedDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'HighlightedDetails' from JSON`);
}
/** @internal */
export const Quote$inboundSchema = z
    .object({
    line: z.string(),
    amount: z.string(),
});
/** @internal */
export const Quote$outboundSchema = z.object({
    line: z.string(),
    amount: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Quote$;
(function (Quote$) {
    /** @deprecated use `Quote$inboundSchema` instead. */
    Quote$.inboundSchema = Quote$inboundSchema;
    /** @deprecated use `Quote$outboundSchema` instead. */
    Quote$.outboundSchema = Quote$outboundSchema;
})(Quote$ || (Quote$ = {}));
export function quoteToJSON(quote) {
    return JSON.stringify(Quote$outboundSchema.parse(quote));
}
export function quoteFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Quote$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Quote' from JSON`);
}
/** @internal */
export const Plans$inboundSchema = z
    .object({
    type: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema,
    id: z.string(),
    name: z.string(),
    scope: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema,
    description: z.string(),
    paymentMethodRequired: z.boolean(),
    preauthorizationAmount: z.number().optional(),
    initialCharge: z.string().optional(),
    minimumAmount: z.string().optional(),
    maximumAmount: z.string().optional(),
    maximumAmountAutoPurchasePerPeriod: z.string().optional(),
    cost: z.string().optional(),
    details: z.array(z.lazy(() => GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema)).optional(),
    highlightedDetails: z.array(z.lazy(() => HighlightedDetails$inboundSchema))
        .optional(),
    quote: z.array(z.lazy(() => Quote$inboundSchema)).optional(),
    effectiveDate: z.string().optional(),
    disabled: z.boolean().optional(),
});
/** @internal */
export const Plans$outboundSchema = z.object({
    type: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema,
    id: z.string(),
    name: z.string(),
    scope: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema,
    description: z.string(),
    paymentMethodRequired: z.boolean(),
    preauthorizationAmount: z.number().optional(),
    initialCharge: z.string().optional(),
    minimumAmount: z.string().optional(),
    maximumAmount: z.string().optional(),
    maximumAmountAutoPurchasePerPeriod: z.string().optional(),
    cost: z.string().optional(),
    details: z.array(z.lazy(() => GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema)).optional(),
    highlightedDetails: z.array(z.lazy(() => HighlightedDetails$outboundSchema))
        .optional(),
    quote: z.array(z.lazy(() => Quote$outboundSchema)).optional(),
    effectiveDate: z.string().optional(),
    disabled: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Plans$;
(function (Plans$) {
    /** @deprecated use `Plans$inboundSchema` instead. */
    Plans$.inboundSchema = Plans$inboundSchema;
    /** @deprecated use `Plans$outboundSchema` instead. */
    Plans$.outboundSchema = Plans$outboundSchema;
})(Plans$ || (Plans$ = {}));
export function plansToJSON(plans) {
    return JSON.stringify(Plans$outboundSchema.parse(plans));
}
export function plansFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Plans$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Plans' from JSON`);
}
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema = z.object({
    plans: z.array(z.lazy(() => Plans$inboundSchema)),
});
/** @internal */
export const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema = z.object({
    plans: z.array(z.lazy(() => Plans$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$;
(function (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$) {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$.inboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema` instead. */
    GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$.outboundSchema = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema;
})(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$ || (GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$ = {}));
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBodyToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody) {
    return JSON.stringify(GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema
        .parse(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody));
}
export function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody' from JSON`);
}
//# sourceMappingURL=getv1integrationsintegrationintegrationidorslugproductsproductidorslugplansop.js.map