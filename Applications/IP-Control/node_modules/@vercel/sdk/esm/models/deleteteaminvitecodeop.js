/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteTeamInviteCodeRequest$inboundSchema = z.object({
    inviteId: z.string(),
    teamId: z.string(),
});
/** @internal */
export const DeleteTeamInviteCodeRequest$outboundSchema = z.object({
    inviteId: z.string(),
    teamId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteTeamInviteCodeRequest$;
(function (DeleteTeamInviteCodeRequest$) {
    /** @deprecated use `DeleteTeamInviteCodeRequest$inboundSchema` instead. */
    DeleteTeamInviteCodeRequest$.inboundSchema = DeleteTeamInviteCodeRequest$inboundSchema;
    /** @deprecated use `DeleteTeamInviteCodeRequest$outboundSchema` instead. */
    DeleteTeamInviteCodeRequest$.outboundSchema = DeleteTeamInviteCodeRequest$outboundSchema;
})(DeleteTeamInviteCodeRequest$ || (DeleteTeamInviteCodeRequest$ = {}));
export function deleteTeamInviteCodeRequestToJSON(deleteTeamInviteCodeRequest) {
    return JSON.stringify(DeleteTeamInviteCodeRequest$outboundSchema.parse(deleteTeamInviteCodeRequest));
}
export function deleteTeamInviteCodeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteTeamInviteCodeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTeamInviteCodeRequest' from JSON`);
}
/** @internal */
export const DeleteTeamInviteCodeResponseBody$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const DeleteTeamInviteCodeResponseBody$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteTeamInviteCodeResponseBody$;
(function (DeleteTeamInviteCodeResponseBody$) {
    /** @deprecated use `DeleteTeamInviteCodeResponseBody$inboundSchema` instead. */
    DeleteTeamInviteCodeResponseBody$.inboundSchema = DeleteTeamInviteCodeResponseBody$inboundSchema;
    /** @deprecated use `DeleteTeamInviteCodeResponseBody$outboundSchema` instead. */
    DeleteTeamInviteCodeResponseBody$.outboundSchema = DeleteTeamInviteCodeResponseBody$outboundSchema;
})(DeleteTeamInviteCodeResponseBody$ || (DeleteTeamInviteCodeResponseBody$ = {}));
export function deleteTeamInviteCodeResponseBodyToJSON(deleteTeamInviteCodeResponseBody) {
    return JSON.stringify(DeleteTeamInviteCodeResponseBody$outboundSchema.parse(deleteTeamInviteCodeResponseBody));
}
export function deleteTeamInviteCodeResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteTeamInviteCodeResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTeamInviteCodeResponseBody' from JSON`);
}
//# sourceMappingURL=deleteteaminvitecodeop.js.map