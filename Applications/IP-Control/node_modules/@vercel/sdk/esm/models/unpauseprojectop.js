/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const UnpauseProjectRequest$inboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const UnpauseProjectRequest$outboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UnpauseProjectRequest$;
(function (UnpauseProjectRequest$) {
    /** @deprecated use `UnpauseProjectRequest$inboundSchema` instead. */
    UnpauseProjectRequest$.inboundSchema = UnpauseProjectRequest$inboundSchema;
    /** @deprecated use `UnpauseProjectRequest$outboundSchema` instead. */
    UnpauseProjectRequest$.outboundSchema = UnpauseProjectRequest$outboundSchema;
})(UnpauseProjectRequest$ || (UnpauseProjectRequest$ = {}));
export function unpauseProjectRequestToJSON(unpauseProjectRequest) {
    return JSON.stringify(UnpauseProjectRequest$outboundSchema.parse(unpauseProjectRequest));
}
export function unpauseProjectRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UnpauseProjectRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UnpauseProjectRequest' from JSON`);
}
//# sourceMappingURL=unpauseprojectop.js.map