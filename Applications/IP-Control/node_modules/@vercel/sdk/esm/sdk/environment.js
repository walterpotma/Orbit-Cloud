/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { environmentCreateCustomEnvironment } from "../funcs/environmentCreateCustomEnvironment.js";
import { environmentGetCustomEnvironment } from "../funcs/environmentGetCustomEnvironment.js";
import { environmentGetV9ProjectsIdOrNameCustomEnvironments } from "../funcs/environmentGetV9ProjectsIdOrNameCustomEnvironments.js";
import { environmentRemoveCustomEnvironment } from "../funcs/environmentRemoveCustomEnvironment.js";
import { environmentUpdateCustomEnvironment } from "../funcs/environmentUpdateCustomEnvironment.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class Environment extends ClientSDK {
    /**
     * Create a custom environment for the current project.
     *
     * @remarks
     * Creates a custom environment for the current project. Cannot be named 'Production' or 'Preview'.
     */
    async createCustomEnvironment(request, options) {
        return unwrapAsync(environmentCreateCustomEnvironment(this, request, options));
    }
    /**
     * Retrieve custom environments
     *
     * @remarks
     * Retrieve custom environments for the project. Must not be named 'Production' or 'Preview'.
     */
    async getV9ProjectsIdOrNameCustomEnvironments(request, options) {
        return unwrapAsync(environmentGetV9ProjectsIdOrNameCustomEnvironments(this, request, options));
    }
    /**
     * Retrieve a custom environment
     *
     * @remarks
     * Retrieve a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    async getCustomEnvironment(request, options) {
        return unwrapAsync(environmentGetCustomEnvironment(this, request, options));
    }
    /**
     * Update a custom environment
     *
     * @remarks
     * Update a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    async updateCustomEnvironment(request, options) {
        return unwrapAsync(environmentUpdateCustomEnvironment(this, request, options));
    }
    /**
     * Remove a custom environment
     *
     * @remarks
     * Remove a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    async removeCustomEnvironment(request, options) {
        return unwrapAsync(environmentRemoveCustomEnvironment(this, request, options));
    }
}
//# sourceMappingURL=environment.js.map