/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { rollingReleaseDeleteRollingReleaseConfig } from "../../funcs/rollingReleaseDeleteRollingReleaseConfig.js";
import { DeleteRollingReleaseConfigRequest$inboundSchema } from "../../models/deleterollingreleaseconfigop.js";
import { formatResult } from "../tools.js";
const args = {
    request: DeleteRollingReleaseConfigRequest$inboundSchema,
};
export const tool$rollingReleaseDeleteRollingReleaseConfig = {
    name: "rolling-release-delete-rolling-release-config",
    description: `Delete rolling release configuration

Disable Rolling Releases for a project means that future deployments will not undergo a rolling release. Changing the config never alters a rollout that's already in-flightâ€”it only affects the next production deployment. If you want to also stop the current rollout, call this endpoint to disable the feature, and then call either the /complete or /abort endpoint.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await rollingReleaseDeleteRollingReleaseConfig(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=rollingReleaseDeleteRollingReleaseConfig.js.map