/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { projectsAddProjectDomain } from "../../funcs/projectsAddProjectDomain.js";
import { AddProjectDomainRequest$inboundSchema } from "../../models/addprojectdomainop.js";
import { formatResult } from "../tools.js";
const args = {
    request: AddProjectDomainRequest$inboundSchema,
};
export const tool$projectsAddProjectDomain = {
    name: "projects-add-project-domain",
    description: `Add a domain to a project

Add a domain to the project by passing its domain name and by specifying the project by either passing the project \`id\` or \`name\` in the URL. If the domain is not yet verified to be used on this project, the request will return \`verified = false\`, and the domain will need to be verified according to the \`verification\` challenge via \`POST /projects/:idOrName/domains/:domain/verify\`. If the domain already exists on the project, the request will fail with a \`400\` status code.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await projectsAddProjectDomain(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=projectsAddProjectDomain.js.map