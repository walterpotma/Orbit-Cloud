import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { CreateCustomEnvironmentRequest, CreateCustomEnvironmentResponseBody } from "../models/createcustomenvironmentop.js";
import { GetCustomEnvironmentRequest, GetCustomEnvironmentResponseBody } from "../models/getcustomenvironmentop.js";
import { GetV9ProjectsIdOrNameCustomEnvironmentsRequest, GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody } from "../models/getv9projectsidornamecustomenvironmentsop.js";
import { RemoveCustomEnvironmentRequest, RemoveCustomEnvironmentResponseBody } from "../models/removecustomenvironmentop.js";
import { UpdateCustomEnvironmentRequest, UpdateCustomEnvironmentResponseBody } from "../models/updatecustomenvironmentop.js";
export declare class Environment extends ClientSDK {
    /**
     * Create a custom environment for the current project.
     *
     * @remarks
     * Creates a custom environment for the current project. Cannot be named 'Production' or 'Preview'.
     */
    createCustomEnvironment(request: CreateCustomEnvironmentRequest, options?: RequestOptions): Promise<CreateCustomEnvironmentResponseBody>;
    /**
     * Retrieve custom environments
     *
     * @remarks
     * Retrieve custom environments for the project. Must not be named 'Production' or 'Preview'.
     */
    getV9ProjectsIdOrNameCustomEnvironments(request: GetV9ProjectsIdOrNameCustomEnvironmentsRequest, options?: RequestOptions): Promise<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody>;
    /**
     * Retrieve a custom environment
     *
     * @remarks
     * Retrieve a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    getCustomEnvironment(request: GetCustomEnvironmentRequest, options?: RequestOptions): Promise<GetCustomEnvironmentResponseBody>;
    /**
     * Update a custom environment
     *
     * @remarks
     * Update a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    updateCustomEnvironment(request: UpdateCustomEnvironmentRequest, options?: RequestOptions): Promise<UpdateCustomEnvironmentResponseBody>;
    /**
     * Remove a custom environment
     *
     * @remarks
     * Remove a custom environment for the project. Must not be named 'Production' or 'Preview'.
     */
    removeCustomEnvironment(request: RemoveCustomEnvironmentRequest, options?: RequestOptions): Promise<RemoveCustomEnvironmentResponseBody>;
}
//# sourceMappingURL=environment.d.ts.map