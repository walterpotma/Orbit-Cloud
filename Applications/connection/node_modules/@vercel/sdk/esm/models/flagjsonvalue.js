/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const FlagJSONValue$inboundSchema = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.nullable(z.lazy(() => FlagJSONValue$inboundSchema))),
    z.record(z.nullable(z.lazy(() => FlagJSONValue$inboundSchema))),
]);
/** @internal */
export const FlagJSONValue$outboundSchema = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.nullable(z.lazy(() => FlagJSONValue$outboundSchema))),
    z.record(z.nullable(z.lazy(() => FlagJSONValue$outboundSchema))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FlagJSONValue$;
(function (FlagJSONValue$) {
    /** @deprecated use `FlagJSONValue$inboundSchema` instead. */
    FlagJSONValue$.inboundSchema = FlagJSONValue$inboundSchema;
    /** @deprecated use `FlagJSONValue$outboundSchema` instead. */
    FlagJSONValue$.outboundSchema = FlagJSONValue$outboundSchema;
})(FlagJSONValue$ || (FlagJSONValue$ = {}));
export function flagJSONValueToJSON(flagJSONValue) {
    return JSON.stringify(FlagJSONValue$outboundSchema.parse(flagJSONValue));
}
export function flagJSONValueFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FlagJSONValue$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FlagJSONValue' from JSON`);
}
//# sourceMappingURL=flagjsonvalue.js.map