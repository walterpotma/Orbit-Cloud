/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/**
 * If true, the environment variable value will be decrypted
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export const Decrypt = {
    True: "true",
    False: "false",
};
export const FilterProjectEnvsTargetProjectsResponse2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsTargetProjectsResponse1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsResponseBodyProjectsResponse200Type = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type = {
    PostgresDatabase: "postgres-database",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type = {
    PostgresPassword: "postgres-password",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type = {
    PostgresHost: "postgres-host",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type = {
    PostgresUser: "postgres-user",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type = {
    PostgresUrl: "postgres-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type = {
    RedisUrl: "redis-url",
};
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type = {
    FlagsSecret: "flags-secret",
};
export const FilterProjectEnvsTargetProjects2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsTargetProjects1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsResponseBodyProjectsResponseType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type = {
    PostgresDatabase: "postgres-database",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type = {
    PostgresPassword: "postgres-password",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type = {
    PostgresHost: "postgres-host",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type = {
    PostgresUser: "postgres-user",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type = {
    PostgresUrl: "postgres-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type = {
    RedisUrl: "redis-url",
};
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType = {
    FlagsSecret: "flags-secret",
};
export const FilterProjectEnvsTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsTarget1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const FilterProjectEnvsResponseBodyType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type = {
    PostgresDatabase: "postgres-database",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type = {
    PostgresPassword: "postgres-password",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type = {
    PostgresHost: "postgres-host",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type = {
    PostgresUser: "postgres-user",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
};
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const FilterProjectEnvsContentHintProjectsResponse200Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const FilterProjectEnvsContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const FilterProjectEnvsContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const FilterProjectEnvsContentHintType = {
    RedisUrl: "redis-url",
};
export const FilterProjectEnvsResponseBodyProjectsType = {
    FlagsSecret: "flags-secret",
};
/** @internal */
export const Decrypt$inboundSchema = z
    .nativeEnum(Decrypt);
/** @internal */
export const Decrypt$outboundSchema = Decrypt$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Decrypt$;
(function (Decrypt$) {
    /** @deprecated use `Decrypt$inboundSchema` instead. */
    Decrypt$.inboundSchema = Decrypt$inboundSchema;
    /** @deprecated use `Decrypt$outboundSchema` instead. */
    Decrypt$.outboundSchema = Decrypt$outboundSchema;
})(Decrypt$ || (Decrypt$ = {}));
/** @internal */
export const FilterProjectEnvsRequest$inboundSchema = z.object({
    idOrName: z.string(),
    gitBranch: z.string().optional(),
    decrypt: Decrypt$inboundSchema.optional(),
    source: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    customEnvironmentSlug: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const FilterProjectEnvsRequest$outboundSchema = z.object({
    idOrName: z.string(),
    gitBranch: z.string().optional(),
    decrypt: Decrypt$outboundSchema.optional(),
    source: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    customEnvironmentSlug: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsRequest$;
(function (FilterProjectEnvsRequest$) {
    /** @deprecated use `FilterProjectEnvsRequest$inboundSchema` instead. */
    FilterProjectEnvsRequest$.inboundSchema = FilterProjectEnvsRequest$inboundSchema;
    /** @deprecated use `FilterProjectEnvsRequest$outboundSchema` instead. */
    FilterProjectEnvsRequest$.outboundSchema = FilterProjectEnvsRequest$outboundSchema;
})(FilterProjectEnvsRequest$ || (FilterProjectEnvsRequest$ = {}));
export function filterProjectEnvsRequestToJSON(filterProjectEnvsRequest) {
    return JSON.stringify(FilterProjectEnvsRequest$outboundSchema.parse(filterProjectEnvsRequest));
}
export function filterProjectEnvsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsRequest' from JSON`);
}
/** @internal */
export const FilterProjectEnvsTargetProjectsResponse2$inboundSchema = z
    .nativeEnum(FilterProjectEnvsTargetProjectsResponse2);
/** @internal */
export const FilterProjectEnvsTargetProjectsResponse2$outboundSchema = FilterProjectEnvsTargetProjectsResponse2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTargetProjectsResponse2$;
(function (FilterProjectEnvsTargetProjectsResponse2$) {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$inboundSchema` instead. */
    FilterProjectEnvsTargetProjectsResponse2$.inboundSchema = FilterProjectEnvsTargetProjectsResponse2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$outboundSchema` instead. */
    FilterProjectEnvsTargetProjectsResponse2$.outboundSchema = FilterProjectEnvsTargetProjectsResponse2$outboundSchema;
})(FilterProjectEnvsTargetProjectsResponse2$ || (FilterProjectEnvsTargetProjectsResponse2$ = {}));
/** @internal */
export const FilterProjectEnvsTargetProjectsResponse1$inboundSchema = z
    .nativeEnum(FilterProjectEnvsTargetProjectsResponse1);
/** @internal */
export const FilterProjectEnvsTargetProjectsResponse1$outboundSchema = FilterProjectEnvsTargetProjectsResponse1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTargetProjectsResponse1$;
(function (FilterProjectEnvsTargetProjectsResponse1$) {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$inboundSchema` instead. */
    FilterProjectEnvsTargetProjectsResponse1$.inboundSchema = FilterProjectEnvsTargetProjectsResponse1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$outboundSchema` instead. */
    FilterProjectEnvsTargetProjectsResponse1$.outboundSchema = FilterProjectEnvsTargetProjectsResponse1$outboundSchema;
})(FilterProjectEnvsTargetProjectsResponse1$ || (FilterProjectEnvsTargetProjectsResponse1$ = {}));
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema = z.union([
    z.array(FilterProjectEnvsTargetProjectsResponse1$inboundSchema),
    FilterProjectEnvsTargetProjectsResponse2$inboundSchema,
]);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema = z.union([
    z.array(FilterProjectEnvsTargetProjectsResponse1$outboundSchema),
    FilterProjectEnvsTargetProjectsResponse2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsResponseTarget$;
(function (FilterProjectEnvsResponseBodyProjectsResponseTarget$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponseTarget$.inboundSchema = FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponseTarget$.outboundSchema = FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsResponseTarget$ || (FilterProjectEnvsResponseBodyProjectsResponseTarget$ = {}));
export function filterProjectEnvsResponseBodyProjectsResponseTargetToJSON(filterProjectEnvsResponseBodyProjectsResponseTarget) {
    return JSON.stringify(FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema.parse(filterProjectEnvsResponseBodyProjectsResponseTarget));
}
export function filterProjectEnvsResponseBodyProjectsResponseTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyProjectsResponseTarget' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200Type);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsResponse200Type$;
(function (FilterProjectEnvsResponseBodyProjectsResponse200Type$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200Type$.inboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200Type$.outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsResponse200Type$ || (FilterProjectEnvsResponseBodyProjectsResponse200Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse15$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse15$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse15$;
(function (FilterProjectEnvsContentHintProjectsResponse15$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse15$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse15$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse15$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse15$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse15$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse15$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse15$ || (FilterProjectEnvsContentHintProjectsResponse15$ = {}));
export function filterProjectEnvsContentHintProjectsResponse15ToJSON(filterProjectEnvsContentHintProjectsResponse15) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse15$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse15));
}
export function filterProjectEnvsContentHintProjectsResponse15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse15' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse14$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse14$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse14$;
(function (FilterProjectEnvsContentHintProjectsResponse14$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse14$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse14$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse14$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse14$ || (FilterProjectEnvsContentHintProjectsResponse14$ = {}));
export function filterProjectEnvsContentHintProjectsResponse14ToJSON(filterProjectEnvsContentHintProjectsResponse14) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse14$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse14));
}
export function filterProjectEnvsContentHintProjectsResponse14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse14' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse13$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse13$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse13$;
(function (FilterProjectEnvsContentHintProjectsResponse13$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse13$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse13$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse13$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse13$ || (FilterProjectEnvsContentHintProjectsResponse13$ = {}));
export function filterProjectEnvsContentHintProjectsResponse13ToJSON(filterProjectEnvsContentHintProjectsResponse13) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse13$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse13));
}
export function filterProjectEnvsContentHintProjectsResponse13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse13' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse12$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse12$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse12$;
(function (FilterProjectEnvsContentHintProjectsResponse12$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse12$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse12$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse12$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse12$ || (FilterProjectEnvsContentHintProjectsResponse12$ = {}));
export function filterProjectEnvsContentHintProjectsResponse12ToJSON(filterProjectEnvsContentHintProjectsResponse12) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse12$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse12));
}
export function filterProjectEnvsContentHintProjectsResponse12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse12' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse11$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse11$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse11$;
(function (FilterProjectEnvsContentHintProjectsResponse11$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse11$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse11$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse11$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse11$ || (FilterProjectEnvsContentHintProjectsResponse11$ = {}));
export function filterProjectEnvsContentHintProjectsResponse11ToJSON(filterProjectEnvsContentHintProjectsResponse11) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse11$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse11));
}
export function filterProjectEnvsContentHintProjectsResponse11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse11' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse10$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse10$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse10$;
(function (FilterProjectEnvsContentHintProjectsResponse10$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse10$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse10$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse10$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse10$ || (FilterProjectEnvsContentHintProjectsResponse10$ = {}));
export function filterProjectEnvsContentHintProjectsResponse10ToJSON(filterProjectEnvsContentHintProjectsResponse10) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse10$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse10));
}
export function filterProjectEnvsContentHintProjectsResponse10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse10' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse9$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse9$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse9$;
(function (FilterProjectEnvsContentHintProjectsResponse9$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse9$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse9$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse9$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse9$ || (FilterProjectEnvsContentHintProjectsResponse9$ = {}));
export function filterProjectEnvsContentHintProjectsResponse9ToJSON(filterProjectEnvsContentHintProjectsResponse9) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse9$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse9));
}
export function filterProjectEnvsContentHintProjectsResponse9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse9' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse8$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse8$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse8$;
(function (FilterProjectEnvsContentHintProjectsResponse8$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse8$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse8$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse8$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse8$ || (FilterProjectEnvsContentHintProjectsResponse8$ = {}));
export function filterProjectEnvsContentHintProjectsResponse8ToJSON(filterProjectEnvsContentHintProjectsResponse8) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse8$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse8));
}
export function filterProjectEnvsContentHintProjectsResponse8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse8' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse7$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse7$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse7$;
(function (FilterProjectEnvsContentHintProjectsResponse7$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse7$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse7$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse7$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse7$ || (FilterProjectEnvsContentHintProjectsResponse7$ = {}));
export function filterProjectEnvsContentHintProjectsResponse7ToJSON(filterProjectEnvsContentHintProjectsResponse7) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse7$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse7));
}
export function filterProjectEnvsContentHintProjectsResponse7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse7' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse6$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse6$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse6$;
(function (FilterProjectEnvsContentHintProjectsResponse6$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse6$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse6$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse6$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse6$ || (FilterProjectEnvsContentHintProjectsResponse6$ = {}));
export function filterProjectEnvsContentHintProjectsResponse6ToJSON(filterProjectEnvsContentHintProjectsResponse6) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse6$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse6));
}
export function filterProjectEnvsContentHintProjectsResponse6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse6' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse5$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse5$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse5$;
(function (FilterProjectEnvsContentHintProjectsResponse5$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse5$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse5$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse5$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse5$ || (FilterProjectEnvsContentHintProjectsResponse5$ = {}));
export function filterProjectEnvsContentHintProjectsResponse5ToJSON(filterProjectEnvsContentHintProjectsResponse5) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse5$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse5));
}
export function filterProjectEnvsContentHintProjectsResponse5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse5' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse4$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse4$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse4$;
(function (FilterProjectEnvsContentHintProjectsResponse4$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse4$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse4$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse4$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse4$ || (FilterProjectEnvsContentHintProjectsResponse4$ = {}));
export function filterProjectEnvsContentHintProjectsResponse4ToJSON(filterProjectEnvsContentHintProjectsResponse4) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse4$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse4));
}
export function filterProjectEnvsContentHintProjectsResponse4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse4' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse3$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse3$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse3$;
(function (FilterProjectEnvsContentHintProjectsResponse3$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse3$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse3$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse3$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse3$ || (FilterProjectEnvsContentHintProjectsResponse3$ = {}));
export function filterProjectEnvsContentHintProjectsResponse3ToJSON(filterProjectEnvsContentHintProjectsResponse3) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse3$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse3));
}
export function filterProjectEnvsContentHintProjectsResponse3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse3' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse2$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse2$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse2$;
(function (FilterProjectEnvsContentHintProjectsResponse2$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse2$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse2$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse2$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse2$ || (FilterProjectEnvsContentHintProjectsResponse2$ = {}));
export function filterProjectEnvsContentHintProjectsResponse2ToJSON(filterProjectEnvsContentHintProjectsResponse2) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse2$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse2));
}
export function filterProjectEnvsContentHintProjectsResponse2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse2' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse1$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse1$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse1$;
(function (FilterProjectEnvsContentHintProjectsResponse1$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse1$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse1$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse1$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse1$ || (FilterProjectEnvsContentHintProjectsResponse1$ = {}));
export function filterProjectEnvsContentHintProjectsResponse1ToJSON(filterProjectEnvsContentHintProjectsResponse1) {
    return JSON.stringify(FilterProjectEnvsContentHintProjectsResponse1$outboundSchema.parse(filterProjectEnvsContentHintProjectsResponse1));
}
export function filterProjectEnvsContentHintProjectsResponse1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjectsResponse1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjectsResponse1' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse15$inboundSchema),
]);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsContentHint$;
(function (FilterProjectEnvsResponseBodyProjectsContentHint$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsContentHint$.inboundSchema = FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsContentHint$.outboundSchema = FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsContentHint$ || (FilterProjectEnvsResponseBodyProjectsContentHint$ = {}));
export function filterProjectEnvsResponseBodyProjectsContentHintToJSON(filterProjectEnvsResponseBodyProjectsContentHint) {
    return JSON.stringify(FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema.parse(filterProjectEnvsResponseBodyProjectsContentHint));
}
export function filterProjectEnvsResponseBodyProjectsContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyProjectsContentHint' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$;
(function (FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$.inboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$.outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$ || (FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$ = {}));
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsInternalContentHint$;
(function (FilterProjectEnvsResponseBodyProjectsInternalContentHint$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsInternalContentHint$.inboundSchema = FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsInternalContentHint$.outboundSchema = FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsInternalContentHint$ || (FilterProjectEnvsResponseBodyProjectsInternalContentHint$ = {}));
export function filterProjectEnvsResponseBodyProjectsInternalContentHintToJSON(filterProjectEnvsResponseBodyProjectsInternalContentHint) {
    return JSON.stringify(FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema
        .parse(filterProjectEnvsResponseBodyProjectsInternalContentHint));
}
export function filterProjectEnvsResponseBodyProjectsInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyProjectsInternalContentHint' from JSON`);
}
/** @internal */
export const ResponseBodyEnvs$inboundSchema = z.object({
    target: z.union([
        z.array(FilterProjectEnvsTargetProjectsResponse1$inboundSchema),
        FilterProjectEnvsTargetProjectsResponse2$inboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/** @internal */
export const ResponseBodyEnvs$outboundSchema = z.object({
    target: z.union([
        z.array(FilterProjectEnvsTargetProjectsResponse1$outboundSchema),
        FilterProjectEnvsTargetProjectsResponse2$outboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjectsResponse15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyEnvs$;
(function (ResponseBodyEnvs$) {
    /** @deprecated use `ResponseBodyEnvs$inboundSchema` instead. */
    ResponseBodyEnvs$.inboundSchema = ResponseBodyEnvs$inboundSchema;
    /** @deprecated use `ResponseBodyEnvs$outboundSchema` instead. */
    ResponseBodyEnvs$.outboundSchema = ResponseBodyEnvs$outboundSchema;
})(ResponseBodyEnvs$ || (ResponseBodyEnvs$ = {}));
export function responseBodyEnvsToJSON(responseBodyEnvs) {
    return JSON.stringify(ResponseBodyEnvs$outboundSchema.parse(responseBodyEnvs));
}
export function responseBodyEnvsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyEnvs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyEnvs' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBody3$inboundSchema = z.object({
    envs: z.array(z.lazy(() => ResponseBodyEnvs$inboundSchema)),
});
/** @internal */
export const FilterProjectEnvsResponseBody3$outboundSchema = z.object({
    envs: z.array(z.lazy(() => ResponseBodyEnvs$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBody3$;
(function (FilterProjectEnvsResponseBody3$) {
    /** @deprecated use `FilterProjectEnvsResponseBody3$inboundSchema` instead. */
    FilterProjectEnvsResponseBody3$.inboundSchema = FilterProjectEnvsResponseBody3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody3$outboundSchema` instead. */
    FilterProjectEnvsResponseBody3$.outboundSchema = FilterProjectEnvsResponseBody3$outboundSchema;
})(FilterProjectEnvsResponseBody3$ || (FilterProjectEnvsResponseBody3$ = {}));
export function filterProjectEnvsResponseBody3ToJSON(filterProjectEnvsResponseBody3) {
    return JSON.stringify(FilterProjectEnvsResponseBody3$outboundSchema.parse(filterProjectEnvsResponseBody3));
}
export function filterProjectEnvsResponseBody3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBody3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBody3' from JSON`);
}
/** @internal */
export const FilterProjectEnvsTargetProjects2$inboundSchema = z.nativeEnum(FilterProjectEnvsTargetProjects2);
/** @internal */
export const FilterProjectEnvsTargetProjects2$outboundSchema = FilterProjectEnvsTargetProjects2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTargetProjects2$;
(function (FilterProjectEnvsTargetProjects2$) {
    /** @deprecated use `FilterProjectEnvsTargetProjects2$inboundSchema` instead. */
    FilterProjectEnvsTargetProjects2$.inboundSchema = FilterProjectEnvsTargetProjects2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjects2$outboundSchema` instead. */
    FilterProjectEnvsTargetProjects2$.outboundSchema = FilterProjectEnvsTargetProjects2$outboundSchema;
})(FilterProjectEnvsTargetProjects2$ || (FilterProjectEnvsTargetProjects2$ = {}));
/** @internal */
export const FilterProjectEnvsTargetProjects1$inboundSchema = z.nativeEnum(FilterProjectEnvsTargetProjects1);
/** @internal */
export const FilterProjectEnvsTargetProjects1$outboundSchema = FilterProjectEnvsTargetProjects1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTargetProjects1$;
(function (FilterProjectEnvsTargetProjects1$) {
    /** @deprecated use `FilterProjectEnvsTargetProjects1$inboundSchema` instead. */
    FilterProjectEnvsTargetProjects1$.inboundSchema = FilterProjectEnvsTargetProjects1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjects1$outboundSchema` instead. */
    FilterProjectEnvsTargetProjects1$.outboundSchema = FilterProjectEnvsTargetProjects1$outboundSchema;
})(FilterProjectEnvsTargetProjects1$ || (FilterProjectEnvsTargetProjects1$ = {}));
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema = z.union([
    z.array(FilterProjectEnvsTargetProjects1$inboundSchema),
    FilterProjectEnvsTargetProjects2$inboundSchema,
]);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema = z.union([
    z.array(FilterProjectEnvsTargetProjects1$outboundSchema),
    FilterProjectEnvsTargetProjects2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsTarget$;
(function (FilterProjectEnvsResponseBodyProjectsTarget$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsTarget$.inboundSchema = FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsTarget$.outboundSchema = FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsTarget$ || (FilterProjectEnvsResponseBodyProjectsTarget$ = {}));
export function filterProjectEnvsResponseBodyProjectsTargetToJSON(filterProjectEnvsResponseBodyProjectsTarget) {
    return JSON.stringify(FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema.parse(filterProjectEnvsResponseBodyProjectsTarget));
}
export function filterProjectEnvsResponseBodyProjectsTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyProjectsTarget' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema = z
    .nativeEnum(FilterProjectEnvsResponseBodyProjectsResponseType);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema = FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsResponseType$;
(function (FilterProjectEnvsResponseBodyProjectsResponseType$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponseType$.inboundSchema = FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponseType$.outboundSchema = FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsResponseType$ || (FilterProjectEnvsResponseBodyProjectsResponseType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects15$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects15$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects15$;
(function (FilterProjectEnvsContentHintProjects15$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects15$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects15$.inboundSchema = FilterProjectEnvsContentHintProjects15$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects15$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects15$.outboundSchema = FilterProjectEnvsContentHintProjects15$outboundSchema;
})(FilterProjectEnvsContentHintProjects15$ || (FilterProjectEnvsContentHintProjects15$ = {}));
export function filterProjectEnvsContentHintProjects15ToJSON(filterProjectEnvsContentHintProjects15) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects15$outboundSchema.parse(filterProjectEnvsContentHintProjects15));
}
export function filterProjectEnvsContentHintProjects15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects15' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects14$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects14$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects14$;
(function (FilterProjectEnvsContentHintProjects14$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects14$.inboundSchema = FilterProjectEnvsContentHintProjects14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects14$.outboundSchema = FilterProjectEnvsContentHintProjects14$outboundSchema;
})(FilterProjectEnvsContentHintProjects14$ || (FilterProjectEnvsContentHintProjects14$ = {}));
export function filterProjectEnvsContentHintProjects14ToJSON(filterProjectEnvsContentHintProjects14) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects14$outboundSchema.parse(filterProjectEnvsContentHintProjects14));
}
export function filterProjectEnvsContentHintProjects14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects14' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects13$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects13$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects13$;
(function (FilterProjectEnvsContentHintProjects13$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects13$.inboundSchema = FilterProjectEnvsContentHintProjects13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects13$.outboundSchema = FilterProjectEnvsContentHintProjects13$outboundSchema;
})(FilterProjectEnvsContentHintProjects13$ || (FilterProjectEnvsContentHintProjects13$ = {}));
export function filterProjectEnvsContentHintProjects13ToJSON(filterProjectEnvsContentHintProjects13) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects13$outboundSchema.parse(filterProjectEnvsContentHintProjects13));
}
export function filterProjectEnvsContentHintProjects13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects13' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects12$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects12$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects12$;
(function (FilterProjectEnvsContentHintProjects12$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects12$.inboundSchema = FilterProjectEnvsContentHintProjects12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects12$.outboundSchema = FilterProjectEnvsContentHintProjects12$outboundSchema;
})(FilterProjectEnvsContentHintProjects12$ || (FilterProjectEnvsContentHintProjects12$ = {}));
export function filterProjectEnvsContentHintProjects12ToJSON(filterProjectEnvsContentHintProjects12) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects12$outboundSchema.parse(filterProjectEnvsContentHintProjects12));
}
export function filterProjectEnvsContentHintProjects12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects12' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects11$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects11$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects11$;
(function (FilterProjectEnvsContentHintProjects11$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects11$.inboundSchema = FilterProjectEnvsContentHintProjects11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects11$.outboundSchema = FilterProjectEnvsContentHintProjects11$outboundSchema;
})(FilterProjectEnvsContentHintProjects11$ || (FilterProjectEnvsContentHintProjects11$ = {}));
export function filterProjectEnvsContentHintProjects11ToJSON(filterProjectEnvsContentHintProjects11) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects11$outboundSchema.parse(filterProjectEnvsContentHintProjects11));
}
export function filterProjectEnvsContentHintProjects11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects11' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects10$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects10$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects10$;
(function (FilterProjectEnvsContentHintProjects10$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects10$.inboundSchema = FilterProjectEnvsContentHintProjects10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects10$.outboundSchema = FilterProjectEnvsContentHintProjects10$outboundSchema;
})(FilterProjectEnvsContentHintProjects10$ || (FilterProjectEnvsContentHintProjects10$ = {}));
export function filterProjectEnvsContentHintProjects10ToJSON(filterProjectEnvsContentHintProjects10) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects10$outboundSchema.parse(filterProjectEnvsContentHintProjects10));
}
export function filterProjectEnvsContentHintProjects10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects10' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects9$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects9$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects9$;
(function (FilterProjectEnvsContentHintProjects9$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects9$.inboundSchema = FilterProjectEnvsContentHintProjects9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects9$.outboundSchema = FilterProjectEnvsContentHintProjects9$outboundSchema;
})(FilterProjectEnvsContentHintProjects9$ || (FilterProjectEnvsContentHintProjects9$ = {}));
export function filterProjectEnvsContentHintProjects9ToJSON(filterProjectEnvsContentHintProjects9) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects9$outboundSchema.parse(filterProjectEnvsContentHintProjects9));
}
export function filterProjectEnvsContentHintProjects9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects9' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects8$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects8$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects8$;
(function (FilterProjectEnvsContentHintProjects8$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects8$.inboundSchema = FilterProjectEnvsContentHintProjects8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects8$.outboundSchema = FilterProjectEnvsContentHintProjects8$outboundSchema;
})(FilterProjectEnvsContentHintProjects8$ || (FilterProjectEnvsContentHintProjects8$ = {}));
export function filterProjectEnvsContentHintProjects8ToJSON(filterProjectEnvsContentHintProjects8) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects8$outboundSchema.parse(filterProjectEnvsContentHintProjects8));
}
export function filterProjectEnvsContentHintProjects8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects8' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects7$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects7$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects7$;
(function (FilterProjectEnvsContentHintProjects7$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects7$.inboundSchema = FilterProjectEnvsContentHintProjects7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects7$.outboundSchema = FilterProjectEnvsContentHintProjects7$outboundSchema;
})(FilterProjectEnvsContentHintProjects7$ || (FilterProjectEnvsContentHintProjects7$ = {}));
export function filterProjectEnvsContentHintProjects7ToJSON(filterProjectEnvsContentHintProjects7) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects7$outboundSchema.parse(filterProjectEnvsContentHintProjects7));
}
export function filterProjectEnvsContentHintProjects7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects7' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects6$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects6$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects6$;
(function (FilterProjectEnvsContentHintProjects6$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects6$.inboundSchema = FilterProjectEnvsContentHintProjects6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects6$.outboundSchema = FilterProjectEnvsContentHintProjects6$outboundSchema;
})(FilterProjectEnvsContentHintProjects6$ || (FilterProjectEnvsContentHintProjects6$ = {}));
export function filterProjectEnvsContentHintProjects6ToJSON(filterProjectEnvsContentHintProjects6) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects6$outboundSchema.parse(filterProjectEnvsContentHintProjects6));
}
export function filterProjectEnvsContentHintProjects6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects6' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects5$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects5$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects5$;
(function (FilterProjectEnvsContentHintProjects5$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects5$.inboundSchema = FilterProjectEnvsContentHintProjects5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects5$.outboundSchema = FilterProjectEnvsContentHintProjects5$outboundSchema;
})(FilterProjectEnvsContentHintProjects5$ || (FilterProjectEnvsContentHintProjects5$ = {}));
export function filterProjectEnvsContentHintProjects5ToJSON(filterProjectEnvsContentHintProjects5) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects5$outboundSchema.parse(filterProjectEnvsContentHintProjects5));
}
export function filterProjectEnvsContentHintProjects5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects5' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects4$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects4$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects4$;
(function (FilterProjectEnvsContentHintProjects4$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects4$.inboundSchema = FilterProjectEnvsContentHintProjects4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects4$.outboundSchema = FilterProjectEnvsContentHintProjects4$outboundSchema;
})(FilterProjectEnvsContentHintProjects4$ || (FilterProjectEnvsContentHintProjects4$ = {}));
export function filterProjectEnvsContentHintProjects4ToJSON(filterProjectEnvsContentHintProjects4) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects4$outboundSchema.parse(filterProjectEnvsContentHintProjects4));
}
export function filterProjectEnvsContentHintProjects4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects4' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects3$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects3$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects3$;
(function (FilterProjectEnvsContentHintProjects3$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects3$.inboundSchema = FilterProjectEnvsContentHintProjects3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects3$.outboundSchema = FilterProjectEnvsContentHintProjects3$outboundSchema;
})(FilterProjectEnvsContentHintProjects3$ || (FilterProjectEnvsContentHintProjects3$ = {}));
export function filterProjectEnvsContentHintProjects3ToJSON(filterProjectEnvsContentHintProjects3) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects3$outboundSchema.parse(filterProjectEnvsContentHintProjects3));
}
export function filterProjectEnvsContentHintProjects3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects3' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects2$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects2$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects2$;
(function (FilterProjectEnvsContentHintProjects2$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects2$.inboundSchema = FilterProjectEnvsContentHintProjects2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects2$.outboundSchema = FilterProjectEnvsContentHintProjects2$outboundSchema;
})(FilterProjectEnvsContentHintProjects2$ || (FilterProjectEnvsContentHintProjects2$ = {}));
export function filterProjectEnvsContentHintProjects2ToJSON(filterProjectEnvsContentHintProjects2) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects2$outboundSchema.parse(filterProjectEnvsContentHintProjects2));
}
export function filterProjectEnvsContentHintProjects2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects2' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjects1$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHintProjects1$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjects1$;
(function (FilterProjectEnvsContentHintProjects1$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjects1$.inboundSchema = FilterProjectEnvsContentHintProjects1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjects1$.outboundSchema = FilterProjectEnvsContentHintProjects1$outboundSchema;
})(FilterProjectEnvsContentHintProjects1$ || (FilterProjectEnvsContentHintProjects1$ = {}));
export function filterProjectEnvsContentHintProjects1ToJSON(filterProjectEnvsContentHintProjects1) {
    return JSON.stringify(FilterProjectEnvsContentHintProjects1$outboundSchema.parse(filterProjectEnvsContentHintProjects1));
}
export function filterProjectEnvsContentHintProjects1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHintProjects1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHintProjects1' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyContentHint$inboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjects14$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects15$inboundSchema),
]);
/** @internal */
export const FilterProjectEnvsResponseBodyContentHint$outboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjects14$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyContentHint$;
(function (FilterProjectEnvsResponseBodyContentHint$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyContentHint$.inboundSchema = FilterProjectEnvsResponseBodyContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyContentHint$.outboundSchema = FilterProjectEnvsResponseBodyContentHint$outboundSchema;
})(FilterProjectEnvsResponseBodyContentHint$ || (FilterProjectEnvsResponseBodyContentHint$ = {}));
export function filterProjectEnvsResponseBodyContentHintToJSON(filterProjectEnvsResponseBodyContentHint) {
    return JSON.stringify(FilterProjectEnvsResponseBodyContentHint$outboundSchema.parse(filterProjectEnvsResponseBodyContentHint));
}
export function filterProjectEnvsResponseBodyContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyContentHint' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$;
(function (FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$.inboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$.outboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$ || (FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyInternalContentHint$;
(function (FilterProjectEnvsResponseBodyInternalContentHint$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyInternalContentHint$.inboundSchema = FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyInternalContentHint$.outboundSchema = FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema;
})(FilterProjectEnvsResponseBodyInternalContentHint$ || (FilterProjectEnvsResponseBodyInternalContentHint$ = {}));
export function filterProjectEnvsResponseBodyInternalContentHintToJSON(filterProjectEnvsResponseBodyInternalContentHint) {
    return JSON.stringify(FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema.parse(filterProjectEnvsResponseBodyInternalContentHint));
}
export function filterProjectEnvsResponseBodyInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyInternalContentHint' from JSON`);
}
/** @internal */
export const Envs$inboundSchema = z
    .object({
    target: z.union([
        z.array(FilterProjectEnvsTargetProjects1$inboundSchema),
        FilterProjectEnvsTargetProjects2$inboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHintProjects14$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects1$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects2$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects3$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects4$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects5$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects6$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects7$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects8$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects9$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects10$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects11$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects12$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects13$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/** @internal */
export const Envs$outboundSchema = z.object({
    target: z.union([
        z.array(FilterProjectEnvsTargetProjects1$outboundSchema),
        FilterProjectEnvsTargetProjects2$outboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHintProjects14$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects1$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects2$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects3$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects4$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects5$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects6$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects7$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects8$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects9$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects10$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects11$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects12$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects13$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHintProjects15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Envs$;
(function (Envs$) {
    /** @deprecated use `Envs$inboundSchema` instead. */
    Envs$.inboundSchema = Envs$inboundSchema;
    /** @deprecated use `Envs$outboundSchema` instead. */
    Envs$.outboundSchema = Envs$outboundSchema;
})(Envs$ || (Envs$ = {}));
export function envsToJSON(envs) {
    return JSON.stringify(Envs$outboundSchema.parse(envs));
}
export function envsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Envs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Envs' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBody2$inboundSchema = z.object({
    envs: z.array(z.lazy(() => Envs$inboundSchema)),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const FilterProjectEnvsResponseBody2$outboundSchema = z.object({
    envs: z.array(z.lazy(() => Envs$outboundSchema)),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBody2$;
(function (FilterProjectEnvsResponseBody2$) {
    /** @deprecated use `FilterProjectEnvsResponseBody2$inboundSchema` instead. */
    FilterProjectEnvsResponseBody2$.inboundSchema = FilterProjectEnvsResponseBody2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody2$outboundSchema` instead. */
    FilterProjectEnvsResponseBody2$.outboundSchema = FilterProjectEnvsResponseBody2$outboundSchema;
})(FilterProjectEnvsResponseBody2$ || (FilterProjectEnvsResponseBody2$ = {}));
export function filterProjectEnvsResponseBody2ToJSON(filterProjectEnvsResponseBody2) {
    return JSON.stringify(FilterProjectEnvsResponseBody2$outboundSchema.parse(filterProjectEnvsResponseBody2));
}
export function filterProjectEnvsResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBody2' from JSON`);
}
/** @internal */
export const FilterProjectEnvsTarget2$inboundSchema = z.nativeEnum(FilterProjectEnvsTarget2);
/** @internal */
export const FilterProjectEnvsTarget2$outboundSchema = FilterProjectEnvsTarget2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTarget2$;
(function (FilterProjectEnvsTarget2$) {
    /** @deprecated use `FilterProjectEnvsTarget2$inboundSchema` instead. */
    FilterProjectEnvsTarget2$.inboundSchema = FilterProjectEnvsTarget2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTarget2$outboundSchema` instead. */
    FilterProjectEnvsTarget2$.outboundSchema = FilterProjectEnvsTarget2$outboundSchema;
})(FilterProjectEnvsTarget2$ || (FilterProjectEnvsTarget2$ = {}));
/** @internal */
export const FilterProjectEnvsTarget1$inboundSchema = z.nativeEnum(FilterProjectEnvsTarget1);
/** @internal */
export const FilterProjectEnvsTarget1$outboundSchema = FilterProjectEnvsTarget1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsTarget1$;
(function (FilterProjectEnvsTarget1$) {
    /** @deprecated use `FilterProjectEnvsTarget1$inboundSchema` instead. */
    FilterProjectEnvsTarget1$.inboundSchema = FilterProjectEnvsTarget1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTarget1$outboundSchema` instead. */
    FilterProjectEnvsTarget1$.outboundSchema = FilterProjectEnvsTarget1$outboundSchema;
})(FilterProjectEnvsTarget1$ || (FilterProjectEnvsTarget1$ = {}));
/** @internal */
export const FilterProjectEnvsResponseBodyTarget$inboundSchema = z.union([
    z.array(FilterProjectEnvsTarget1$inboundSchema),
    FilterProjectEnvsTarget2$inboundSchema,
]);
/** @internal */
export const FilterProjectEnvsResponseBodyTarget$outboundSchema = z.union([
    z.array(FilterProjectEnvsTarget1$outboundSchema),
    FilterProjectEnvsTarget2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyTarget$;
(function (FilterProjectEnvsResponseBodyTarget$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyTarget$.inboundSchema = FilterProjectEnvsResponseBodyTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyTarget$.outboundSchema = FilterProjectEnvsResponseBodyTarget$outboundSchema;
})(FilterProjectEnvsResponseBodyTarget$ || (FilterProjectEnvsResponseBodyTarget$ = {}));
export function filterProjectEnvsResponseBodyTargetToJSON(filterProjectEnvsResponseBodyTarget) {
    return JSON.stringify(FilterProjectEnvsResponseBodyTarget$outboundSchema.parse(filterProjectEnvsResponseBodyTarget));
}
export function filterProjectEnvsResponseBodyTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBodyTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBodyTarget' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyType$inboundSchema = z.nativeEnum(FilterProjectEnvsResponseBodyType);
/** @internal */
export const FilterProjectEnvsResponseBodyType$outboundSchema = FilterProjectEnvsResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyType$;
(function (FilterProjectEnvsResponseBodyType$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyType$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyType$.inboundSchema = FilterProjectEnvsResponseBodyType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyType$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyType$.outboundSchema = FilterProjectEnvsResponseBodyType$outboundSchema;
})(FilterProjectEnvsResponseBodyType$ || (FilterProjectEnvsResponseBodyType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint15$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint15$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint15$;
(function (FilterProjectEnvsContentHint15$) {
    /** @deprecated use `FilterProjectEnvsContentHint15$inboundSchema` instead. */
    FilterProjectEnvsContentHint15$.inboundSchema = FilterProjectEnvsContentHint15$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint15$outboundSchema` instead. */
    FilterProjectEnvsContentHint15$.outboundSchema = FilterProjectEnvsContentHint15$outboundSchema;
})(FilterProjectEnvsContentHint15$ || (FilterProjectEnvsContentHint15$ = {}));
export function filterProjectEnvsContentHint15ToJSON(filterProjectEnvsContentHint15) {
    return JSON.stringify(FilterProjectEnvsContentHint15$outboundSchema.parse(filterProjectEnvsContentHint15));
}
export function filterProjectEnvsContentHint15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint15' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint14$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint14$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint14$;
(function (FilterProjectEnvsContentHint14$) {
    /** @deprecated use `FilterProjectEnvsContentHint14$inboundSchema` instead. */
    FilterProjectEnvsContentHint14$.inboundSchema = FilterProjectEnvsContentHint14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint14$outboundSchema` instead. */
    FilterProjectEnvsContentHint14$.outboundSchema = FilterProjectEnvsContentHint14$outboundSchema;
})(FilterProjectEnvsContentHint14$ || (FilterProjectEnvsContentHint14$ = {}));
export function filterProjectEnvsContentHint14ToJSON(filterProjectEnvsContentHint14) {
    return JSON.stringify(FilterProjectEnvsContentHint14$outboundSchema.parse(filterProjectEnvsContentHint14));
}
export function filterProjectEnvsContentHint14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint14' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint13$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint13$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint13$;
(function (FilterProjectEnvsContentHint13$) {
    /** @deprecated use `FilterProjectEnvsContentHint13$inboundSchema` instead. */
    FilterProjectEnvsContentHint13$.inboundSchema = FilterProjectEnvsContentHint13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint13$outboundSchema` instead. */
    FilterProjectEnvsContentHint13$.outboundSchema = FilterProjectEnvsContentHint13$outboundSchema;
})(FilterProjectEnvsContentHint13$ || (FilterProjectEnvsContentHint13$ = {}));
export function filterProjectEnvsContentHint13ToJSON(filterProjectEnvsContentHint13) {
    return JSON.stringify(FilterProjectEnvsContentHint13$outboundSchema.parse(filterProjectEnvsContentHint13));
}
export function filterProjectEnvsContentHint13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint13' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint12$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint12$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint12$;
(function (FilterProjectEnvsContentHint12$) {
    /** @deprecated use `FilterProjectEnvsContentHint12$inboundSchema` instead. */
    FilterProjectEnvsContentHint12$.inboundSchema = FilterProjectEnvsContentHint12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint12$outboundSchema` instead. */
    FilterProjectEnvsContentHint12$.outboundSchema = FilterProjectEnvsContentHint12$outboundSchema;
})(FilterProjectEnvsContentHint12$ || (FilterProjectEnvsContentHint12$ = {}));
export function filterProjectEnvsContentHint12ToJSON(filterProjectEnvsContentHint12) {
    return JSON.stringify(FilterProjectEnvsContentHint12$outboundSchema.parse(filterProjectEnvsContentHint12));
}
export function filterProjectEnvsContentHint12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint12' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint11$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint11$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint11$;
(function (FilterProjectEnvsContentHint11$) {
    /** @deprecated use `FilterProjectEnvsContentHint11$inboundSchema` instead. */
    FilterProjectEnvsContentHint11$.inboundSchema = FilterProjectEnvsContentHint11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint11$outboundSchema` instead. */
    FilterProjectEnvsContentHint11$.outboundSchema = FilterProjectEnvsContentHint11$outboundSchema;
})(FilterProjectEnvsContentHint11$ || (FilterProjectEnvsContentHint11$ = {}));
export function filterProjectEnvsContentHint11ToJSON(filterProjectEnvsContentHint11) {
    return JSON.stringify(FilterProjectEnvsContentHint11$outboundSchema.parse(filterProjectEnvsContentHint11));
}
export function filterProjectEnvsContentHint11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint11' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint10$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint10$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint10$;
(function (FilterProjectEnvsContentHint10$) {
    /** @deprecated use `FilterProjectEnvsContentHint10$inboundSchema` instead. */
    FilterProjectEnvsContentHint10$.inboundSchema = FilterProjectEnvsContentHint10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint10$outboundSchema` instead. */
    FilterProjectEnvsContentHint10$.outboundSchema = FilterProjectEnvsContentHint10$outboundSchema;
})(FilterProjectEnvsContentHint10$ || (FilterProjectEnvsContentHint10$ = {}));
export function filterProjectEnvsContentHint10ToJSON(filterProjectEnvsContentHint10) {
    return JSON.stringify(FilterProjectEnvsContentHint10$outboundSchema.parse(filterProjectEnvsContentHint10));
}
export function filterProjectEnvsContentHint10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint10' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint9$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint9$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint9$;
(function (FilterProjectEnvsContentHint9$) {
    /** @deprecated use `FilterProjectEnvsContentHint9$inboundSchema` instead. */
    FilterProjectEnvsContentHint9$.inboundSchema = FilterProjectEnvsContentHint9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint9$outboundSchema` instead. */
    FilterProjectEnvsContentHint9$.outboundSchema = FilterProjectEnvsContentHint9$outboundSchema;
})(FilterProjectEnvsContentHint9$ || (FilterProjectEnvsContentHint9$ = {}));
export function filterProjectEnvsContentHint9ToJSON(filterProjectEnvsContentHint9) {
    return JSON.stringify(FilterProjectEnvsContentHint9$outboundSchema.parse(filterProjectEnvsContentHint9));
}
export function filterProjectEnvsContentHint9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint9' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint8$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint8$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint8$;
(function (FilterProjectEnvsContentHint8$) {
    /** @deprecated use `FilterProjectEnvsContentHint8$inboundSchema` instead. */
    FilterProjectEnvsContentHint8$.inboundSchema = FilterProjectEnvsContentHint8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint8$outboundSchema` instead. */
    FilterProjectEnvsContentHint8$.outboundSchema = FilterProjectEnvsContentHint8$outboundSchema;
})(FilterProjectEnvsContentHint8$ || (FilterProjectEnvsContentHint8$ = {}));
export function filterProjectEnvsContentHint8ToJSON(filterProjectEnvsContentHint8) {
    return JSON.stringify(FilterProjectEnvsContentHint8$outboundSchema.parse(filterProjectEnvsContentHint8));
}
export function filterProjectEnvsContentHint8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint8' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint7$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint7$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint7$;
(function (FilterProjectEnvsContentHint7$) {
    /** @deprecated use `FilterProjectEnvsContentHint7$inboundSchema` instead. */
    FilterProjectEnvsContentHint7$.inboundSchema = FilterProjectEnvsContentHint7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint7$outboundSchema` instead. */
    FilterProjectEnvsContentHint7$.outboundSchema = FilterProjectEnvsContentHint7$outboundSchema;
})(FilterProjectEnvsContentHint7$ || (FilterProjectEnvsContentHint7$ = {}));
export function filterProjectEnvsContentHint7ToJSON(filterProjectEnvsContentHint7) {
    return JSON.stringify(FilterProjectEnvsContentHint7$outboundSchema.parse(filterProjectEnvsContentHint7));
}
export function filterProjectEnvsContentHint7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint7' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint6$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint6$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint6$;
(function (FilterProjectEnvsContentHint6$) {
    /** @deprecated use `FilterProjectEnvsContentHint6$inboundSchema` instead. */
    FilterProjectEnvsContentHint6$.inboundSchema = FilterProjectEnvsContentHint6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint6$outboundSchema` instead. */
    FilterProjectEnvsContentHint6$.outboundSchema = FilterProjectEnvsContentHint6$outboundSchema;
})(FilterProjectEnvsContentHint6$ || (FilterProjectEnvsContentHint6$ = {}));
export function filterProjectEnvsContentHint6ToJSON(filterProjectEnvsContentHint6) {
    return JSON.stringify(FilterProjectEnvsContentHint6$outboundSchema.parse(filterProjectEnvsContentHint6));
}
export function filterProjectEnvsContentHint6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint6' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$;
(function (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$ || (FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint5$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint5$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint5$;
(function (FilterProjectEnvsContentHint5$) {
    /** @deprecated use `FilterProjectEnvsContentHint5$inboundSchema` instead. */
    FilterProjectEnvsContentHint5$.inboundSchema = FilterProjectEnvsContentHint5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint5$outboundSchema` instead. */
    FilterProjectEnvsContentHint5$.outboundSchema = FilterProjectEnvsContentHint5$outboundSchema;
})(FilterProjectEnvsContentHint5$ || (FilterProjectEnvsContentHint5$ = {}));
export function filterProjectEnvsContentHint5ToJSON(filterProjectEnvsContentHint5) {
    return JSON.stringify(FilterProjectEnvsContentHint5$outboundSchema.parse(filterProjectEnvsContentHint5));
}
export function filterProjectEnvsContentHint5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint5' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200Type);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema = FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponse200Type$;
(function (FilterProjectEnvsContentHintProjectsResponse200Type$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200Type$.inboundSchema = FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponse200Type$.outboundSchema = FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponse200Type$ || (FilterProjectEnvsContentHintProjectsResponse200Type$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint4$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint4$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint4$;
(function (FilterProjectEnvsContentHint4$) {
    /** @deprecated use `FilterProjectEnvsContentHint4$inboundSchema` instead. */
    FilterProjectEnvsContentHint4$.inboundSchema = FilterProjectEnvsContentHint4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint4$outboundSchema` instead. */
    FilterProjectEnvsContentHint4$.outboundSchema = FilterProjectEnvsContentHint4$outboundSchema;
})(FilterProjectEnvsContentHint4$ || (FilterProjectEnvsContentHint4$ = {}));
export function filterProjectEnvsContentHint4ToJSON(filterProjectEnvsContentHint4) {
    return JSON.stringify(FilterProjectEnvsContentHint4$outboundSchema.parse(filterProjectEnvsContentHint4));
}
export function filterProjectEnvsContentHint4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint4' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponseType$inboundSchema = z
    .nativeEnum(FilterProjectEnvsContentHintProjectsResponseType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsResponseType$outboundSchema = FilterProjectEnvsContentHintProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsResponseType$;
(function (FilterProjectEnvsContentHintProjectsResponseType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponseType$.inboundSchema = FilterProjectEnvsContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsResponseType$.outboundSchema = FilterProjectEnvsContentHintProjectsResponseType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsResponseType$ || (FilterProjectEnvsContentHintProjectsResponseType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint3$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint3$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint3$;
(function (FilterProjectEnvsContentHint3$) {
    /** @deprecated use `FilterProjectEnvsContentHint3$inboundSchema` instead. */
    FilterProjectEnvsContentHint3$.inboundSchema = FilterProjectEnvsContentHint3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint3$outboundSchema` instead. */
    FilterProjectEnvsContentHint3$.outboundSchema = FilterProjectEnvsContentHint3$outboundSchema;
})(FilterProjectEnvsContentHint3$ || (FilterProjectEnvsContentHint3$ = {}));
export function filterProjectEnvsContentHint3ToJSON(filterProjectEnvsContentHint3) {
    return JSON.stringify(FilterProjectEnvsContentHint3$outboundSchema.parse(filterProjectEnvsContentHint3));
}
export function filterProjectEnvsContentHint3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint3' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintProjectsType$inboundSchema = z
    .nativeEnum(FilterProjectEnvsContentHintProjectsType);
/** @internal */
export const FilterProjectEnvsContentHintProjectsType$outboundSchema = FilterProjectEnvsContentHintProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintProjectsType$;
(function (FilterProjectEnvsContentHintProjectsType$) {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$inboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsType$.inboundSchema = FilterProjectEnvsContentHintProjectsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$outboundSchema` instead. */
    FilterProjectEnvsContentHintProjectsType$.outboundSchema = FilterProjectEnvsContentHintProjectsType$outboundSchema;
})(FilterProjectEnvsContentHintProjectsType$ || (FilterProjectEnvsContentHintProjectsType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint2$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint2$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint2$;
(function (FilterProjectEnvsContentHint2$) {
    /** @deprecated use `FilterProjectEnvsContentHint2$inboundSchema` instead. */
    FilterProjectEnvsContentHint2$.inboundSchema = FilterProjectEnvsContentHint2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint2$outboundSchema` instead. */
    FilterProjectEnvsContentHint2$.outboundSchema = FilterProjectEnvsContentHint2$outboundSchema;
})(FilterProjectEnvsContentHint2$ || (FilterProjectEnvsContentHint2$ = {}));
export function filterProjectEnvsContentHint2ToJSON(filterProjectEnvsContentHint2) {
    return JSON.stringify(FilterProjectEnvsContentHint2$outboundSchema.parse(filterProjectEnvsContentHint2));
}
export function filterProjectEnvsContentHint2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint2' from JSON`);
}
/** @internal */
export const FilterProjectEnvsContentHintType$inboundSchema = z.nativeEnum(FilterProjectEnvsContentHintType);
/** @internal */
export const FilterProjectEnvsContentHintType$outboundSchema = FilterProjectEnvsContentHintType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHintType$;
(function (FilterProjectEnvsContentHintType$) {
    /** @deprecated use `FilterProjectEnvsContentHintType$inboundSchema` instead. */
    FilterProjectEnvsContentHintType$.inboundSchema = FilterProjectEnvsContentHintType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintType$outboundSchema` instead. */
    FilterProjectEnvsContentHintType$.outboundSchema = FilterProjectEnvsContentHintType$outboundSchema;
})(FilterProjectEnvsContentHintType$ || (FilterProjectEnvsContentHintType$ = {}));
/** @internal */
export const FilterProjectEnvsContentHint1$inboundSchema = z.object({
    type: FilterProjectEnvsContentHintType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const FilterProjectEnvsContentHint1$outboundSchema = z.object({
    type: FilterProjectEnvsContentHintType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsContentHint1$;
(function (FilterProjectEnvsContentHint1$) {
    /** @deprecated use `FilterProjectEnvsContentHint1$inboundSchema` instead. */
    FilterProjectEnvsContentHint1$.inboundSchema = FilterProjectEnvsContentHint1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint1$outboundSchema` instead. */
    FilterProjectEnvsContentHint1$.outboundSchema = FilterProjectEnvsContentHint1$outboundSchema;
})(FilterProjectEnvsContentHint1$ || (FilterProjectEnvsContentHint1$ = {}));
export function filterProjectEnvsContentHint1ToJSON(filterProjectEnvsContentHint1) {
    return JSON.stringify(FilterProjectEnvsContentHint1$outboundSchema.parse(filterProjectEnvsContentHint1));
}
export function filterProjectEnvsContentHint1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsContentHint1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsContentHint1' from JSON`);
}
/** @internal */
export const ResponseBodyContentHint$inboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHint14$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint15$inboundSchema),
]);
/** @internal */
export const ResponseBodyContentHint$outboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsContentHint14$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyContentHint$;
(function (ResponseBodyContentHint$) {
    /** @deprecated use `ResponseBodyContentHint$inboundSchema` instead. */
    ResponseBodyContentHint$.inboundSchema = ResponseBodyContentHint$inboundSchema;
    /** @deprecated use `ResponseBodyContentHint$outboundSchema` instead. */
    ResponseBodyContentHint$.outboundSchema = ResponseBodyContentHint$outboundSchema;
})(ResponseBodyContentHint$ || (ResponseBodyContentHint$ = {}));
export function responseBodyContentHintToJSON(responseBodyContentHint) {
    return JSON.stringify(ResponseBodyContentHint$outboundSchema.parse(responseBodyContentHint));
}
export function responseBodyContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyContentHint' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsType$inboundSchema = z
    .nativeEnum(FilterProjectEnvsResponseBodyProjectsType);
/** @internal */
export const FilterProjectEnvsResponseBodyProjectsType$outboundSchema = FilterProjectEnvsResponseBodyProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBodyProjectsType$;
(function (FilterProjectEnvsResponseBodyProjectsType$) {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$inboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsType$.inboundSchema = FilterProjectEnvsResponseBodyProjectsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$outboundSchema` instead. */
    FilterProjectEnvsResponseBodyProjectsType$.outboundSchema = FilterProjectEnvsResponseBodyProjectsType$outboundSchema;
})(FilterProjectEnvsResponseBodyProjectsType$ || (FilterProjectEnvsResponseBodyProjectsType$ = {}));
/** @internal */
export const ResponseBodyInternalContentHint$inboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const ResponseBodyInternalContentHint$outboundSchema = z.object({
    type: FilterProjectEnvsResponseBodyProjectsType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyInternalContentHint$;
(function (ResponseBodyInternalContentHint$) {
    /** @deprecated use `ResponseBodyInternalContentHint$inboundSchema` instead. */
    ResponseBodyInternalContentHint$.inboundSchema = ResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `ResponseBodyInternalContentHint$outboundSchema` instead. */
    ResponseBodyInternalContentHint$.outboundSchema = ResponseBodyInternalContentHint$outboundSchema;
})(ResponseBodyInternalContentHint$ || (ResponseBodyInternalContentHint$ = {}));
export function responseBodyInternalContentHintToJSON(responseBodyInternalContentHint) {
    return JSON.stringify(ResponseBodyInternalContentHint$outboundSchema.parse(responseBodyInternalContentHint));
}
export function responseBodyInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyInternalContentHint' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBody1$inboundSchema = z.object({
    target: z.union([
        z.array(FilterProjectEnvsTarget1$inboundSchema),
        FilterProjectEnvsTarget2$inboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHint14$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint1$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint2$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint3$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint4$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint5$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint6$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint7$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint8$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint9$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint10$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint11$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint12$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint13$inboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => ResponseBodyInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/** @internal */
export const FilterProjectEnvsResponseBody1$outboundSchema = z.object({
    target: z.union([
        z.array(FilterProjectEnvsTarget1$outboundSchema),
        FilterProjectEnvsTarget2$outboundSchema,
    ]).optional(),
    type: FilterProjectEnvsResponseBodyType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => FilterProjectEnvsContentHint14$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint1$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint2$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint3$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint4$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint5$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint6$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint7$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint8$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint9$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint10$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint11$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint12$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint13$outboundSchema),
        z.lazy(() => FilterProjectEnvsContentHint15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => ResponseBodyInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBody1$;
(function (FilterProjectEnvsResponseBody1$) {
    /** @deprecated use `FilterProjectEnvsResponseBody1$inboundSchema` instead. */
    FilterProjectEnvsResponseBody1$.inboundSchema = FilterProjectEnvsResponseBody1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody1$outboundSchema` instead. */
    FilterProjectEnvsResponseBody1$.outboundSchema = FilterProjectEnvsResponseBody1$outboundSchema;
})(FilterProjectEnvsResponseBody1$ || (FilterProjectEnvsResponseBody1$ = {}));
export function filterProjectEnvsResponseBody1ToJSON(filterProjectEnvsResponseBody1) {
    return JSON.stringify(FilterProjectEnvsResponseBody1$outboundSchema.parse(filterProjectEnvsResponseBody1));
}
export function filterProjectEnvsResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBody1' from JSON`);
}
/** @internal */
export const FilterProjectEnvsResponseBody$inboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsResponseBody1$inboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody2$inboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody3$inboundSchema),
]);
/** @internal */
export const FilterProjectEnvsResponseBody$outboundSchema = z.union([
    z.lazy(() => FilterProjectEnvsResponseBody1$outboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody2$outboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody3$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FilterProjectEnvsResponseBody$;
(function (FilterProjectEnvsResponseBody$) {
    /** @deprecated use `FilterProjectEnvsResponseBody$inboundSchema` instead. */
    FilterProjectEnvsResponseBody$.inboundSchema = FilterProjectEnvsResponseBody$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody$outboundSchema` instead. */
    FilterProjectEnvsResponseBody$.outboundSchema = FilterProjectEnvsResponseBody$outboundSchema;
})(FilterProjectEnvsResponseBody$ || (FilterProjectEnvsResponseBody$ = {}));
export function filterProjectEnvsResponseBodyToJSON(filterProjectEnvsResponseBody) {
    return JSON.stringify(FilterProjectEnvsResponseBody$outboundSchema.parse(filterProjectEnvsResponseBody));
}
export function filterProjectEnvsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FilterProjectEnvsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FilterProjectEnvsResponseBody' from JSON`);
}
//# sourceMappingURL=filterprojectenvsop.js.map