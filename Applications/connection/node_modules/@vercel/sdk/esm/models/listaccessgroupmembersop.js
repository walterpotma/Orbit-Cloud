/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const TeamRole = {
    Owner: "OWNER",
    Member: "MEMBER",
    Developer: "DEVELOPER",
    Security: "SECURITY",
    Billing: "BILLING",
    Viewer: "VIEWER",
    ViewerForPlus: "VIEWER_FOR_PLUS",
    Contributor: "CONTRIBUTOR",
};
/** @internal */
export const ListAccessGroupMembersRequest$inboundSchema = z.object({
    idOrName: z.string(),
    limit: z.number().int().optional(),
    next: z.string().optional(),
    search: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const ListAccessGroupMembersRequest$outboundSchema = z.object({
    idOrName: z.string(),
    limit: z.number().int().optional(),
    next: z.string().optional(),
    search: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupMembersRequest$;
(function (ListAccessGroupMembersRequest$) {
    /** @deprecated use `ListAccessGroupMembersRequest$inboundSchema` instead. */
    ListAccessGroupMembersRequest$.inboundSchema = ListAccessGroupMembersRequest$inboundSchema;
    /** @deprecated use `ListAccessGroupMembersRequest$outboundSchema` instead. */
    ListAccessGroupMembersRequest$.outboundSchema = ListAccessGroupMembersRequest$outboundSchema;
})(ListAccessGroupMembersRequest$ || (ListAccessGroupMembersRequest$ = {}));
export function listAccessGroupMembersRequestToJSON(listAccessGroupMembersRequest) {
    return JSON.stringify(ListAccessGroupMembersRequest$outboundSchema.parse(listAccessGroupMembersRequest));
}
export function listAccessGroupMembersRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupMembersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupMembersRequest' from JSON`);
}
/** @internal */
export const TeamRole$inboundSchema = z
    .nativeEnum(TeamRole);
/** @internal */
export const TeamRole$outboundSchema = TeamRole$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TeamRole$;
(function (TeamRole$) {
    /** @deprecated use `TeamRole$inboundSchema` instead. */
    TeamRole$.inboundSchema = TeamRole$inboundSchema;
    /** @deprecated use `TeamRole$outboundSchema` instead. */
    TeamRole$.outboundSchema = TeamRole$outboundSchema;
})(TeamRole$ || (TeamRole$ = {}));
/** @internal */
export const Members$inboundSchema = z.object({
    avatar: z.string().optional(),
    email: z.string(),
    uid: z.string(),
    username: z.string(),
    name: z.string().optional(),
    createdAt: z.string().optional(),
    teamRole: TeamRole$inboundSchema,
});
/** @internal */
export const Members$outboundSchema = z.object({
    avatar: z.string().optional(),
    email: z.string(),
    uid: z.string(),
    username: z.string(),
    name: z.string().optional(),
    createdAt: z.string().optional(),
    teamRole: TeamRole$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Members$;
(function (Members$) {
    /** @deprecated use `Members$inboundSchema` instead. */
    Members$.inboundSchema = Members$inboundSchema;
    /** @deprecated use `Members$outboundSchema` instead. */
    Members$.outboundSchema = Members$outboundSchema;
})(Members$ || (Members$ = {}));
export function membersToJSON(members) {
    return JSON.stringify(Members$outboundSchema.parse(members));
}
export function membersFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Members$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Members' from JSON`);
}
/** @internal */
export const ListAccessGroupMembersPagination$inboundSchema = z.object({
    count: z.number(),
    next: z.nullable(z.string()),
});
/** @internal */
export const ListAccessGroupMembersPagination$outboundSchema = z.object({
    count: z.number(),
    next: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupMembersPagination$;
(function (ListAccessGroupMembersPagination$) {
    /** @deprecated use `ListAccessGroupMembersPagination$inboundSchema` instead. */
    ListAccessGroupMembersPagination$.inboundSchema = ListAccessGroupMembersPagination$inboundSchema;
    /** @deprecated use `ListAccessGroupMembersPagination$outboundSchema` instead. */
    ListAccessGroupMembersPagination$.outboundSchema = ListAccessGroupMembersPagination$outboundSchema;
})(ListAccessGroupMembersPagination$ || (ListAccessGroupMembersPagination$ = {}));
export function listAccessGroupMembersPaginationToJSON(listAccessGroupMembersPagination) {
    return JSON.stringify(ListAccessGroupMembersPagination$outboundSchema.parse(listAccessGroupMembersPagination));
}
export function listAccessGroupMembersPaginationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupMembersPagination$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupMembersPagination' from JSON`);
}
/** @internal */
export const ListAccessGroupMembersResponseBody$inboundSchema = z.object({
    members: z.array(z.lazy(() => Members$inboundSchema)),
    pagination: z.lazy(() => ListAccessGroupMembersPagination$inboundSchema),
});
/** @internal */
export const ListAccessGroupMembersResponseBody$outboundSchema = z.object({
    members: z.array(z.lazy(() => Members$outboundSchema)),
    pagination: z.lazy(() => ListAccessGroupMembersPagination$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupMembersResponseBody$;
(function (ListAccessGroupMembersResponseBody$) {
    /** @deprecated use `ListAccessGroupMembersResponseBody$inboundSchema` instead. */
    ListAccessGroupMembersResponseBody$.inboundSchema = ListAccessGroupMembersResponseBody$inboundSchema;
    /** @deprecated use `ListAccessGroupMembersResponseBody$outboundSchema` instead. */
    ListAccessGroupMembersResponseBody$.outboundSchema = ListAccessGroupMembersResponseBody$outboundSchema;
})(ListAccessGroupMembersResponseBody$ || (ListAccessGroupMembersResponseBody$ = {}));
export function listAccessGroupMembersResponseBodyToJSON(listAccessGroupMembersResponseBody) {
    return JSON.stringify(ListAccessGroupMembersResponseBody$outboundSchema.parse(listAccessGroupMembersResponseBody));
}
export function listAccessGroupMembersResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupMembersResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupMembersResponseBody' from JSON`);
}
//# sourceMappingURL=listaccessgroupmembersop.js.map