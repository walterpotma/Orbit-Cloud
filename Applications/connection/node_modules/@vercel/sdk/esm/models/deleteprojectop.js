/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteProjectRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const DeleteProjectRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteProjectRequest$;
(function (DeleteProjectRequest$) {
    /** @deprecated use `DeleteProjectRequest$inboundSchema` instead. */
    DeleteProjectRequest$.inboundSchema = DeleteProjectRequest$inboundSchema;
    /** @deprecated use `DeleteProjectRequest$outboundSchema` instead. */
    DeleteProjectRequest$.outboundSchema = DeleteProjectRequest$outboundSchema;
})(DeleteProjectRequest$ || (DeleteProjectRequest$ = {}));
export function deleteProjectRequestToJSON(deleteProjectRequest) {
    return JSON.stringify(DeleteProjectRequest$outboundSchema.parse(deleteProjectRequest));
}
export function deleteProjectRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteProjectRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteProjectRequest' from JSON`);
}
//# sourceMappingURL=deleteprojectop.js.map