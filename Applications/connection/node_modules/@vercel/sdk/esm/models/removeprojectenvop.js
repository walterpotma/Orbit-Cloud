/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const RemoveProjectEnvTargetProjectsResponse2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvTargetProjectsResponse1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvResponseBodyProjectsResponseType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type = {
    PostgresDatabase: "postgres-database",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type = {
    PostgresPassword: "postgres-password",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type = {
    PostgresHost: "postgres-host",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type = {
    PostgresUser: "postgres-user",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type = {
    PostgresUrl: "postgres-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type = {
    RedisUrl: "redis-url",
};
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type = {
    FlagsSecret: "flags-secret",
};
export const RemoveProjectEnvTargetProjects2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvTargetProjects1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvResponseBodyProjectsType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type = {
    PostgresDatabase: "postgres-database",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type = {
    PostgresPassword: "postgres-password",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type = {
    PostgresHost: "postgres-host",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type = {
    PostgresUser: "postgres-user",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type = {
    PostgresUrl: "postgres-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type = {
    RedisUrl: "redis-url",
};
export const RemoveProjectEnvResponseBodyProjectsResponse200Type = {
    FlagsSecret: "flags-secret",
};
export const RemoveProjectEnvTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvTarget1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const RemoveProjectEnvResponseBodyType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type = {
    PostgresDatabase: "postgres-database",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type = {
    PostgresPassword: "postgres-password",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type = {
    PostgresHost: "postgres-host",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type = {
    PostgresUser: "postgres-user",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
};
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const RemoveProjectEnvContentHintProjectsResponse200Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const RemoveProjectEnvContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const RemoveProjectEnvContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const RemoveProjectEnvContentHintType = {
    RedisUrl: "redis-url",
};
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType = {
    FlagsSecret: "flags-secret",
};
/** @internal */
export const RemoveProjectEnvRequest$inboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    customEnvironmentId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const RemoveProjectEnvRequest$outboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    customEnvironmentId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvRequest$;
(function (RemoveProjectEnvRequest$) {
    /** @deprecated use `RemoveProjectEnvRequest$inboundSchema` instead. */
    RemoveProjectEnvRequest$.inboundSchema = RemoveProjectEnvRequest$inboundSchema;
    /** @deprecated use `RemoveProjectEnvRequest$outboundSchema` instead. */
    RemoveProjectEnvRequest$.outboundSchema = RemoveProjectEnvRequest$outboundSchema;
})(RemoveProjectEnvRequest$ || (RemoveProjectEnvRequest$ = {}));
export function removeProjectEnvRequestToJSON(removeProjectEnvRequest) {
    return JSON.stringify(RemoveProjectEnvRequest$outboundSchema.parse(removeProjectEnvRequest));
}
export function removeProjectEnvRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvRequest' from JSON`);
}
/** @internal */
export const RemoveProjectEnvTargetProjectsResponse2$inboundSchema = z
    .nativeEnum(RemoveProjectEnvTargetProjectsResponse2);
/** @internal */
export const RemoveProjectEnvTargetProjectsResponse2$outboundSchema = RemoveProjectEnvTargetProjectsResponse2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTargetProjectsResponse2$;
(function (RemoveProjectEnvTargetProjectsResponse2$) {
    /** @deprecated use `RemoveProjectEnvTargetProjectsResponse2$inboundSchema` instead. */
    RemoveProjectEnvTargetProjectsResponse2$.inboundSchema = RemoveProjectEnvTargetProjectsResponse2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTargetProjectsResponse2$outboundSchema` instead. */
    RemoveProjectEnvTargetProjectsResponse2$.outboundSchema = RemoveProjectEnvTargetProjectsResponse2$outboundSchema;
})(RemoveProjectEnvTargetProjectsResponse2$ || (RemoveProjectEnvTargetProjectsResponse2$ = {}));
/** @internal */
export const RemoveProjectEnvTargetProjectsResponse1$inboundSchema = z
    .nativeEnum(RemoveProjectEnvTargetProjectsResponse1);
/** @internal */
export const RemoveProjectEnvTargetProjectsResponse1$outboundSchema = RemoveProjectEnvTargetProjectsResponse1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTargetProjectsResponse1$;
(function (RemoveProjectEnvTargetProjectsResponse1$) {
    /** @deprecated use `RemoveProjectEnvTargetProjectsResponse1$inboundSchema` instead. */
    RemoveProjectEnvTargetProjectsResponse1$.inboundSchema = RemoveProjectEnvTargetProjectsResponse1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTargetProjectsResponse1$outboundSchema` instead. */
    RemoveProjectEnvTargetProjectsResponse1$.outboundSchema = RemoveProjectEnvTargetProjectsResponse1$outboundSchema;
})(RemoveProjectEnvTargetProjectsResponse1$ || (RemoveProjectEnvTargetProjectsResponse1$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseTarget$inboundSchema = z.union([
    z.array(RemoveProjectEnvTargetProjectsResponse1$inboundSchema),
    RemoveProjectEnvTargetProjectsResponse2$inboundSchema,
]);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseTarget$outboundSchema = z.union([
    z.array(RemoveProjectEnvTargetProjectsResponse1$outboundSchema),
    RemoveProjectEnvTargetProjectsResponse2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponseTarget$;
(function (RemoveProjectEnvResponseBodyProjectsResponseTarget$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseTarget$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseTarget$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponseTarget$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseTarget$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseTarget$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponseTarget$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponseTarget$ || (RemoveProjectEnvResponseBodyProjectsResponseTarget$ = {}));
export function removeProjectEnvResponseBodyProjectsResponseTargetToJSON(removeProjectEnvResponseBodyProjectsResponseTarget) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsResponseTarget$outboundSchema.parse(removeProjectEnvResponseBodyProjectsResponseTarget));
}
export function removeProjectEnvResponseBodyProjectsResponseTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsResponseTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsResponseTarget' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseType$inboundSchema = z
    .nativeEnum(RemoveProjectEnvResponseBodyProjectsResponseType);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseType$outboundSchema = RemoveProjectEnvResponseBodyProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponseType$;
(function (RemoveProjectEnvResponseBodyProjectsResponseType$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseType$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseType$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponseType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseType$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseType$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponseType$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponseType$ || (RemoveProjectEnvResponseBodyProjectsResponseType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse15$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse15$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse15$;
(function (RemoveProjectEnvContentHintProjectsResponse15$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse15$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse15$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse15$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse15$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse15$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse15$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse15$ || (RemoveProjectEnvContentHintProjectsResponse15$ = {}));
export function removeProjectEnvContentHintProjectsResponse15ToJSON(removeProjectEnvContentHintProjectsResponse15) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse15$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse15));
}
export function removeProjectEnvContentHintProjectsResponse15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse15' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse14$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse14$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse14$;
(function (RemoveProjectEnvContentHintProjectsResponse14$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse14$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse14$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse14$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse14$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse14$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse14$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse14$ || (RemoveProjectEnvContentHintProjectsResponse14$ = {}));
export function removeProjectEnvContentHintProjectsResponse14ToJSON(removeProjectEnvContentHintProjectsResponse14) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse14$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse14));
}
export function removeProjectEnvContentHintProjectsResponse14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse14' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse13$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse13$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse13$;
(function (RemoveProjectEnvContentHintProjectsResponse13$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse13$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse13$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse13$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse13$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse13$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse13$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse13$ || (RemoveProjectEnvContentHintProjectsResponse13$ = {}));
export function removeProjectEnvContentHintProjectsResponse13ToJSON(removeProjectEnvContentHintProjectsResponse13) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse13$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse13));
}
export function removeProjectEnvContentHintProjectsResponse13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse13' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse12$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse12$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse12$;
(function (RemoveProjectEnvContentHintProjectsResponse12$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse12$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse12$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse12$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse12$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse12$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse12$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse12$ || (RemoveProjectEnvContentHintProjectsResponse12$ = {}));
export function removeProjectEnvContentHintProjectsResponse12ToJSON(removeProjectEnvContentHintProjectsResponse12) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse12$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse12));
}
export function removeProjectEnvContentHintProjectsResponse12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse12' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse11$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse11$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse11$;
(function (RemoveProjectEnvContentHintProjectsResponse11$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse11$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse11$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse11$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse11$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse11$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse11$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse11$ || (RemoveProjectEnvContentHintProjectsResponse11$ = {}));
export function removeProjectEnvContentHintProjectsResponse11ToJSON(removeProjectEnvContentHintProjectsResponse11) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse11$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse11));
}
export function removeProjectEnvContentHintProjectsResponse11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse11' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse10$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse10$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse10$;
(function (RemoveProjectEnvContentHintProjectsResponse10$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse10$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse10$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse10$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse10$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse10$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse10$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse10$ || (RemoveProjectEnvContentHintProjectsResponse10$ = {}));
export function removeProjectEnvContentHintProjectsResponse10ToJSON(removeProjectEnvContentHintProjectsResponse10) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse10$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse10));
}
export function removeProjectEnvContentHintProjectsResponse10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse10' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse9$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse9$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse9$;
(function (RemoveProjectEnvContentHintProjectsResponse9$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse9$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse9$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse9$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse9$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse9$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse9$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse9$ || (RemoveProjectEnvContentHintProjectsResponse9$ = {}));
export function removeProjectEnvContentHintProjectsResponse9ToJSON(removeProjectEnvContentHintProjectsResponse9) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse9$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse9));
}
export function removeProjectEnvContentHintProjectsResponse9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse9' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse8$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse8$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse8$;
(function (RemoveProjectEnvContentHintProjectsResponse8$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse8$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse8$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse8$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse8$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse8$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse8$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse8$ || (RemoveProjectEnvContentHintProjectsResponse8$ = {}));
export function removeProjectEnvContentHintProjectsResponse8ToJSON(removeProjectEnvContentHintProjectsResponse8) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse8$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse8));
}
export function removeProjectEnvContentHintProjectsResponse8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse8' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse7$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse7$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse7$;
(function (RemoveProjectEnvContentHintProjectsResponse7$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse7$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse7$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse7$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse7$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse7$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse7$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse7$ || (RemoveProjectEnvContentHintProjectsResponse7$ = {}));
export function removeProjectEnvContentHintProjectsResponse7ToJSON(removeProjectEnvContentHintProjectsResponse7) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse7$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse7));
}
export function removeProjectEnvContentHintProjectsResponse7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse7' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse6$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse6$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse6$;
(function (RemoveProjectEnvContentHintProjectsResponse6$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse6$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse6$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse6$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse6$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse6$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse6$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse6$ || (RemoveProjectEnvContentHintProjectsResponse6$ = {}));
export function removeProjectEnvContentHintProjectsResponse6ToJSON(removeProjectEnvContentHintProjectsResponse6) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse6$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse6));
}
export function removeProjectEnvContentHintProjectsResponse6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse6' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse5$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse5$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse5$;
(function (RemoveProjectEnvContentHintProjectsResponse5$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse5$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse5$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse5$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse5$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse5$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse5$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse5$ || (RemoveProjectEnvContentHintProjectsResponse5$ = {}));
export function removeProjectEnvContentHintProjectsResponse5ToJSON(removeProjectEnvContentHintProjectsResponse5) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse5$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse5));
}
export function removeProjectEnvContentHintProjectsResponse5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse5' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse4$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse4$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse4$;
(function (RemoveProjectEnvContentHintProjectsResponse4$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse4$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse4$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse4$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse4$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse4$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse4$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse4$ || (RemoveProjectEnvContentHintProjectsResponse4$ = {}));
export function removeProjectEnvContentHintProjectsResponse4ToJSON(removeProjectEnvContentHintProjectsResponse4) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse4$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse4));
}
export function removeProjectEnvContentHintProjectsResponse4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse4' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse3$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse3$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse3$;
(function (RemoveProjectEnvContentHintProjectsResponse3$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse3$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse3$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse3$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse3$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse3$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse3$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse3$ || (RemoveProjectEnvContentHintProjectsResponse3$ = {}));
export function removeProjectEnvContentHintProjectsResponse3ToJSON(removeProjectEnvContentHintProjectsResponse3) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse3$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse3));
}
export function removeProjectEnvContentHintProjectsResponse3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse3' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse2$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse2$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse2$;
(function (RemoveProjectEnvContentHintProjectsResponse2$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse2$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse2$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse2$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse2$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse2$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse2$ || (RemoveProjectEnvContentHintProjectsResponse2$ = {}));
export function removeProjectEnvContentHintProjectsResponse2ToJSON(removeProjectEnvContentHintProjectsResponse2) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse2$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse2));
}
export function removeProjectEnvContentHintProjectsResponse2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse2' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse1$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse1$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse1$;
(function (RemoveProjectEnvContentHintProjectsResponse1$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse1$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse1$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse1$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse1$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse1$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse1$ || (RemoveProjectEnvContentHintProjectsResponse1$ = {}));
export function removeProjectEnvContentHintProjectsResponse1ToJSON(removeProjectEnvContentHintProjectsResponse1) {
    return JSON.stringify(RemoveProjectEnvContentHintProjectsResponse1$outboundSchema.parse(removeProjectEnvContentHintProjectsResponse1));
}
export function removeProjectEnvContentHintProjectsResponse1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjectsResponse1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjectsResponse1' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse14$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse1$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse2$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse3$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse4$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse5$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse6$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse7$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse8$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse9$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse10$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse11$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse12$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse13$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse15$inboundSchema),
]);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse14$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse1$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse2$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse3$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse4$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse5$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse6$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse7$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse8$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse9$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse10$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse11$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse12$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse13$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjectsResponse15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponseContentHint$;
(function (RemoveProjectEnvResponseBodyProjectsResponseContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseContentHint$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseContentHint$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponseContentHint$ || (RemoveProjectEnvResponseBodyProjectsResponseContentHint$ = {}));
export function removeProjectEnvResponseBodyProjectsResponseContentHintToJSON(removeProjectEnvResponseBodyProjectsResponseContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema
        .parse(removeProjectEnvResponseBodyProjectsResponseContentHint));
}
export function removeProjectEnvResponseBodyProjectsResponseContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsResponseContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema = z.nativeEnum(RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$;
(function (RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$ || (RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$;
(function (RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$ || (RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$ = {}));
export function removeProjectEnvResponseBodyProjectsResponseInternalContentHintToJSON(removeProjectEnvResponseBodyProjectsResponseInternalContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema
        .parse(removeProjectEnvResponseBodyProjectsResponseInternalContentHint));
}
export function removeProjectEnvResponseBodyProjectsResponseInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBody3$inboundSchema = z.object({
    target: z.union([
        z.array(RemoveProjectEnvTargetProjectsResponse1$inboundSchema),
        RemoveProjectEnvTargetProjectsResponse2$inboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyProjectsResponseType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse14$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse1$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse2$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse3$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse4$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse5$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse6$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse7$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse8$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse9$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse10$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse11$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse12$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse13$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const RemoveProjectEnvResponseBody3$outboundSchema = z.object({
    target: z.union([
        z.array(RemoveProjectEnvTargetProjectsResponse1$outboundSchema),
        RemoveProjectEnvTargetProjectsResponse2$outboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyProjectsResponseType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse14$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse1$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse2$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse3$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse4$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse5$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse6$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse7$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse8$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse9$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse10$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse11$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse12$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse13$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjectsResponse15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBody3$;
(function (RemoveProjectEnvResponseBody3$) {
    /** @deprecated use `RemoveProjectEnvResponseBody3$inboundSchema` instead. */
    RemoveProjectEnvResponseBody3$.inboundSchema = RemoveProjectEnvResponseBody3$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBody3$outboundSchema` instead. */
    RemoveProjectEnvResponseBody3$.outboundSchema = RemoveProjectEnvResponseBody3$outboundSchema;
})(RemoveProjectEnvResponseBody3$ || (RemoveProjectEnvResponseBody3$ = {}));
export function removeProjectEnvResponseBody3ToJSON(removeProjectEnvResponseBody3) {
    return JSON.stringify(RemoveProjectEnvResponseBody3$outboundSchema.parse(removeProjectEnvResponseBody3));
}
export function removeProjectEnvResponseBody3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBody3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBody3' from JSON`);
}
/** @internal */
export const RemoveProjectEnvTargetProjects2$inboundSchema = z.nativeEnum(RemoveProjectEnvTargetProjects2);
/** @internal */
export const RemoveProjectEnvTargetProjects2$outboundSchema = RemoveProjectEnvTargetProjects2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTargetProjects2$;
(function (RemoveProjectEnvTargetProjects2$) {
    /** @deprecated use `RemoveProjectEnvTargetProjects2$inboundSchema` instead. */
    RemoveProjectEnvTargetProjects2$.inboundSchema = RemoveProjectEnvTargetProjects2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTargetProjects2$outboundSchema` instead. */
    RemoveProjectEnvTargetProjects2$.outboundSchema = RemoveProjectEnvTargetProjects2$outboundSchema;
})(RemoveProjectEnvTargetProjects2$ || (RemoveProjectEnvTargetProjects2$ = {}));
/** @internal */
export const RemoveProjectEnvTargetProjects1$inboundSchema = z.nativeEnum(RemoveProjectEnvTargetProjects1);
/** @internal */
export const RemoveProjectEnvTargetProjects1$outboundSchema = RemoveProjectEnvTargetProjects1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTargetProjects1$;
(function (RemoveProjectEnvTargetProjects1$) {
    /** @deprecated use `RemoveProjectEnvTargetProjects1$inboundSchema` instead. */
    RemoveProjectEnvTargetProjects1$.inboundSchema = RemoveProjectEnvTargetProjects1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTargetProjects1$outboundSchema` instead. */
    RemoveProjectEnvTargetProjects1$.outboundSchema = RemoveProjectEnvTargetProjects1$outboundSchema;
})(RemoveProjectEnvTargetProjects1$ || (RemoveProjectEnvTargetProjects1$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsTarget$inboundSchema = z.union([
    z.array(RemoveProjectEnvTargetProjects1$inboundSchema),
    RemoveProjectEnvTargetProjects2$inboundSchema,
]);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsTarget$outboundSchema = z.union([
    z.array(RemoveProjectEnvTargetProjects1$outboundSchema),
    RemoveProjectEnvTargetProjects2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsTarget$;
(function (RemoveProjectEnvResponseBodyProjectsTarget$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsTarget$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsTarget$.inboundSchema = RemoveProjectEnvResponseBodyProjectsTarget$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsTarget$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsTarget$.outboundSchema = RemoveProjectEnvResponseBodyProjectsTarget$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsTarget$ || (RemoveProjectEnvResponseBodyProjectsTarget$ = {}));
export function removeProjectEnvResponseBodyProjectsTargetToJSON(removeProjectEnvResponseBodyProjectsTarget) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsTarget$outboundSchema.parse(removeProjectEnvResponseBodyProjectsTarget));
}
export function removeProjectEnvResponseBodyProjectsTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsTarget' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsType$inboundSchema = z
    .nativeEnum(RemoveProjectEnvResponseBodyProjectsType);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsType$outboundSchema = RemoveProjectEnvResponseBodyProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsType$;
(function (RemoveProjectEnvResponseBodyProjectsType$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsType$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsType$.inboundSchema = RemoveProjectEnvResponseBodyProjectsType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsType$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsType$.outboundSchema = RemoveProjectEnvResponseBodyProjectsType$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsType$ || (RemoveProjectEnvResponseBodyProjectsType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects15$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects15$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects15$;
(function (RemoveProjectEnvContentHintProjects15$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects15$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects15$.inboundSchema = RemoveProjectEnvContentHintProjects15$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects15$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects15$.outboundSchema = RemoveProjectEnvContentHintProjects15$outboundSchema;
})(RemoveProjectEnvContentHintProjects15$ || (RemoveProjectEnvContentHintProjects15$ = {}));
export function removeProjectEnvContentHintProjects15ToJSON(removeProjectEnvContentHintProjects15) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects15$outboundSchema.parse(removeProjectEnvContentHintProjects15));
}
export function removeProjectEnvContentHintProjects15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects15' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects14$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects14$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects14$;
(function (RemoveProjectEnvContentHintProjects14$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects14$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects14$.inboundSchema = RemoveProjectEnvContentHintProjects14$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects14$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects14$.outboundSchema = RemoveProjectEnvContentHintProjects14$outboundSchema;
})(RemoveProjectEnvContentHintProjects14$ || (RemoveProjectEnvContentHintProjects14$ = {}));
export function removeProjectEnvContentHintProjects14ToJSON(removeProjectEnvContentHintProjects14) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects14$outboundSchema.parse(removeProjectEnvContentHintProjects14));
}
export function removeProjectEnvContentHintProjects14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects14' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects13$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects13$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects13$;
(function (RemoveProjectEnvContentHintProjects13$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects13$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects13$.inboundSchema = RemoveProjectEnvContentHintProjects13$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects13$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects13$.outboundSchema = RemoveProjectEnvContentHintProjects13$outboundSchema;
})(RemoveProjectEnvContentHintProjects13$ || (RemoveProjectEnvContentHintProjects13$ = {}));
export function removeProjectEnvContentHintProjects13ToJSON(removeProjectEnvContentHintProjects13) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects13$outboundSchema.parse(removeProjectEnvContentHintProjects13));
}
export function removeProjectEnvContentHintProjects13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects13' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects12$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects12$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects12$;
(function (RemoveProjectEnvContentHintProjects12$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects12$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects12$.inboundSchema = RemoveProjectEnvContentHintProjects12$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects12$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects12$.outboundSchema = RemoveProjectEnvContentHintProjects12$outboundSchema;
})(RemoveProjectEnvContentHintProjects12$ || (RemoveProjectEnvContentHintProjects12$ = {}));
export function removeProjectEnvContentHintProjects12ToJSON(removeProjectEnvContentHintProjects12) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects12$outboundSchema.parse(removeProjectEnvContentHintProjects12));
}
export function removeProjectEnvContentHintProjects12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects12' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects11$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects11$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects11$;
(function (RemoveProjectEnvContentHintProjects11$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects11$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects11$.inboundSchema = RemoveProjectEnvContentHintProjects11$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects11$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects11$.outboundSchema = RemoveProjectEnvContentHintProjects11$outboundSchema;
})(RemoveProjectEnvContentHintProjects11$ || (RemoveProjectEnvContentHintProjects11$ = {}));
export function removeProjectEnvContentHintProjects11ToJSON(removeProjectEnvContentHintProjects11) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects11$outboundSchema.parse(removeProjectEnvContentHintProjects11));
}
export function removeProjectEnvContentHintProjects11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects11' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects10$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects10$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects10$;
(function (RemoveProjectEnvContentHintProjects10$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects10$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects10$.inboundSchema = RemoveProjectEnvContentHintProjects10$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects10$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects10$.outboundSchema = RemoveProjectEnvContentHintProjects10$outboundSchema;
})(RemoveProjectEnvContentHintProjects10$ || (RemoveProjectEnvContentHintProjects10$ = {}));
export function removeProjectEnvContentHintProjects10ToJSON(removeProjectEnvContentHintProjects10) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects10$outboundSchema.parse(removeProjectEnvContentHintProjects10));
}
export function removeProjectEnvContentHintProjects10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects10' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects9$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects9$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects9$;
(function (RemoveProjectEnvContentHintProjects9$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects9$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects9$.inboundSchema = RemoveProjectEnvContentHintProjects9$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects9$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects9$.outboundSchema = RemoveProjectEnvContentHintProjects9$outboundSchema;
})(RemoveProjectEnvContentHintProjects9$ || (RemoveProjectEnvContentHintProjects9$ = {}));
export function removeProjectEnvContentHintProjects9ToJSON(removeProjectEnvContentHintProjects9) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects9$outboundSchema.parse(removeProjectEnvContentHintProjects9));
}
export function removeProjectEnvContentHintProjects9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects9' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects8$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects8$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects8$;
(function (RemoveProjectEnvContentHintProjects8$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects8$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects8$.inboundSchema = RemoveProjectEnvContentHintProjects8$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects8$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects8$.outboundSchema = RemoveProjectEnvContentHintProjects8$outboundSchema;
})(RemoveProjectEnvContentHintProjects8$ || (RemoveProjectEnvContentHintProjects8$ = {}));
export function removeProjectEnvContentHintProjects8ToJSON(removeProjectEnvContentHintProjects8) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects8$outboundSchema.parse(removeProjectEnvContentHintProjects8));
}
export function removeProjectEnvContentHintProjects8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects8' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects7$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects7$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects7$;
(function (RemoveProjectEnvContentHintProjects7$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects7$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects7$.inboundSchema = RemoveProjectEnvContentHintProjects7$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects7$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects7$.outboundSchema = RemoveProjectEnvContentHintProjects7$outboundSchema;
})(RemoveProjectEnvContentHintProjects7$ || (RemoveProjectEnvContentHintProjects7$ = {}));
export function removeProjectEnvContentHintProjects7ToJSON(removeProjectEnvContentHintProjects7) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects7$outboundSchema.parse(removeProjectEnvContentHintProjects7));
}
export function removeProjectEnvContentHintProjects7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects7' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects6$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects6$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects6$;
(function (RemoveProjectEnvContentHintProjects6$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects6$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects6$.inboundSchema = RemoveProjectEnvContentHintProjects6$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects6$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects6$.outboundSchema = RemoveProjectEnvContentHintProjects6$outboundSchema;
})(RemoveProjectEnvContentHintProjects6$ || (RemoveProjectEnvContentHintProjects6$ = {}));
export function removeProjectEnvContentHintProjects6ToJSON(removeProjectEnvContentHintProjects6) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects6$outboundSchema.parse(removeProjectEnvContentHintProjects6));
}
export function removeProjectEnvContentHintProjects6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects6' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects5$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects5$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects5$;
(function (RemoveProjectEnvContentHintProjects5$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects5$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects5$.inboundSchema = RemoveProjectEnvContentHintProjects5$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects5$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects5$.outboundSchema = RemoveProjectEnvContentHintProjects5$outboundSchema;
})(RemoveProjectEnvContentHintProjects5$ || (RemoveProjectEnvContentHintProjects5$ = {}));
export function removeProjectEnvContentHintProjects5ToJSON(removeProjectEnvContentHintProjects5) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects5$outboundSchema.parse(removeProjectEnvContentHintProjects5));
}
export function removeProjectEnvContentHintProjects5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects5' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects4$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects4$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects4$;
(function (RemoveProjectEnvContentHintProjects4$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects4$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects4$.inboundSchema = RemoveProjectEnvContentHintProjects4$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects4$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects4$.outboundSchema = RemoveProjectEnvContentHintProjects4$outboundSchema;
})(RemoveProjectEnvContentHintProjects4$ || (RemoveProjectEnvContentHintProjects4$ = {}));
export function removeProjectEnvContentHintProjects4ToJSON(removeProjectEnvContentHintProjects4) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects4$outboundSchema.parse(removeProjectEnvContentHintProjects4));
}
export function removeProjectEnvContentHintProjects4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects4' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects3$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects3$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects3$;
(function (RemoveProjectEnvContentHintProjects3$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects3$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects3$.inboundSchema = RemoveProjectEnvContentHintProjects3$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects3$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects3$.outboundSchema = RemoveProjectEnvContentHintProjects3$outboundSchema;
})(RemoveProjectEnvContentHintProjects3$ || (RemoveProjectEnvContentHintProjects3$ = {}));
export function removeProjectEnvContentHintProjects3ToJSON(removeProjectEnvContentHintProjects3) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects3$outboundSchema.parse(removeProjectEnvContentHintProjects3));
}
export function removeProjectEnvContentHintProjects3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects3' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects2$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects2$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects2$;
(function (RemoveProjectEnvContentHintProjects2$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects2$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects2$.inboundSchema = RemoveProjectEnvContentHintProjects2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects2$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects2$.outboundSchema = RemoveProjectEnvContentHintProjects2$outboundSchema;
})(RemoveProjectEnvContentHintProjects2$ || (RemoveProjectEnvContentHintProjects2$ = {}));
export function removeProjectEnvContentHintProjects2ToJSON(removeProjectEnvContentHintProjects2) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects2$outboundSchema.parse(removeProjectEnvContentHintProjects2));
}
export function removeProjectEnvContentHintProjects2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects2' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjects1$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHintProjects1$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjects1$;
(function (RemoveProjectEnvContentHintProjects1$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjects1$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjects1$.inboundSchema = RemoveProjectEnvContentHintProjects1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjects1$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjects1$.outboundSchema = RemoveProjectEnvContentHintProjects1$outboundSchema;
})(RemoveProjectEnvContentHintProjects1$ || (RemoveProjectEnvContentHintProjects1$ = {}));
export function removeProjectEnvContentHintProjects1ToJSON(removeProjectEnvContentHintProjects1) {
    return JSON.stringify(RemoveProjectEnvContentHintProjects1$outboundSchema.parse(removeProjectEnvContentHintProjects1));
}
export function removeProjectEnvContentHintProjects1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHintProjects1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHintProjects1' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsContentHint$inboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHintProjects14$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects1$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects2$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects3$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects4$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects5$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects6$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects7$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects8$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects9$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects10$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects11$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects12$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects13$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects15$inboundSchema),
]);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsContentHint$outboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHintProjects14$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects1$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects2$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects3$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects4$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects5$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects6$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects7$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects8$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects9$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects10$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects11$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects12$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects13$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintProjects15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsContentHint$;
(function (RemoveProjectEnvResponseBodyProjectsContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsContentHint$.inboundSchema = RemoveProjectEnvResponseBodyProjectsContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsContentHint$.outboundSchema = RemoveProjectEnvResponseBodyProjectsContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsContentHint$ || (RemoveProjectEnvResponseBodyProjectsContentHint$ = {}));
export function removeProjectEnvResponseBodyProjectsContentHintToJSON(removeProjectEnvResponseBodyProjectsContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsContentHint$outboundSchema.parse(removeProjectEnvResponseBodyProjectsContentHint));
}
export function removeProjectEnvResponseBodyProjectsContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200Type$inboundSchema = z.nativeEnum(RemoveProjectEnvResponseBodyProjectsResponse200Type);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200Type$outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponse200Type$;
(function (RemoveProjectEnvResponseBodyProjectsResponse200Type$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200Type$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200Type$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200Type$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200Type$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200Type$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponse200Type$ || (RemoveProjectEnvResponseBodyProjectsResponse200Type$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200Type$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200Type$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsInternalContentHint$;
(function (RemoveProjectEnvResponseBodyProjectsInternalContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsInternalContentHint$.inboundSchema = RemoveProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsInternalContentHint$.outboundSchema = RemoveProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsInternalContentHint$ || (RemoveProjectEnvResponseBodyProjectsInternalContentHint$ = {}));
export function removeProjectEnvResponseBodyProjectsInternalContentHintToJSON(removeProjectEnvResponseBodyProjectsInternalContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema
        .parse(removeProjectEnvResponseBodyProjectsInternalContentHint));
}
export function removeProjectEnvResponseBodyProjectsInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyProjectsInternalContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBody2$inboundSchema = z.object({
    system: z.boolean().optional(),
    target: z.union([
        z.array(RemoveProjectEnvTargetProjects1$inboundSchema),
        RemoveProjectEnvTargetProjects2$inboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyProjectsType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHintProjects14$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects1$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects2$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects3$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects4$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects5$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects6$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects7$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects8$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects9$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects10$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects11$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects12$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects13$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const RemoveProjectEnvResponseBody2$outboundSchema = z.object({
    system: z.boolean().optional(),
    target: z.union([
        z.array(RemoveProjectEnvTargetProjects1$outboundSchema),
        RemoveProjectEnvTargetProjects2$outboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyProjectsType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHintProjects14$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects1$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects2$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects3$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects4$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects5$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects6$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects7$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects8$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects9$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects10$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects11$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects12$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects13$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHintProjects15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBody2$;
(function (RemoveProjectEnvResponseBody2$) {
    /** @deprecated use `RemoveProjectEnvResponseBody2$inboundSchema` instead. */
    RemoveProjectEnvResponseBody2$.inboundSchema = RemoveProjectEnvResponseBody2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBody2$outboundSchema` instead. */
    RemoveProjectEnvResponseBody2$.outboundSchema = RemoveProjectEnvResponseBody2$outboundSchema;
})(RemoveProjectEnvResponseBody2$ || (RemoveProjectEnvResponseBody2$ = {}));
export function removeProjectEnvResponseBody2ToJSON(removeProjectEnvResponseBody2) {
    return JSON.stringify(RemoveProjectEnvResponseBody2$outboundSchema.parse(removeProjectEnvResponseBody2));
}
export function removeProjectEnvResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBody2' from JSON`);
}
/** @internal */
export const RemoveProjectEnvTarget2$inboundSchema = z.nativeEnum(RemoveProjectEnvTarget2);
/** @internal */
export const RemoveProjectEnvTarget2$outboundSchema = RemoveProjectEnvTarget2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTarget2$;
(function (RemoveProjectEnvTarget2$) {
    /** @deprecated use `RemoveProjectEnvTarget2$inboundSchema` instead. */
    RemoveProjectEnvTarget2$.inboundSchema = RemoveProjectEnvTarget2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTarget2$outboundSchema` instead. */
    RemoveProjectEnvTarget2$.outboundSchema = RemoveProjectEnvTarget2$outboundSchema;
})(RemoveProjectEnvTarget2$ || (RemoveProjectEnvTarget2$ = {}));
/** @internal */
export const RemoveProjectEnvTarget1$inboundSchema = z.nativeEnum(RemoveProjectEnvTarget1);
/** @internal */
export const RemoveProjectEnvTarget1$outboundSchema = RemoveProjectEnvTarget1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvTarget1$;
(function (RemoveProjectEnvTarget1$) {
    /** @deprecated use `RemoveProjectEnvTarget1$inboundSchema` instead. */
    RemoveProjectEnvTarget1$.inboundSchema = RemoveProjectEnvTarget1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvTarget1$outboundSchema` instead. */
    RemoveProjectEnvTarget1$.outboundSchema = RemoveProjectEnvTarget1$outboundSchema;
})(RemoveProjectEnvTarget1$ || (RemoveProjectEnvTarget1$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyTarget$inboundSchema = z.union([
    z.array(RemoveProjectEnvTarget1$inboundSchema),
    RemoveProjectEnvTarget2$inboundSchema,
]);
/** @internal */
export const RemoveProjectEnvResponseBodyTarget$outboundSchema = z.union([
    z.array(RemoveProjectEnvTarget1$outboundSchema),
    RemoveProjectEnvTarget2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyTarget$;
(function (RemoveProjectEnvResponseBodyTarget$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyTarget$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyTarget$.inboundSchema = RemoveProjectEnvResponseBodyTarget$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyTarget$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyTarget$.outboundSchema = RemoveProjectEnvResponseBodyTarget$outboundSchema;
})(RemoveProjectEnvResponseBodyTarget$ || (RemoveProjectEnvResponseBodyTarget$ = {}));
export function removeProjectEnvResponseBodyTargetToJSON(removeProjectEnvResponseBodyTarget) {
    return JSON.stringify(RemoveProjectEnvResponseBodyTarget$outboundSchema.parse(removeProjectEnvResponseBodyTarget));
}
export function removeProjectEnvResponseBodyTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyTarget' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyType$inboundSchema = z.nativeEnum(RemoveProjectEnvResponseBodyType);
/** @internal */
export const RemoveProjectEnvResponseBodyType$outboundSchema = RemoveProjectEnvResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyType$;
(function (RemoveProjectEnvResponseBodyType$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyType$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyType$.inboundSchema = RemoveProjectEnvResponseBodyType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyType$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyType$.outboundSchema = RemoveProjectEnvResponseBodyType$outboundSchema;
})(RemoveProjectEnvResponseBodyType$ || (RemoveProjectEnvResponseBodyType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint15$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint15$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint15$;
(function (RemoveProjectEnvContentHint15$) {
    /** @deprecated use `RemoveProjectEnvContentHint15$inboundSchema` instead. */
    RemoveProjectEnvContentHint15$.inboundSchema = RemoveProjectEnvContentHint15$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint15$outboundSchema` instead. */
    RemoveProjectEnvContentHint15$.outboundSchema = RemoveProjectEnvContentHint15$outboundSchema;
})(RemoveProjectEnvContentHint15$ || (RemoveProjectEnvContentHint15$ = {}));
export function removeProjectEnvContentHint15ToJSON(removeProjectEnvContentHint15) {
    return JSON.stringify(RemoveProjectEnvContentHint15$outboundSchema.parse(removeProjectEnvContentHint15));
}
export function removeProjectEnvContentHint15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint15' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint14$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint14$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint14$;
(function (RemoveProjectEnvContentHint14$) {
    /** @deprecated use `RemoveProjectEnvContentHint14$inboundSchema` instead. */
    RemoveProjectEnvContentHint14$.inboundSchema = RemoveProjectEnvContentHint14$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint14$outboundSchema` instead. */
    RemoveProjectEnvContentHint14$.outboundSchema = RemoveProjectEnvContentHint14$outboundSchema;
})(RemoveProjectEnvContentHint14$ || (RemoveProjectEnvContentHint14$ = {}));
export function removeProjectEnvContentHint14ToJSON(removeProjectEnvContentHint14) {
    return JSON.stringify(RemoveProjectEnvContentHint14$outboundSchema.parse(removeProjectEnvContentHint14));
}
export function removeProjectEnvContentHint14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint14' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint13$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint13$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint13$;
(function (RemoveProjectEnvContentHint13$) {
    /** @deprecated use `RemoveProjectEnvContentHint13$inboundSchema` instead. */
    RemoveProjectEnvContentHint13$.inboundSchema = RemoveProjectEnvContentHint13$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint13$outboundSchema` instead. */
    RemoveProjectEnvContentHint13$.outboundSchema = RemoveProjectEnvContentHint13$outboundSchema;
})(RemoveProjectEnvContentHint13$ || (RemoveProjectEnvContentHint13$ = {}));
export function removeProjectEnvContentHint13ToJSON(removeProjectEnvContentHint13) {
    return JSON.stringify(RemoveProjectEnvContentHint13$outboundSchema.parse(removeProjectEnvContentHint13));
}
export function removeProjectEnvContentHint13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint13' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint12$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint12$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint12$;
(function (RemoveProjectEnvContentHint12$) {
    /** @deprecated use `RemoveProjectEnvContentHint12$inboundSchema` instead. */
    RemoveProjectEnvContentHint12$.inboundSchema = RemoveProjectEnvContentHint12$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint12$outboundSchema` instead. */
    RemoveProjectEnvContentHint12$.outboundSchema = RemoveProjectEnvContentHint12$outboundSchema;
})(RemoveProjectEnvContentHint12$ || (RemoveProjectEnvContentHint12$ = {}));
export function removeProjectEnvContentHint12ToJSON(removeProjectEnvContentHint12) {
    return JSON.stringify(RemoveProjectEnvContentHint12$outboundSchema.parse(removeProjectEnvContentHint12));
}
export function removeProjectEnvContentHint12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint12' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint11$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint11$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint11$;
(function (RemoveProjectEnvContentHint11$) {
    /** @deprecated use `RemoveProjectEnvContentHint11$inboundSchema` instead. */
    RemoveProjectEnvContentHint11$.inboundSchema = RemoveProjectEnvContentHint11$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint11$outboundSchema` instead. */
    RemoveProjectEnvContentHint11$.outboundSchema = RemoveProjectEnvContentHint11$outboundSchema;
})(RemoveProjectEnvContentHint11$ || (RemoveProjectEnvContentHint11$ = {}));
export function removeProjectEnvContentHint11ToJSON(removeProjectEnvContentHint11) {
    return JSON.stringify(RemoveProjectEnvContentHint11$outboundSchema.parse(removeProjectEnvContentHint11));
}
export function removeProjectEnvContentHint11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint11' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint10$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint10$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint10$;
(function (RemoveProjectEnvContentHint10$) {
    /** @deprecated use `RemoveProjectEnvContentHint10$inboundSchema` instead. */
    RemoveProjectEnvContentHint10$.inboundSchema = RemoveProjectEnvContentHint10$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint10$outboundSchema` instead. */
    RemoveProjectEnvContentHint10$.outboundSchema = RemoveProjectEnvContentHint10$outboundSchema;
})(RemoveProjectEnvContentHint10$ || (RemoveProjectEnvContentHint10$ = {}));
export function removeProjectEnvContentHint10ToJSON(removeProjectEnvContentHint10) {
    return JSON.stringify(RemoveProjectEnvContentHint10$outboundSchema.parse(removeProjectEnvContentHint10));
}
export function removeProjectEnvContentHint10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint10' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint9$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint9$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint9$;
(function (RemoveProjectEnvContentHint9$) {
    /** @deprecated use `RemoveProjectEnvContentHint9$inboundSchema` instead. */
    RemoveProjectEnvContentHint9$.inboundSchema = RemoveProjectEnvContentHint9$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint9$outboundSchema` instead. */
    RemoveProjectEnvContentHint9$.outboundSchema = RemoveProjectEnvContentHint9$outboundSchema;
})(RemoveProjectEnvContentHint9$ || (RemoveProjectEnvContentHint9$ = {}));
export function removeProjectEnvContentHint9ToJSON(removeProjectEnvContentHint9) {
    return JSON.stringify(RemoveProjectEnvContentHint9$outboundSchema.parse(removeProjectEnvContentHint9));
}
export function removeProjectEnvContentHint9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint9' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint8$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint8$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint8$;
(function (RemoveProjectEnvContentHint8$) {
    /** @deprecated use `RemoveProjectEnvContentHint8$inboundSchema` instead. */
    RemoveProjectEnvContentHint8$.inboundSchema = RemoveProjectEnvContentHint8$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint8$outboundSchema` instead. */
    RemoveProjectEnvContentHint8$.outboundSchema = RemoveProjectEnvContentHint8$outboundSchema;
})(RemoveProjectEnvContentHint8$ || (RemoveProjectEnvContentHint8$ = {}));
export function removeProjectEnvContentHint8ToJSON(removeProjectEnvContentHint8) {
    return JSON.stringify(RemoveProjectEnvContentHint8$outboundSchema.parse(removeProjectEnvContentHint8));
}
export function removeProjectEnvContentHint8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint8' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint7$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint7$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint7$;
(function (RemoveProjectEnvContentHint7$) {
    /** @deprecated use `RemoveProjectEnvContentHint7$inboundSchema` instead. */
    RemoveProjectEnvContentHint7$.inboundSchema = RemoveProjectEnvContentHint7$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint7$outboundSchema` instead. */
    RemoveProjectEnvContentHint7$.outboundSchema = RemoveProjectEnvContentHint7$outboundSchema;
})(RemoveProjectEnvContentHint7$ || (RemoveProjectEnvContentHint7$ = {}));
export function removeProjectEnvContentHint7ToJSON(removeProjectEnvContentHint7) {
    return JSON.stringify(RemoveProjectEnvContentHint7$outboundSchema.parse(removeProjectEnvContentHint7));
}
export function removeProjectEnvContentHint7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint7' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint6$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint6$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint6$;
(function (RemoveProjectEnvContentHint6$) {
    /** @deprecated use `RemoveProjectEnvContentHint6$inboundSchema` instead. */
    RemoveProjectEnvContentHint6$.inboundSchema = RemoveProjectEnvContentHint6$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint6$outboundSchema` instead. */
    RemoveProjectEnvContentHint6$.outboundSchema = RemoveProjectEnvContentHint6$outboundSchema;
})(RemoveProjectEnvContentHint6$ || (RemoveProjectEnvContentHint6$ = {}));
export function removeProjectEnvContentHint6ToJSON(removeProjectEnvContentHint6) {
    return JSON.stringify(RemoveProjectEnvContentHint6$outboundSchema.parse(removeProjectEnvContentHint6));
}
export function removeProjectEnvContentHint6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint6' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$;
(function (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$ || (RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint5$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint5$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint5$;
(function (RemoveProjectEnvContentHint5$) {
    /** @deprecated use `RemoveProjectEnvContentHint5$inboundSchema` instead. */
    RemoveProjectEnvContentHint5$.inboundSchema = RemoveProjectEnvContentHint5$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint5$outboundSchema` instead. */
    RemoveProjectEnvContentHint5$.outboundSchema = RemoveProjectEnvContentHint5$outboundSchema;
})(RemoveProjectEnvContentHint5$ || (RemoveProjectEnvContentHint5$ = {}));
export function removeProjectEnvContentHint5ToJSON(removeProjectEnvContentHint5) {
    return JSON.stringify(RemoveProjectEnvContentHint5$outboundSchema.parse(removeProjectEnvContentHint5));
}
export function removeProjectEnvContentHint5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint5' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200Type$inboundSchema = z
    .nativeEnum(RemoveProjectEnvContentHintProjectsResponse200Type);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponse200Type$outboundSchema = RemoveProjectEnvContentHintProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponse200Type$;
(function (RemoveProjectEnvContentHintProjectsResponse200Type$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200Type$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200Type$.inboundSchema = RemoveProjectEnvContentHintProjectsResponse200Type$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponse200Type$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponse200Type$.outboundSchema = RemoveProjectEnvContentHintProjectsResponse200Type$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponse200Type$ || (RemoveProjectEnvContentHintProjectsResponse200Type$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint4$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint4$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponse200Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint4$;
(function (RemoveProjectEnvContentHint4$) {
    /** @deprecated use `RemoveProjectEnvContentHint4$inboundSchema` instead. */
    RemoveProjectEnvContentHint4$.inboundSchema = RemoveProjectEnvContentHint4$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint4$outboundSchema` instead. */
    RemoveProjectEnvContentHint4$.outboundSchema = RemoveProjectEnvContentHint4$outboundSchema;
})(RemoveProjectEnvContentHint4$ || (RemoveProjectEnvContentHint4$ = {}));
export function removeProjectEnvContentHint4ToJSON(removeProjectEnvContentHint4) {
    return JSON.stringify(RemoveProjectEnvContentHint4$outboundSchema.parse(removeProjectEnvContentHint4));
}
export function removeProjectEnvContentHint4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint4' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponseType$inboundSchema = z
    .nativeEnum(RemoveProjectEnvContentHintProjectsResponseType);
/** @internal */
export const RemoveProjectEnvContentHintProjectsResponseType$outboundSchema = RemoveProjectEnvContentHintProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsResponseType$;
(function (RemoveProjectEnvContentHintProjectsResponseType$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponseType$.inboundSchema = RemoveProjectEnvContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsResponseType$.outboundSchema = RemoveProjectEnvContentHintProjectsResponseType$outboundSchema;
})(RemoveProjectEnvContentHintProjectsResponseType$ || (RemoveProjectEnvContentHintProjectsResponseType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint3$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint3$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint3$;
(function (RemoveProjectEnvContentHint3$) {
    /** @deprecated use `RemoveProjectEnvContentHint3$inboundSchema` instead. */
    RemoveProjectEnvContentHint3$.inboundSchema = RemoveProjectEnvContentHint3$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint3$outboundSchema` instead. */
    RemoveProjectEnvContentHint3$.outboundSchema = RemoveProjectEnvContentHint3$outboundSchema;
})(RemoveProjectEnvContentHint3$ || (RemoveProjectEnvContentHint3$ = {}));
export function removeProjectEnvContentHint3ToJSON(removeProjectEnvContentHint3) {
    return JSON.stringify(RemoveProjectEnvContentHint3$outboundSchema.parse(removeProjectEnvContentHint3));
}
export function removeProjectEnvContentHint3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint3' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintProjectsType$inboundSchema = z
    .nativeEnum(RemoveProjectEnvContentHintProjectsType);
/** @internal */
export const RemoveProjectEnvContentHintProjectsType$outboundSchema = RemoveProjectEnvContentHintProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintProjectsType$;
(function (RemoveProjectEnvContentHintProjectsType$) {
    /** @deprecated use `RemoveProjectEnvContentHintProjectsType$inboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsType$.inboundSchema = RemoveProjectEnvContentHintProjectsType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintProjectsType$outboundSchema` instead. */
    RemoveProjectEnvContentHintProjectsType$.outboundSchema = RemoveProjectEnvContentHintProjectsType$outboundSchema;
})(RemoveProjectEnvContentHintProjectsType$ || (RemoveProjectEnvContentHintProjectsType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint2$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint2$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint2$;
(function (RemoveProjectEnvContentHint2$) {
    /** @deprecated use `RemoveProjectEnvContentHint2$inboundSchema` instead. */
    RemoveProjectEnvContentHint2$.inboundSchema = RemoveProjectEnvContentHint2$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint2$outboundSchema` instead. */
    RemoveProjectEnvContentHint2$.outboundSchema = RemoveProjectEnvContentHint2$outboundSchema;
})(RemoveProjectEnvContentHint2$ || (RemoveProjectEnvContentHint2$ = {}));
export function removeProjectEnvContentHint2ToJSON(removeProjectEnvContentHint2) {
    return JSON.stringify(RemoveProjectEnvContentHint2$outboundSchema.parse(removeProjectEnvContentHint2));
}
export function removeProjectEnvContentHint2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint2' from JSON`);
}
/** @internal */
export const RemoveProjectEnvContentHintType$inboundSchema = z.nativeEnum(RemoveProjectEnvContentHintType);
/** @internal */
export const RemoveProjectEnvContentHintType$outboundSchema = RemoveProjectEnvContentHintType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHintType$;
(function (RemoveProjectEnvContentHintType$) {
    /** @deprecated use `RemoveProjectEnvContentHintType$inboundSchema` instead. */
    RemoveProjectEnvContentHintType$.inboundSchema = RemoveProjectEnvContentHintType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHintType$outboundSchema` instead. */
    RemoveProjectEnvContentHintType$.outboundSchema = RemoveProjectEnvContentHintType$outboundSchema;
})(RemoveProjectEnvContentHintType$ || (RemoveProjectEnvContentHintType$ = {}));
/** @internal */
export const RemoveProjectEnvContentHint1$inboundSchema = z.object({
    type: RemoveProjectEnvContentHintType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const RemoveProjectEnvContentHint1$outboundSchema = z.object({
    type: RemoveProjectEnvContentHintType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvContentHint1$;
(function (RemoveProjectEnvContentHint1$) {
    /** @deprecated use `RemoveProjectEnvContentHint1$inboundSchema` instead. */
    RemoveProjectEnvContentHint1$.inboundSchema = RemoveProjectEnvContentHint1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvContentHint1$outboundSchema` instead. */
    RemoveProjectEnvContentHint1$.outboundSchema = RemoveProjectEnvContentHint1$outboundSchema;
})(RemoveProjectEnvContentHint1$ || (RemoveProjectEnvContentHint1$ = {}));
export function removeProjectEnvContentHint1ToJSON(removeProjectEnvContentHint1) {
    return JSON.stringify(RemoveProjectEnvContentHint1$outboundSchema.parse(removeProjectEnvContentHint1));
}
export function removeProjectEnvContentHint1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvContentHint1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvContentHint1' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyContentHint$inboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHint14$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint1$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint2$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint3$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint4$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint5$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint6$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint7$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint8$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint9$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint10$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint11$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint12$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint13$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint15$inboundSchema),
]);
/** @internal */
export const RemoveProjectEnvResponseBodyContentHint$outboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvContentHint14$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint1$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint2$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint3$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint4$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint5$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint6$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint7$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint8$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint9$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint10$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint11$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint12$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint13$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHint15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyContentHint$;
(function (RemoveProjectEnvResponseBodyContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyContentHint$.inboundSchema = RemoveProjectEnvResponseBodyContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyContentHint$.outboundSchema = RemoveProjectEnvResponseBodyContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyContentHint$ || (RemoveProjectEnvResponseBodyContentHint$ = {}));
export function removeProjectEnvResponseBodyContentHintToJSON(removeProjectEnvResponseBodyContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyContentHint$outboundSchema.parse(removeProjectEnvResponseBodyContentHint));
}
export function removeProjectEnvResponseBodyContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType);
/** @internal */
export const RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$;
(function (RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$.inboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$.outboundSchema = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema;
})(RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$ || (RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema = z.object({
    type: RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBodyInternalContentHint$;
(function (RemoveProjectEnvResponseBodyInternalContentHint$) {
    /** @deprecated use `RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
    RemoveProjectEnvResponseBodyInternalContentHint$.inboundSchema = RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
    RemoveProjectEnvResponseBodyInternalContentHint$.outboundSchema = RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema;
})(RemoveProjectEnvResponseBodyInternalContentHint$ || (RemoveProjectEnvResponseBodyInternalContentHint$ = {}));
export function removeProjectEnvResponseBodyInternalContentHintToJSON(removeProjectEnvResponseBodyInternalContentHint) {
    return JSON.stringify(RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema.parse(removeProjectEnvResponseBodyInternalContentHint));
}
export function removeProjectEnvResponseBodyInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBodyInternalContentHint' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBody1$inboundSchema = z.object({
    target: z.union([
        z.array(RemoveProjectEnvTarget1$inboundSchema),
        RemoveProjectEnvTarget2$inboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHint14$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint1$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint2$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint3$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint4$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint5$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint6$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint7$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint8$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint9$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint10$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint11$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint12$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint13$inboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const RemoveProjectEnvResponseBody1$outboundSchema = z.object({
    target: z.union([
        z.array(RemoveProjectEnvTarget1$outboundSchema),
        RemoveProjectEnvTarget2$outboundSchema,
    ]).optional(),
    type: RemoveProjectEnvResponseBodyType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => RemoveProjectEnvContentHint14$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint1$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint2$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint3$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint4$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint5$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint6$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint7$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint8$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint9$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint10$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint11$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint12$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint13$outboundSchema),
        z.lazy(() => RemoveProjectEnvContentHint15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBody1$;
(function (RemoveProjectEnvResponseBody1$) {
    /** @deprecated use `RemoveProjectEnvResponseBody1$inboundSchema` instead. */
    RemoveProjectEnvResponseBody1$.inboundSchema = RemoveProjectEnvResponseBody1$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBody1$outboundSchema` instead. */
    RemoveProjectEnvResponseBody1$.outboundSchema = RemoveProjectEnvResponseBody1$outboundSchema;
})(RemoveProjectEnvResponseBody1$ || (RemoveProjectEnvResponseBody1$ = {}));
export function removeProjectEnvResponseBody1ToJSON(removeProjectEnvResponseBody1) {
    return JSON.stringify(RemoveProjectEnvResponseBody1$outboundSchema.parse(removeProjectEnvResponseBody1));
}
export function removeProjectEnvResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBody1' from JSON`);
}
/** @internal */
export const RemoveProjectEnvResponseBody$inboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvResponseBody2$inboundSchema),
    z.lazy(() => RemoveProjectEnvResponseBody3$inboundSchema),
    z.array(z.lazy(() => RemoveProjectEnvResponseBody1$inboundSchema)),
]);
/** @internal */
export const RemoveProjectEnvResponseBody$outboundSchema = z.union([
    z.lazy(() => RemoveProjectEnvResponseBody2$outboundSchema),
    z.lazy(() => RemoveProjectEnvResponseBody3$outboundSchema),
    z.array(z.lazy(() => RemoveProjectEnvResponseBody1$outboundSchema)),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveProjectEnvResponseBody$;
(function (RemoveProjectEnvResponseBody$) {
    /** @deprecated use `RemoveProjectEnvResponseBody$inboundSchema` instead. */
    RemoveProjectEnvResponseBody$.inboundSchema = RemoveProjectEnvResponseBody$inboundSchema;
    /** @deprecated use `RemoveProjectEnvResponseBody$outboundSchema` instead. */
    RemoveProjectEnvResponseBody$.outboundSchema = RemoveProjectEnvResponseBody$outboundSchema;
})(RemoveProjectEnvResponseBody$ || (RemoveProjectEnvResponseBody$ = {}));
export function removeProjectEnvResponseBodyToJSON(removeProjectEnvResponseBody) {
    return JSON.stringify(RemoveProjectEnvResponseBody$outboundSchema.parse(removeProjectEnvResponseBody));
}
export function removeProjectEnvResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveProjectEnvResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveProjectEnvResponseBody' from JSON`);
}
//# sourceMappingURL=removeprojectenvop.js.map