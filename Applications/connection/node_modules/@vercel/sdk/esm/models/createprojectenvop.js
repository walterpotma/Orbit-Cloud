/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/**
 * The type of environment variable
 */
export const CreateProjectEnv2Type = {
    System: "system",
    Secret: "secret",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
};
export const CreateProjectEnv2Target = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
/**
 * The type of environment variable
 */
export const TwoType = {
    System: "system",
    Secret: "secret",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
};
export const TwoTarget = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
/**
 * The type of environment variable
 */
export const CreateProjectEnv1Type = {
    System: "system",
    Secret: "secret",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
};
export const CreateProjectEnv1Target = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
/**
 * The type of environment variable
 */
export const OneType = {
    System: "system",
    Secret: "secret",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
};
export const OneTarget = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreateProjectEnvTargetProjects2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreateProjectEnvCreatedType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type = {
    PostgresDatabase: "postgres-database",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type = {
    PostgresPassword: "postgres-password",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type = {
    PostgresHost: "postgres-host",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type = {
    PostgresUser: "postgres-user",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type = {
    PostgresUrl: "postgres-url",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type = {
    RedisUrl: "redis-url",
};
export const CreateProjectEnvCreatedProjectsResponseType = {
    FlagsSecret: "flags-secret",
};
export const CreateProjectEnvTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreateProjectEnvTarget1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreatedType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type = {
    PostgresDatabase: "postgres-database",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type = {
    PostgresPassword: "postgres-password",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type = {
    PostgresHost: "postgres-host",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type = {
    PostgresUser: "postgres-user",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
};
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const CreateProjectEnvContentHintProjectsResponse201Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const CreateProjectEnvContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const CreateProjectEnvContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const CreateProjectEnvContentHintType = {
    RedisUrl: "redis-url",
};
export const CreateProjectEnvCreatedProjectsType = {
    FlagsSecret: "flags-secret",
};
export const Value2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreateProjectEnvTargetProjectsResponse2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const CreateProjectEnvTargetProjects1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
/** @internal */
export const CreateProjectEnv2Type$inboundSchema = z.nativeEnum(CreateProjectEnv2Type);
/** @internal */
export const CreateProjectEnv2Type$outboundSchema = CreateProjectEnv2Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv2Type$;
(function (CreateProjectEnv2Type$) {
    /** @deprecated use `CreateProjectEnv2Type$inboundSchema` instead. */
    CreateProjectEnv2Type$.inboundSchema = CreateProjectEnv2Type$inboundSchema;
    /** @deprecated use `CreateProjectEnv2Type$outboundSchema` instead. */
    CreateProjectEnv2Type$.outboundSchema = CreateProjectEnv2Type$outboundSchema;
})(CreateProjectEnv2Type$ || (CreateProjectEnv2Type$ = {}));
/** @internal */
export const CreateProjectEnv2Target$inboundSchema = z.nativeEnum(CreateProjectEnv2Target);
/** @internal */
export const CreateProjectEnv2Target$outboundSchema = CreateProjectEnv2Target$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv2Target$;
(function (CreateProjectEnv2Target$) {
    /** @deprecated use `CreateProjectEnv2Target$inboundSchema` instead. */
    CreateProjectEnv2Target$.inboundSchema = CreateProjectEnv2Target$inboundSchema;
    /** @deprecated use `CreateProjectEnv2Target$outboundSchema` instead. */
    CreateProjectEnv2Target$.outboundSchema = CreateProjectEnv2Target$outboundSchema;
})(CreateProjectEnv2Target$ || (CreateProjectEnv2Target$ = {}));
/** @internal */
export const Two2$inboundSchema = z
    .object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv2Type$inboundSchema,
    target: z.array(CreateProjectEnv2Target$inboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()),
});
/** @internal */
export const Two2$outboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv2Type$outboundSchema,
    target: z.array(CreateProjectEnv2Target$outboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Two2$;
(function (Two2$) {
    /** @deprecated use `Two2$inboundSchema` instead. */
    Two2$.inboundSchema = Two2$inboundSchema;
    /** @deprecated use `Two2$outboundSchema` instead. */
    Two2$.outboundSchema = Two2$outboundSchema;
})(Two2$ || (Two2$ = {}));
export function two2ToJSON(two2) {
    return JSON.stringify(Two2$outboundSchema.parse(two2));
}
export function two2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => Two2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Two2' from JSON`);
}
/** @internal */
export const TwoType$inboundSchema = z
    .nativeEnum(TwoType);
/** @internal */
export const TwoType$outboundSchema = TwoType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TwoType$;
(function (TwoType$) {
    /** @deprecated use `TwoType$inboundSchema` instead. */
    TwoType$.inboundSchema = TwoType$inboundSchema;
    /** @deprecated use `TwoType$outboundSchema` instead. */
    TwoType$.outboundSchema = TwoType$outboundSchema;
})(TwoType$ || (TwoType$ = {}));
/** @internal */
export const TwoTarget$inboundSchema = z
    .nativeEnum(TwoTarget);
/** @internal */
export const TwoTarget$outboundSchema = TwoTarget$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TwoTarget$;
(function (TwoTarget$) {
    /** @deprecated use `TwoTarget$inboundSchema` instead. */
    TwoTarget$.inboundSchema = TwoTarget$inboundSchema;
    /** @deprecated use `TwoTarget$outboundSchema` instead. */
    TwoTarget$.outboundSchema = TwoTarget$outboundSchema;
})(TwoTarget$ || (TwoTarget$ = {}));
/** @internal */
export const Two1$inboundSchema = z
    .object({
    key: z.string(),
    value: z.string(),
    type: TwoType$inboundSchema,
    target: z.array(TwoTarget$inboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const Two1$outboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: TwoType$outboundSchema,
    target: z.array(TwoTarget$outboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Two1$;
(function (Two1$) {
    /** @deprecated use `Two1$inboundSchema` instead. */
    Two1$.inboundSchema = Two1$inboundSchema;
    /** @deprecated use `Two1$outboundSchema` instead. */
    Two1$.outboundSchema = Two1$outboundSchema;
})(Two1$ || (Two1$ = {}));
export function two1ToJSON(two1) {
    return JSON.stringify(Two1$outboundSchema.parse(two1));
}
export function two1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => Two1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Two1' from JSON`);
}
/** @internal */
export const CreateProjectEnvRequestBody2$inboundSchema = z.union([
    z.lazy(() => Two1$inboundSchema),
    z.lazy(() => Two2$inboundSchema),
]);
/** @internal */
export const CreateProjectEnvRequestBody2$outboundSchema = z.union([
    z.lazy(() => Two1$outboundSchema),
    z.lazy(() => Two2$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvRequestBody2$;
(function (CreateProjectEnvRequestBody2$) {
    /** @deprecated use `CreateProjectEnvRequestBody2$inboundSchema` instead. */
    CreateProjectEnvRequestBody2$.inboundSchema = CreateProjectEnvRequestBody2$inboundSchema;
    /** @deprecated use `CreateProjectEnvRequestBody2$outboundSchema` instead. */
    CreateProjectEnvRequestBody2$.outboundSchema = CreateProjectEnvRequestBody2$outboundSchema;
})(CreateProjectEnvRequestBody2$ || (CreateProjectEnvRequestBody2$ = {}));
export function createProjectEnvRequestBody2ToJSON(createProjectEnvRequestBody2) {
    return JSON.stringify(CreateProjectEnvRequestBody2$outboundSchema.parse(createProjectEnvRequestBody2));
}
export function createProjectEnvRequestBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvRequestBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvRequestBody2' from JSON`);
}
/** @internal */
export const CreateProjectEnv1Type$inboundSchema = z.nativeEnum(CreateProjectEnv1Type);
/** @internal */
export const CreateProjectEnv1Type$outboundSchema = CreateProjectEnv1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv1Type$;
(function (CreateProjectEnv1Type$) {
    /** @deprecated use `CreateProjectEnv1Type$inboundSchema` instead. */
    CreateProjectEnv1Type$.inboundSchema = CreateProjectEnv1Type$inboundSchema;
    /** @deprecated use `CreateProjectEnv1Type$outboundSchema` instead. */
    CreateProjectEnv1Type$.outboundSchema = CreateProjectEnv1Type$outboundSchema;
})(CreateProjectEnv1Type$ || (CreateProjectEnv1Type$ = {}));
/** @internal */
export const CreateProjectEnv1Target$inboundSchema = z.nativeEnum(CreateProjectEnv1Target);
/** @internal */
export const CreateProjectEnv1Target$outboundSchema = CreateProjectEnv1Target$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv1Target$;
(function (CreateProjectEnv1Target$) {
    /** @deprecated use `CreateProjectEnv1Target$inboundSchema` instead. */
    CreateProjectEnv1Target$.inboundSchema = CreateProjectEnv1Target$inboundSchema;
    /** @deprecated use `CreateProjectEnv1Target$outboundSchema` instead. */
    CreateProjectEnv1Target$.outboundSchema = CreateProjectEnv1Target$outboundSchema;
})(CreateProjectEnv1Target$ || (CreateProjectEnv1Target$ = {}));
/** @internal */
export const CreateProjectEnv12$inboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv1Type$inboundSchema,
    target: z.array(CreateProjectEnv1Target$inboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()),
});
/** @internal */
export const CreateProjectEnv12$outboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv1Type$outboundSchema,
    target: z.array(CreateProjectEnv1Target$outboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv12$;
(function (CreateProjectEnv12$) {
    /** @deprecated use `CreateProjectEnv12$inboundSchema` instead. */
    CreateProjectEnv12$.inboundSchema = CreateProjectEnv12$inboundSchema;
    /** @deprecated use `CreateProjectEnv12$outboundSchema` instead. */
    CreateProjectEnv12$.outboundSchema = CreateProjectEnv12$outboundSchema;
})(CreateProjectEnv12$ || (CreateProjectEnv12$ = {}));
export function createProjectEnv12ToJSON(createProjectEnv12) {
    return JSON.stringify(CreateProjectEnv12$outboundSchema.parse(createProjectEnv12));
}
export function createProjectEnv12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnv12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnv12' from JSON`);
}
/** @internal */
export const OneType$inboundSchema = z
    .nativeEnum(OneType);
/** @internal */
export const OneType$outboundSchema = OneType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OneType$;
(function (OneType$) {
    /** @deprecated use `OneType$inboundSchema` instead. */
    OneType$.inboundSchema = OneType$inboundSchema;
    /** @deprecated use `OneType$outboundSchema` instead. */
    OneType$.outboundSchema = OneType$outboundSchema;
})(OneType$ || (OneType$ = {}));
/** @internal */
export const OneTarget$inboundSchema = z
    .nativeEnum(OneTarget);
/** @internal */
export const OneTarget$outboundSchema = OneTarget$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OneTarget$;
(function (OneTarget$) {
    /** @deprecated use `OneTarget$inboundSchema` instead. */
    OneTarget$.inboundSchema = OneTarget$inboundSchema;
    /** @deprecated use `OneTarget$outboundSchema` instead. */
    OneTarget$.outboundSchema = OneTarget$outboundSchema;
})(OneTarget$ || (OneTarget$ = {}));
/** @internal */
export const CreateProjectEnv11$inboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: OneType$inboundSchema,
    target: z.array(OneTarget$inboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const CreateProjectEnv11$outboundSchema = z.object({
    key: z.string(),
    value: z.string(),
    type: OneType$outboundSchema,
    target: z.array(OneTarget$outboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnv11$;
(function (CreateProjectEnv11$) {
    /** @deprecated use `CreateProjectEnv11$inboundSchema` instead. */
    CreateProjectEnv11$.inboundSchema = CreateProjectEnv11$inboundSchema;
    /** @deprecated use `CreateProjectEnv11$outboundSchema` instead. */
    CreateProjectEnv11$.outboundSchema = CreateProjectEnv11$outboundSchema;
})(CreateProjectEnv11$ || (CreateProjectEnv11$ = {}));
export function createProjectEnv11ToJSON(createProjectEnv11) {
    return JSON.stringify(CreateProjectEnv11$outboundSchema.parse(createProjectEnv11));
}
export function createProjectEnv11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnv11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnv11' from JSON`);
}
/** @internal */
export const CreateProjectEnvRequestBody1$inboundSchema = z.union([
    z.lazy(() => CreateProjectEnv11$inboundSchema),
    z.lazy(() => CreateProjectEnv12$inboundSchema),
]);
/** @internal */
export const CreateProjectEnvRequestBody1$outboundSchema = z.union([
    z.lazy(() => CreateProjectEnv11$outboundSchema),
    z.lazy(() => CreateProjectEnv12$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvRequestBody1$;
(function (CreateProjectEnvRequestBody1$) {
    /** @deprecated use `CreateProjectEnvRequestBody1$inboundSchema` instead. */
    CreateProjectEnvRequestBody1$.inboundSchema = CreateProjectEnvRequestBody1$inboundSchema;
    /** @deprecated use `CreateProjectEnvRequestBody1$outboundSchema` instead. */
    CreateProjectEnvRequestBody1$.outboundSchema = CreateProjectEnvRequestBody1$outboundSchema;
})(CreateProjectEnvRequestBody1$ || (CreateProjectEnvRequestBody1$ = {}));
export function createProjectEnvRequestBody1ToJSON(createProjectEnvRequestBody1) {
    return JSON.stringify(CreateProjectEnvRequestBody1$outboundSchema.parse(createProjectEnvRequestBody1));
}
export function createProjectEnvRequestBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvRequestBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvRequestBody1' from JSON`);
}
/** @internal */
export const CreateProjectEnvRequestBody$inboundSchema = z.union([
    z.union([
        z.lazy(() => CreateProjectEnv11$inboundSchema),
        z.lazy(() => CreateProjectEnv12$inboundSchema),
    ]),
    z.array(z.union([
        z.lazy(() => Two1$inboundSchema),
        z.lazy(() => Two2$inboundSchema),
    ])),
]);
/** @internal */
export const CreateProjectEnvRequestBody$outboundSchema = z.union([
    z.union([
        z.lazy(() => CreateProjectEnv11$outboundSchema),
        z.lazy(() => CreateProjectEnv12$outboundSchema),
    ]),
    z.array(z.union([
        z.lazy(() => Two1$outboundSchema),
        z.lazy(() => Two2$outboundSchema),
    ])),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvRequestBody$;
(function (CreateProjectEnvRequestBody$) {
    /** @deprecated use `CreateProjectEnvRequestBody$inboundSchema` instead. */
    CreateProjectEnvRequestBody$.inboundSchema = CreateProjectEnvRequestBody$inboundSchema;
    /** @deprecated use `CreateProjectEnvRequestBody$outboundSchema` instead. */
    CreateProjectEnvRequestBody$.outboundSchema = CreateProjectEnvRequestBody$outboundSchema;
})(CreateProjectEnvRequestBody$ || (CreateProjectEnvRequestBody$ = {}));
export function createProjectEnvRequestBodyToJSON(createProjectEnvRequestBody) {
    return JSON.stringify(CreateProjectEnvRequestBody$outboundSchema.parse(createProjectEnvRequestBody));
}
export function createProjectEnvRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvRequestBody' from JSON`);
}
/** @internal */
export const CreateProjectEnvRequest$inboundSchema = z.object({
    idOrName: z.string(),
    upsert: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.union([
        z.union([
            z.lazy(() => CreateProjectEnv11$inboundSchema),
            z.lazy(() => CreateProjectEnv12$inboundSchema),
        ]),
        z.array(z.union([
            z.lazy(() => Two1$inboundSchema),
            z.lazy(() => Two2$inboundSchema),
        ])),
    ]),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const CreateProjectEnvRequest$outboundSchema = z.object({
    idOrName: z.string(),
    upsert: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.union([
        z.union([
            z.lazy(() => CreateProjectEnv11$outboundSchema),
            z.lazy(() => CreateProjectEnv12$outboundSchema),
        ]),
        z.array(z.union([
            z.lazy(() => Two1$outboundSchema),
            z.lazy(() => Two2$outboundSchema),
        ])),
    ]),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvRequest$;
(function (CreateProjectEnvRequest$) {
    /** @deprecated use `CreateProjectEnvRequest$inboundSchema` instead. */
    CreateProjectEnvRequest$.inboundSchema = CreateProjectEnvRequest$inboundSchema;
    /** @deprecated use `CreateProjectEnvRequest$outboundSchema` instead. */
    CreateProjectEnvRequest$.outboundSchema = CreateProjectEnvRequest$outboundSchema;
})(CreateProjectEnvRequest$ || (CreateProjectEnvRequest$ = {}));
export function createProjectEnvRequestToJSON(createProjectEnvRequest) {
    return JSON.stringify(CreateProjectEnvRequest$outboundSchema.parse(createProjectEnvRequest));
}
export function createProjectEnvRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvRequest' from JSON`);
}
/** @internal */
export const CreateProjectEnvTargetProjects2$inboundSchema = z.nativeEnum(CreateProjectEnvTargetProjects2);
/** @internal */
export const CreateProjectEnvTargetProjects2$outboundSchema = CreateProjectEnvTargetProjects2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTargetProjects2$;
(function (CreateProjectEnvTargetProjects2$) {
    /** @deprecated use `CreateProjectEnvTargetProjects2$inboundSchema` instead. */
    CreateProjectEnvTargetProjects2$.inboundSchema = CreateProjectEnvTargetProjects2$inboundSchema;
    /** @deprecated use `CreateProjectEnvTargetProjects2$outboundSchema` instead. */
    CreateProjectEnvTargetProjects2$.outboundSchema = CreateProjectEnvTargetProjects2$outboundSchema;
})(CreateProjectEnvTargetProjects2$ || (CreateProjectEnvTargetProjects2$ = {}));
/** @internal */
export const CreateProjectEnvCreatedTarget$inboundSchema = z.union([
    z.array(z.string()),
    CreateProjectEnvTargetProjects2$inboundSchema,
]);
/** @internal */
export const CreateProjectEnvCreatedTarget$outboundSchema = z.union([
    z.array(z.string()),
    CreateProjectEnvTargetProjects2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedTarget$;
(function (CreateProjectEnvCreatedTarget$) {
    /** @deprecated use `CreateProjectEnvCreatedTarget$inboundSchema` instead. */
    CreateProjectEnvCreatedTarget$.inboundSchema = CreateProjectEnvCreatedTarget$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedTarget$outboundSchema` instead. */
    CreateProjectEnvCreatedTarget$.outboundSchema = CreateProjectEnvCreatedTarget$outboundSchema;
})(CreateProjectEnvCreatedTarget$ || (CreateProjectEnvCreatedTarget$ = {}));
export function createProjectEnvCreatedTargetToJSON(createProjectEnvCreatedTarget) {
    return JSON.stringify(CreateProjectEnvCreatedTarget$outboundSchema.parse(createProjectEnvCreatedTarget));
}
export function createProjectEnvCreatedTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvCreatedTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvCreatedTarget' from JSON`);
}
/** @internal */
export const CreateProjectEnvCreatedType$inboundSchema = z.nativeEnum(CreateProjectEnvCreatedType);
/** @internal */
export const CreateProjectEnvCreatedType$outboundSchema = CreateProjectEnvCreatedType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedType$;
(function (CreateProjectEnvCreatedType$) {
    /** @deprecated use `CreateProjectEnvCreatedType$inboundSchema` instead. */
    CreateProjectEnvCreatedType$.inboundSchema = CreateProjectEnvCreatedType$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedType$outboundSchema` instead. */
    CreateProjectEnvCreatedType$.outboundSchema = CreateProjectEnvCreatedType$outboundSchema;
})(CreateProjectEnvCreatedType$ || (CreateProjectEnvCreatedType$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects15$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects15$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects15$;
(function (CreateProjectEnvContentHintProjects15$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects15$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects15$.inboundSchema = CreateProjectEnvContentHintProjects15$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects15$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects15$.outboundSchema = CreateProjectEnvContentHintProjects15$outboundSchema;
})(CreateProjectEnvContentHintProjects15$ || (CreateProjectEnvContentHintProjects15$ = {}));
export function createProjectEnvContentHintProjects15ToJSON(createProjectEnvContentHintProjects15) {
    return JSON.stringify(CreateProjectEnvContentHintProjects15$outboundSchema.parse(createProjectEnvContentHintProjects15));
}
export function createProjectEnvContentHintProjects15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects15' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects14$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects14$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects14$;
(function (CreateProjectEnvContentHintProjects14$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects14$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects14$.inboundSchema = CreateProjectEnvContentHintProjects14$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects14$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects14$.outboundSchema = CreateProjectEnvContentHintProjects14$outboundSchema;
})(CreateProjectEnvContentHintProjects14$ || (CreateProjectEnvContentHintProjects14$ = {}));
export function createProjectEnvContentHintProjects14ToJSON(createProjectEnvContentHintProjects14) {
    return JSON.stringify(CreateProjectEnvContentHintProjects14$outboundSchema.parse(createProjectEnvContentHintProjects14));
}
export function createProjectEnvContentHintProjects14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects14' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects13$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects13$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects13$;
(function (CreateProjectEnvContentHintProjects13$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects13$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects13$.inboundSchema = CreateProjectEnvContentHintProjects13$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects13$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects13$.outboundSchema = CreateProjectEnvContentHintProjects13$outboundSchema;
})(CreateProjectEnvContentHintProjects13$ || (CreateProjectEnvContentHintProjects13$ = {}));
export function createProjectEnvContentHintProjects13ToJSON(createProjectEnvContentHintProjects13) {
    return JSON.stringify(CreateProjectEnvContentHintProjects13$outboundSchema.parse(createProjectEnvContentHintProjects13));
}
export function createProjectEnvContentHintProjects13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects13' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects12$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects12$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects12$;
(function (CreateProjectEnvContentHintProjects12$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects12$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects12$.inboundSchema = CreateProjectEnvContentHintProjects12$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects12$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects12$.outboundSchema = CreateProjectEnvContentHintProjects12$outboundSchema;
})(CreateProjectEnvContentHintProjects12$ || (CreateProjectEnvContentHintProjects12$ = {}));
export function createProjectEnvContentHintProjects12ToJSON(createProjectEnvContentHintProjects12) {
    return JSON.stringify(CreateProjectEnvContentHintProjects12$outboundSchema.parse(createProjectEnvContentHintProjects12));
}
export function createProjectEnvContentHintProjects12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects12' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects11$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects11$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects11$;
(function (CreateProjectEnvContentHintProjects11$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects11$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects11$.inboundSchema = CreateProjectEnvContentHintProjects11$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects11$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects11$.outboundSchema = CreateProjectEnvContentHintProjects11$outboundSchema;
})(CreateProjectEnvContentHintProjects11$ || (CreateProjectEnvContentHintProjects11$ = {}));
export function createProjectEnvContentHintProjects11ToJSON(createProjectEnvContentHintProjects11) {
    return JSON.stringify(CreateProjectEnvContentHintProjects11$outboundSchema.parse(createProjectEnvContentHintProjects11));
}
export function createProjectEnvContentHintProjects11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects11' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects10$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects10$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects10$;
(function (CreateProjectEnvContentHintProjects10$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects10$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects10$.inboundSchema = CreateProjectEnvContentHintProjects10$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects10$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects10$.outboundSchema = CreateProjectEnvContentHintProjects10$outboundSchema;
})(CreateProjectEnvContentHintProjects10$ || (CreateProjectEnvContentHintProjects10$ = {}));
export function createProjectEnvContentHintProjects10ToJSON(createProjectEnvContentHintProjects10) {
    return JSON.stringify(CreateProjectEnvContentHintProjects10$outboundSchema.parse(createProjectEnvContentHintProjects10));
}
export function createProjectEnvContentHintProjects10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects10' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects9$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects9$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects9$;
(function (CreateProjectEnvContentHintProjects9$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects9$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects9$.inboundSchema = CreateProjectEnvContentHintProjects9$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects9$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects9$.outboundSchema = CreateProjectEnvContentHintProjects9$outboundSchema;
})(CreateProjectEnvContentHintProjects9$ || (CreateProjectEnvContentHintProjects9$ = {}));
export function createProjectEnvContentHintProjects9ToJSON(createProjectEnvContentHintProjects9) {
    return JSON.stringify(CreateProjectEnvContentHintProjects9$outboundSchema.parse(createProjectEnvContentHintProjects9));
}
export function createProjectEnvContentHintProjects9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects9' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects8$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects8$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects8$;
(function (CreateProjectEnvContentHintProjects8$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects8$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects8$.inboundSchema = CreateProjectEnvContentHintProjects8$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects8$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects8$.outboundSchema = CreateProjectEnvContentHintProjects8$outboundSchema;
})(CreateProjectEnvContentHintProjects8$ || (CreateProjectEnvContentHintProjects8$ = {}));
export function createProjectEnvContentHintProjects8ToJSON(createProjectEnvContentHintProjects8) {
    return JSON.stringify(CreateProjectEnvContentHintProjects8$outboundSchema.parse(createProjectEnvContentHintProjects8));
}
export function createProjectEnvContentHintProjects8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects8' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects7$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects7$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects7$;
(function (CreateProjectEnvContentHintProjects7$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects7$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects7$.inboundSchema = CreateProjectEnvContentHintProjects7$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects7$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects7$.outboundSchema = CreateProjectEnvContentHintProjects7$outboundSchema;
})(CreateProjectEnvContentHintProjects7$ || (CreateProjectEnvContentHintProjects7$ = {}));
export function createProjectEnvContentHintProjects7ToJSON(createProjectEnvContentHintProjects7) {
    return JSON.stringify(CreateProjectEnvContentHintProjects7$outboundSchema.parse(createProjectEnvContentHintProjects7));
}
export function createProjectEnvContentHintProjects7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects7' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects6$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects6$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects6$;
(function (CreateProjectEnvContentHintProjects6$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects6$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects6$.inboundSchema = CreateProjectEnvContentHintProjects6$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects6$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects6$.outboundSchema = CreateProjectEnvContentHintProjects6$outboundSchema;
})(CreateProjectEnvContentHintProjects6$ || (CreateProjectEnvContentHintProjects6$ = {}));
export function createProjectEnvContentHintProjects6ToJSON(createProjectEnvContentHintProjects6) {
    return JSON.stringify(CreateProjectEnvContentHintProjects6$outboundSchema.parse(createProjectEnvContentHintProjects6));
}
export function createProjectEnvContentHintProjects6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects6' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects5$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects5$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects5$;
(function (CreateProjectEnvContentHintProjects5$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects5$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects5$.inboundSchema = CreateProjectEnvContentHintProjects5$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects5$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects5$.outboundSchema = CreateProjectEnvContentHintProjects5$outboundSchema;
})(CreateProjectEnvContentHintProjects5$ || (CreateProjectEnvContentHintProjects5$ = {}));
export function createProjectEnvContentHintProjects5ToJSON(createProjectEnvContentHintProjects5) {
    return JSON.stringify(CreateProjectEnvContentHintProjects5$outboundSchema.parse(createProjectEnvContentHintProjects5));
}
export function createProjectEnvContentHintProjects5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects5' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects4$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects4$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects4$;
(function (CreateProjectEnvContentHintProjects4$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects4$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects4$.inboundSchema = CreateProjectEnvContentHintProjects4$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects4$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects4$.outboundSchema = CreateProjectEnvContentHintProjects4$outboundSchema;
})(CreateProjectEnvContentHintProjects4$ || (CreateProjectEnvContentHintProjects4$ = {}));
export function createProjectEnvContentHintProjects4ToJSON(createProjectEnvContentHintProjects4) {
    return JSON.stringify(CreateProjectEnvContentHintProjects4$outboundSchema.parse(createProjectEnvContentHintProjects4));
}
export function createProjectEnvContentHintProjects4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects4' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects3$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects3$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects3$;
(function (CreateProjectEnvContentHintProjects3$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects3$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects3$.inboundSchema = CreateProjectEnvContentHintProjects3$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects3$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects3$.outboundSchema = CreateProjectEnvContentHintProjects3$outboundSchema;
})(CreateProjectEnvContentHintProjects3$ || (CreateProjectEnvContentHintProjects3$ = {}));
export function createProjectEnvContentHintProjects3ToJSON(createProjectEnvContentHintProjects3) {
    return JSON.stringify(CreateProjectEnvContentHintProjects3$outboundSchema.parse(createProjectEnvContentHintProjects3));
}
export function createProjectEnvContentHintProjects3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects3' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects2$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects2$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects2$;
(function (CreateProjectEnvContentHintProjects2$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects2$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects2$.inboundSchema = CreateProjectEnvContentHintProjects2$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects2$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects2$.outboundSchema = CreateProjectEnvContentHintProjects2$outboundSchema;
})(CreateProjectEnvContentHintProjects2$ || (CreateProjectEnvContentHintProjects2$ = {}));
export function createProjectEnvContentHintProjects2ToJSON(createProjectEnvContentHintProjects2) {
    return JSON.stringify(CreateProjectEnvContentHintProjects2$outboundSchema.parse(createProjectEnvContentHintProjects2));
}
export function createProjectEnvContentHintProjects2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects2' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjects1$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHintProjects1$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjects1$;
(function (CreateProjectEnvContentHintProjects1$) {
    /** @deprecated use `CreateProjectEnvContentHintProjects1$inboundSchema` instead. */
    CreateProjectEnvContentHintProjects1$.inboundSchema = CreateProjectEnvContentHintProjects1$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjects1$outboundSchema` instead. */
    CreateProjectEnvContentHintProjects1$.outboundSchema = CreateProjectEnvContentHintProjects1$outboundSchema;
})(CreateProjectEnvContentHintProjects1$ || (CreateProjectEnvContentHintProjects1$ = {}));
export function createProjectEnvContentHintProjects1ToJSON(createProjectEnvContentHintProjects1) {
    return JSON.stringify(CreateProjectEnvContentHintProjects1$outboundSchema.parse(createProjectEnvContentHintProjects1));
}
export function createProjectEnvContentHintProjects1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHintProjects1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHintProjects1' from JSON`);
}
/** @internal */
export const CreateProjectEnvCreatedContentHint$inboundSchema = z.union([
    z.lazy(() => CreateProjectEnvContentHintProjects14$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects1$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects2$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects3$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects4$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects5$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects6$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects7$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects8$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects9$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects10$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects11$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects12$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects13$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects15$inboundSchema),
]);
/** @internal */
export const CreateProjectEnvCreatedContentHint$outboundSchema = z.union([
    z.lazy(() => CreateProjectEnvContentHintProjects14$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects1$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects2$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects3$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects4$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects5$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects6$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects7$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects8$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects9$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects10$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects11$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects12$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects13$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHintProjects15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedContentHint$;
(function (CreateProjectEnvCreatedContentHint$) {
    /** @deprecated use `CreateProjectEnvCreatedContentHint$inboundSchema` instead. */
    CreateProjectEnvCreatedContentHint$.inboundSchema = CreateProjectEnvCreatedContentHint$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedContentHint$outboundSchema` instead. */
    CreateProjectEnvCreatedContentHint$.outboundSchema = CreateProjectEnvCreatedContentHint$outboundSchema;
})(CreateProjectEnvCreatedContentHint$ || (CreateProjectEnvCreatedContentHint$ = {}));
export function createProjectEnvCreatedContentHintToJSON(createProjectEnvCreatedContentHint) {
    return JSON.stringify(CreateProjectEnvCreatedContentHint$outboundSchema.parse(createProjectEnvCreatedContentHint));
}
export function createProjectEnvCreatedContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvCreatedContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvCreatedContentHint' from JSON`);
}
/** @internal */
export const CreateProjectEnvCreatedProjectsResponseType$inboundSchema = z
    .nativeEnum(CreateProjectEnvCreatedProjectsResponseType);
/** @internal */
export const CreateProjectEnvCreatedProjectsResponseType$outboundSchema = CreateProjectEnvCreatedProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedProjectsResponseType$;
(function (CreateProjectEnvCreatedProjectsResponseType$) {
    /** @deprecated use `CreateProjectEnvCreatedProjectsResponseType$inboundSchema` instead. */
    CreateProjectEnvCreatedProjectsResponseType$.inboundSchema = CreateProjectEnvCreatedProjectsResponseType$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedProjectsResponseType$outboundSchema` instead. */
    CreateProjectEnvCreatedProjectsResponseType$.outboundSchema = CreateProjectEnvCreatedProjectsResponseType$outboundSchema;
})(CreateProjectEnvCreatedProjectsResponseType$ || (CreateProjectEnvCreatedProjectsResponseType$ = {}));
/** @internal */
export const CreateProjectEnvCreatedInternalContentHint$inboundSchema = z.object({
    type: CreateProjectEnvCreatedProjectsResponseType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const CreateProjectEnvCreatedInternalContentHint$outboundSchema = z.object({
    type: CreateProjectEnvCreatedProjectsResponseType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedInternalContentHint$;
(function (CreateProjectEnvCreatedInternalContentHint$) {
    /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$inboundSchema` instead. */
    CreateProjectEnvCreatedInternalContentHint$.inboundSchema = CreateProjectEnvCreatedInternalContentHint$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$outboundSchema` instead. */
    CreateProjectEnvCreatedInternalContentHint$.outboundSchema = CreateProjectEnvCreatedInternalContentHint$outboundSchema;
})(CreateProjectEnvCreatedInternalContentHint$ || (CreateProjectEnvCreatedInternalContentHint$ = {}));
export function createProjectEnvCreatedInternalContentHintToJSON(createProjectEnvCreatedInternalContentHint) {
    return JSON.stringify(CreateProjectEnvCreatedInternalContentHint$outboundSchema.parse(createProjectEnvCreatedInternalContentHint));
}
export function createProjectEnvCreatedInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvCreatedInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvCreatedInternalContentHint' from JSON`);
}
/** @internal */
export const Created2$inboundSchema = z.object({
    target: z.union([
        z.array(z.string()),
        CreateProjectEnvTargetProjects2$inboundSchema,
    ]).optional(),
    type: CreateProjectEnvCreatedType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => CreateProjectEnvContentHintProjects14$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects1$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects2$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects3$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects4$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects5$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects6$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects7$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects8$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects9$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects10$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects11$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects12$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects13$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => CreateProjectEnvCreatedInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/** @internal */
export const Created2$outboundSchema = z.object({
    target: z.union([
        z.array(z.string()),
        CreateProjectEnvTargetProjects2$outboundSchema,
    ]).optional(),
    type: CreateProjectEnvCreatedType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => CreateProjectEnvContentHintProjects14$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects1$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects2$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects3$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects4$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects5$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects6$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects7$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects8$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects9$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects10$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects11$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects12$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects13$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHintProjects15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => CreateProjectEnvCreatedInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Created2$;
(function (Created2$) {
    /** @deprecated use `Created2$inboundSchema` instead. */
    Created2$.inboundSchema = Created2$inboundSchema;
    /** @deprecated use `Created2$outboundSchema` instead. */
    Created2$.outboundSchema = Created2$outboundSchema;
})(Created2$ || (Created2$ = {}));
export function created2ToJSON(created2) {
    return JSON.stringify(Created2$outboundSchema.parse(created2));
}
export function created2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => Created2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Created2' from JSON`);
}
/** @internal */
export const CreateProjectEnvTarget2$inboundSchema = z.nativeEnum(CreateProjectEnvTarget2);
/** @internal */
export const CreateProjectEnvTarget2$outboundSchema = CreateProjectEnvTarget2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTarget2$;
(function (CreateProjectEnvTarget2$) {
    /** @deprecated use `CreateProjectEnvTarget2$inboundSchema` instead. */
    CreateProjectEnvTarget2$.inboundSchema = CreateProjectEnvTarget2$inboundSchema;
    /** @deprecated use `CreateProjectEnvTarget2$outboundSchema` instead. */
    CreateProjectEnvTarget2$.outboundSchema = CreateProjectEnvTarget2$outboundSchema;
})(CreateProjectEnvTarget2$ || (CreateProjectEnvTarget2$ = {}));
/** @internal */
export const CreateProjectEnvTarget1$inboundSchema = z.nativeEnum(CreateProjectEnvTarget1);
/** @internal */
export const CreateProjectEnvTarget1$outboundSchema = CreateProjectEnvTarget1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTarget1$;
(function (CreateProjectEnvTarget1$) {
    /** @deprecated use `CreateProjectEnvTarget1$inboundSchema` instead. */
    CreateProjectEnvTarget1$.inboundSchema = CreateProjectEnvTarget1$inboundSchema;
    /** @deprecated use `CreateProjectEnvTarget1$outboundSchema` instead. */
    CreateProjectEnvTarget1$.outboundSchema = CreateProjectEnvTarget1$outboundSchema;
})(CreateProjectEnvTarget1$ || (CreateProjectEnvTarget1$ = {}));
/** @internal */
export const CreatedTarget$inboundSchema = z.union([
    z.array(CreateProjectEnvTarget1$inboundSchema),
    CreateProjectEnvTarget2$inboundSchema,
]);
/** @internal */
export const CreatedTarget$outboundSchema = z.union([
    z.array(CreateProjectEnvTarget1$outboundSchema),
    CreateProjectEnvTarget2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreatedTarget$;
(function (CreatedTarget$) {
    /** @deprecated use `CreatedTarget$inboundSchema` instead. */
    CreatedTarget$.inboundSchema = CreatedTarget$inboundSchema;
    /** @deprecated use `CreatedTarget$outboundSchema` instead. */
    CreatedTarget$.outboundSchema = CreatedTarget$outboundSchema;
})(CreatedTarget$ || (CreatedTarget$ = {}));
export function createdTargetToJSON(createdTarget) {
    return JSON.stringify(CreatedTarget$outboundSchema.parse(createdTarget));
}
export function createdTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreatedTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatedTarget' from JSON`);
}
/** @internal */
export const CreatedType$inboundSchema = z
    .nativeEnum(CreatedType);
/** @internal */
export const CreatedType$outboundSchema = CreatedType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreatedType$;
(function (CreatedType$) {
    /** @deprecated use `CreatedType$inboundSchema` instead. */
    CreatedType$.inboundSchema = CreatedType$inboundSchema;
    /** @deprecated use `CreatedType$outboundSchema` instead. */
    CreatedType$.outboundSchema = CreatedType$outboundSchema;
})(CreatedType$ || (CreatedType$ = {}));
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint15$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint15$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint15$;
(function (CreateProjectEnvContentHint15$) {
    /** @deprecated use `CreateProjectEnvContentHint15$inboundSchema` instead. */
    CreateProjectEnvContentHint15$.inboundSchema = CreateProjectEnvContentHint15$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint15$outboundSchema` instead. */
    CreateProjectEnvContentHint15$.outboundSchema = CreateProjectEnvContentHint15$outboundSchema;
})(CreateProjectEnvContentHint15$ || (CreateProjectEnvContentHint15$ = {}));
export function createProjectEnvContentHint15ToJSON(createProjectEnvContentHint15) {
    return JSON.stringify(CreateProjectEnvContentHint15$outboundSchema.parse(createProjectEnvContentHint15));
}
export function createProjectEnvContentHint15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint15' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint14$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint14$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint14$;
(function (CreateProjectEnvContentHint14$) {
    /** @deprecated use `CreateProjectEnvContentHint14$inboundSchema` instead. */
    CreateProjectEnvContentHint14$.inboundSchema = CreateProjectEnvContentHint14$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint14$outboundSchema` instead. */
    CreateProjectEnvContentHint14$.outboundSchema = CreateProjectEnvContentHint14$outboundSchema;
})(CreateProjectEnvContentHint14$ || (CreateProjectEnvContentHint14$ = {}));
export function createProjectEnvContentHint14ToJSON(createProjectEnvContentHint14) {
    return JSON.stringify(CreateProjectEnvContentHint14$outboundSchema.parse(createProjectEnvContentHint14));
}
export function createProjectEnvContentHint14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint14' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint13$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint13$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint13$;
(function (CreateProjectEnvContentHint13$) {
    /** @deprecated use `CreateProjectEnvContentHint13$inboundSchema` instead. */
    CreateProjectEnvContentHint13$.inboundSchema = CreateProjectEnvContentHint13$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint13$outboundSchema` instead. */
    CreateProjectEnvContentHint13$.outboundSchema = CreateProjectEnvContentHint13$outboundSchema;
})(CreateProjectEnvContentHint13$ || (CreateProjectEnvContentHint13$ = {}));
export function createProjectEnvContentHint13ToJSON(createProjectEnvContentHint13) {
    return JSON.stringify(CreateProjectEnvContentHint13$outboundSchema.parse(createProjectEnvContentHint13));
}
export function createProjectEnvContentHint13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint13' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint12$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint12$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint12$;
(function (CreateProjectEnvContentHint12$) {
    /** @deprecated use `CreateProjectEnvContentHint12$inboundSchema` instead. */
    CreateProjectEnvContentHint12$.inboundSchema = CreateProjectEnvContentHint12$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint12$outboundSchema` instead. */
    CreateProjectEnvContentHint12$.outboundSchema = CreateProjectEnvContentHint12$outboundSchema;
})(CreateProjectEnvContentHint12$ || (CreateProjectEnvContentHint12$ = {}));
export function createProjectEnvContentHint12ToJSON(createProjectEnvContentHint12) {
    return JSON.stringify(CreateProjectEnvContentHint12$outboundSchema.parse(createProjectEnvContentHint12));
}
export function createProjectEnvContentHint12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint12' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint11$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint11$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint11$;
(function (CreateProjectEnvContentHint11$) {
    /** @deprecated use `CreateProjectEnvContentHint11$inboundSchema` instead. */
    CreateProjectEnvContentHint11$.inboundSchema = CreateProjectEnvContentHint11$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint11$outboundSchema` instead. */
    CreateProjectEnvContentHint11$.outboundSchema = CreateProjectEnvContentHint11$outboundSchema;
})(CreateProjectEnvContentHint11$ || (CreateProjectEnvContentHint11$ = {}));
export function createProjectEnvContentHint11ToJSON(createProjectEnvContentHint11) {
    return JSON.stringify(CreateProjectEnvContentHint11$outboundSchema.parse(createProjectEnvContentHint11));
}
export function createProjectEnvContentHint11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint11' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint10$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint10$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint10$;
(function (CreateProjectEnvContentHint10$) {
    /** @deprecated use `CreateProjectEnvContentHint10$inboundSchema` instead. */
    CreateProjectEnvContentHint10$.inboundSchema = CreateProjectEnvContentHint10$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint10$outboundSchema` instead. */
    CreateProjectEnvContentHint10$.outboundSchema = CreateProjectEnvContentHint10$outboundSchema;
})(CreateProjectEnvContentHint10$ || (CreateProjectEnvContentHint10$ = {}));
export function createProjectEnvContentHint10ToJSON(createProjectEnvContentHint10) {
    return JSON.stringify(CreateProjectEnvContentHint10$outboundSchema.parse(createProjectEnvContentHint10));
}
export function createProjectEnvContentHint10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint10' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint9$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint9$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint9$;
(function (CreateProjectEnvContentHint9$) {
    /** @deprecated use `CreateProjectEnvContentHint9$inboundSchema` instead. */
    CreateProjectEnvContentHint9$.inboundSchema = CreateProjectEnvContentHint9$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint9$outboundSchema` instead. */
    CreateProjectEnvContentHint9$.outboundSchema = CreateProjectEnvContentHint9$outboundSchema;
})(CreateProjectEnvContentHint9$ || (CreateProjectEnvContentHint9$ = {}));
export function createProjectEnvContentHint9ToJSON(createProjectEnvContentHint9) {
    return JSON.stringify(CreateProjectEnvContentHint9$outboundSchema.parse(createProjectEnvContentHint9));
}
export function createProjectEnvContentHint9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint9' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint8$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint8$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint8$;
(function (CreateProjectEnvContentHint8$) {
    /** @deprecated use `CreateProjectEnvContentHint8$inboundSchema` instead. */
    CreateProjectEnvContentHint8$.inboundSchema = CreateProjectEnvContentHint8$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint8$outboundSchema` instead. */
    CreateProjectEnvContentHint8$.outboundSchema = CreateProjectEnvContentHint8$outboundSchema;
})(CreateProjectEnvContentHint8$ || (CreateProjectEnvContentHint8$ = {}));
export function createProjectEnvContentHint8ToJSON(createProjectEnvContentHint8) {
    return JSON.stringify(CreateProjectEnvContentHint8$outboundSchema.parse(createProjectEnvContentHint8));
}
export function createProjectEnvContentHint8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint8' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint7$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint7$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint7$;
(function (CreateProjectEnvContentHint7$) {
    /** @deprecated use `CreateProjectEnvContentHint7$inboundSchema` instead. */
    CreateProjectEnvContentHint7$.inboundSchema = CreateProjectEnvContentHint7$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint7$outboundSchema` instead. */
    CreateProjectEnvContentHint7$.outboundSchema = CreateProjectEnvContentHint7$outboundSchema;
})(CreateProjectEnvContentHint7$ || (CreateProjectEnvContentHint7$ = {}));
export function createProjectEnvContentHint7ToJSON(createProjectEnvContentHint7) {
    return JSON.stringify(CreateProjectEnvContentHint7$outboundSchema.parse(createProjectEnvContentHint7));
}
export function createProjectEnvContentHint7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint7' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint6$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint6$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint6$;
(function (CreateProjectEnvContentHint6$) {
    /** @deprecated use `CreateProjectEnvContentHint6$inboundSchema` instead. */
    CreateProjectEnvContentHint6$.inboundSchema = CreateProjectEnvContentHint6$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint6$outboundSchema` instead. */
    CreateProjectEnvContentHint6$.outboundSchema = CreateProjectEnvContentHint6$outboundSchema;
})(CreateProjectEnvContentHint6$ || (CreateProjectEnvContentHint6$ = {}));
export function createProjectEnvContentHint6ToJSON(createProjectEnvContentHint6) {
    return JSON.stringify(CreateProjectEnvContentHint6$outboundSchema.parse(createProjectEnvContentHint6));
}
export function createProjectEnvContentHint6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint6' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$;
(function (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$ || (CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint5$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint5$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint5$;
(function (CreateProjectEnvContentHint5$) {
    /** @deprecated use `CreateProjectEnvContentHint5$inboundSchema` instead. */
    CreateProjectEnvContentHint5$.inboundSchema = CreateProjectEnvContentHint5$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint5$outboundSchema` instead. */
    CreateProjectEnvContentHint5$.outboundSchema = CreateProjectEnvContentHint5$outboundSchema;
})(CreateProjectEnvContentHint5$ || (CreateProjectEnvContentHint5$ = {}));
export function createProjectEnvContentHint5ToJSON(createProjectEnvContentHint5) {
    return JSON.stringify(CreateProjectEnvContentHint5$outboundSchema.parse(createProjectEnvContentHint5));
}
export function createProjectEnvContentHint5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint5' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema = z
    .nativeEnum(CreateProjectEnvContentHintProjectsResponse201Type);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema = CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponse201Type$;
(function (CreateProjectEnvContentHintProjectsResponse201Type$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201Type$.inboundSchema = CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponse201Type$.outboundSchema = CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponse201Type$ || (CreateProjectEnvContentHintProjectsResponse201Type$ = {}));
/** @internal */
export const CreateProjectEnvContentHint4$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint4$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint4$;
(function (CreateProjectEnvContentHint4$) {
    /** @deprecated use `CreateProjectEnvContentHint4$inboundSchema` instead. */
    CreateProjectEnvContentHint4$.inboundSchema = CreateProjectEnvContentHint4$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint4$outboundSchema` instead. */
    CreateProjectEnvContentHint4$.outboundSchema = CreateProjectEnvContentHint4$outboundSchema;
})(CreateProjectEnvContentHint4$ || (CreateProjectEnvContentHint4$ = {}));
export function createProjectEnvContentHint4ToJSON(createProjectEnvContentHint4) {
    return JSON.stringify(CreateProjectEnvContentHint4$outboundSchema.parse(createProjectEnvContentHint4));
}
export function createProjectEnvContentHint4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint4' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsResponseType$inboundSchema = z
    .nativeEnum(CreateProjectEnvContentHintProjectsResponseType);
/** @internal */
export const CreateProjectEnvContentHintProjectsResponseType$outboundSchema = CreateProjectEnvContentHintProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsResponseType$;
(function (CreateProjectEnvContentHintProjectsResponseType$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponseType$.inboundSchema = CreateProjectEnvContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsResponseType$.outboundSchema = CreateProjectEnvContentHintProjectsResponseType$outboundSchema;
})(CreateProjectEnvContentHintProjectsResponseType$ || (CreateProjectEnvContentHintProjectsResponseType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint3$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint3$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint3$;
(function (CreateProjectEnvContentHint3$) {
    /** @deprecated use `CreateProjectEnvContentHint3$inboundSchema` instead. */
    CreateProjectEnvContentHint3$.inboundSchema = CreateProjectEnvContentHint3$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint3$outboundSchema` instead. */
    CreateProjectEnvContentHint3$.outboundSchema = CreateProjectEnvContentHint3$outboundSchema;
})(CreateProjectEnvContentHint3$ || (CreateProjectEnvContentHint3$ = {}));
export function createProjectEnvContentHint3ToJSON(createProjectEnvContentHint3) {
    return JSON.stringify(CreateProjectEnvContentHint3$outboundSchema.parse(createProjectEnvContentHint3));
}
export function createProjectEnvContentHint3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint3' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintProjectsType$inboundSchema = z
    .nativeEnum(CreateProjectEnvContentHintProjectsType);
/** @internal */
export const CreateProjectEnvContentHintProjectsType$outboundSchema = CreateProjectEnvContentHintProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintProjectsType$;
(function (CreateProjectEnvContentHintProjectsType$) {
    /** @deprecated use `CreateProjectEnvContentHintProjectsType$inboundSchema` instead. */
    CreateProjectEnvContentHintProjectsType$.inboundSchema = CreateProjectEnvContentHintProjectsType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintProjectsType$outboundSchema` instead. */
    CreateProjectEnvContentHintProjectsType$.outboundSchema = CreateProjectEnvContentHintProjectsType$outboundSchema;
})(CreateProjectEnvContentHintProjectsType$ || (CreateProjectEnvContentHintProjectsType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint2$inboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint2$outboundSchema = z.object({
    type: CreateProjectEnvContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint2$;
(function (CreateProjectEnvContentHint2$) {
    /** @deprecated use `CreateProjectEnvContentHint2$inboundSchema` instead. */
    CreateProjectEnvContentHint2$.inboundSchema = CreateProjectEnvContentHint2$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint2$outboundSchema` instead. */
    CreateProjectEnvContentHint2$.outboundSchema = CreateProjectEnvContentHint2$outboundSchema;
})(CreateProjectEnvContentHint2$ || (CreateProjectEnvContentHint2$ = {}));
export function createProjectEnvContentHint2ToJSON(createProjectEnvContentHint2) {
    return JSON.stringify(CreateProjectEnvContentHint2$outboundSchema.parse(createProjectEnvContentHint2));
}
export function createProjectEnvContentHint2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint2' from JSON`);
}
/** @internal */
export const CreateProjectEnvContentHintType$inboundSchema = z.nativeEnum(CreateProjectEnvContentHintType);
/** @internal */
export const CreateProjectEnvContentHintType$outboundSchema = CreateProjectEnvContentHintType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHintType$;
(function (CreateProjectEnvContentHintType$) {
    /** @deprecated use `CreateProjectEnvContentHintType$inboundSchema` instead. */
    CreateProjectEnvContentHintType$.inboundSchema = CreateProjectEnvContentHintType$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHintType$outboundSchema` instead. */
    CreateProjectEnvContentHintType$.outboundSchema = CreateProjectEnvContentHintType$outboundSchema;
})(CreateProjectEnvContentHintType$ || (CreateProjectEnvContentHintType$ = {}));
/** @internal */
export const CreateProjectEnvContentHint1$inboundSchema = z.object({
    type: CreateProjectEnvContentHintType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const CreateProjectEnvContentHint1$outboundSchema = z.object({
    type: CreateProjectEnvContentHintType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvContentHint1$;
(function (CreateProjectEnvContentHint1$) {
    /** @deprecated use `CreateProjectEnvContentHint1$inboundSchema` instead. */
    CreateProjectEnvContentHint1$.inboundSchema = CreateProjectEnvContentHint1$inboundSchema;
    /** @deprecated use `CreateProjectEnvContentHint1$outboundSchema` instead. */
    CreateProjectEnvContentHint1$.outboundSchema = CreateProjectEnvContentHint1$outboundSchema;
})(CreateProjectEnvContentHint1$ || (CreateProjectEnvContentHint1$ = {}));
export function createProjectEnvContentHint1ToJSON(createProjectEnvContentHint1) {
    return JSON.stringify(CreateProjectEnvContentHint1$outboundSchema.parse(createProjectEnvContentHint1));
}
export function createProjectEnvContentHint1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvContentHint1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvContentHint1' from JSON`);
}
/** @internal */
export const CreatedContentHint$inboundSchema = z.union([
    z.lazy(() => CreateProjectEnvContentHint14$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint1$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint2$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint3$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint4$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint5$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint6$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint7$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint8$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint9$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint10$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint11$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint12$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint13$inboundSchema),
    z.lazy(() => CreateProjectEnvContentHint15$inboundSchema),
]);
/** @internal */
export const CreatedContentHint$outboundSchema = z.union([
    z.lazy(() => CreateProjectEnvContentHint14$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint1$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint2$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint3$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint4$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint5$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint6$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint7$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint8$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint9$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint10$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint11$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint12$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint13$outboundSchema),
    z.lazy(() => CreateProjectEnvContentHint15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreatedContentHint$;
(function (CreatedContentHint$) {
    /** @deprecated use `CreatedContentHint$inboundSchema` instead. */
    CreatedContentHint$.inboundSchema = CreatedContentHint$inboundSchema;
    /** @deprecated use `CreatedContentHint$outboundSchema` instead. */
    CreatedContentHint$.outboundSchema = CreatedContentHint$outboundSchema;
})(CreatedContentHint$ || (CreatedContentHint$ = {}));
export function createdContentHintToJSON(createdContentHint) {
    return JSON.stringify(CreatedContentHint$outboundSchema.parse(createdContentHint));
}
export function createdContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreatedContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatedContentHint' from JSON`);
}
/** @internal */
export const CreateProjectEnvCreatedProjectsType$inboundSchema = z.nativeEnum(CreateProjectEnvCreatedProjectsType);
/** @internal */
export const CreateProjectEnvCreatedProjectsType$outboundSchema = CreateProjectEnvCreatedProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvCreatedProjectsType$;
(function (CreateProjectEnvCreatedProjectsType$) {
    /** @deprecated use `CreateProjectEnvCreatedProjectsType$inboundSchema` instead. */
    CreateProjectEnvCreatedProjectsType$.inboundSchema = CreateProjectEnvCreatedProjectsType$inboundSchema;
    /** @deprecated use `CreateProjectEnvCreatedProjectsType$outboundSchema` instead. */
    CreateProjectEnvCreatedProjectsType$.outboundSchema = CreateProjectEnvCreatedProjectsType$outboundSchema;
})(CreateProjectEnvCreatedProjectsType$ || (CreateProjectEnvCreatedProjectsType$ = {}));
/** @internal */
export const CreatedInternalContentHint$inboundSchema = z.object({
    type: CreateProjectEnvCreatedProjectsType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const CreatedInternalContentHint$outboundSchema = z.object({
    type: CreateProjectEnvCreatedProjectsType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreatedInternalContentHint$;
(function (CreatedInternalContentHint$) {
    /** @deprecated use `CreatedInternalContentHint$inboundSchema` instead. */
    CreatedInternalContentHint$.inboundSchema = CreatedInternalContentHint$inboundSchema;
    /** @deprecated use `CreatedInternalContentHint$outboundSchema` instead. */
    CreatedInternalContentHint$.outboundSchema = CreatedInternalContentHint$outboundSchema;
})(CreatedInternalContentHint$ || (CreatedInternalContentHint$ = {}));
export function createdInternalContentHintToJSON(createdInternalContentHint) {
    return JSON.stringify(CreatedInternalContentHint$outboundSchema.parse(createdInternalContentHint));
}
export function createdInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreatedInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatedInternalContentHint' from JSON`);
}
/** @internal */
export const Created1$inboundSchema = z.object({
    target: z.union([
        z.array(CreateProjectEnvTarget1$inboundSchema),
        CreateProjectEnvTarget2$inboundSchema,
    ]).optional(),
    type: CreatedType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => CreateProjectEnvContentHint14$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint1$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint2$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint3$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint4$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint5$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint6$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint7$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint8$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint9$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint10$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint11$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint12$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint13$inboundSchema),
        z.lazy(() => CreateProjectEnvContentHint15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => CreatedInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/** @internal */
export const Created1$outboundSchema = z.object({
    target: z.union([
        z.array(CreateProjectEnvTarget1$outboundSchema),
        CreateProjectEnvTarget2$outboundSchema,
    ]).optional(),
    type: CreatedType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => CreateProjectEnvContentHint14$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint1$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint2$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint3$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint4$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint5$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint6$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint7$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint8$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint9$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint10$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint11$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint12$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint13$outboundSchema),
        z.lazy(() => CreateProjectEnvContentHint15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => CreatedInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    system: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Created1$;
(function (Created1$) {
    /** @deprecated use `Created1$inboundSchema` instead. */
    Created1$.inboundSchema = Created1$inboundSchema;
    /** @deprecated use `Created1$outboundSchema` instead. */
    Created1$.outboundSchema = Created1$outboundSchema;
})(Created1$ || (Created1$ = {}));
export function created1ToJSON(created1) {
    return JSON.stringify(Created1$outboundSchema.parse(created1));
}
export function created1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => Created1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Created1' from JSON`);
}
/** @internal */
export const Created$inboundSchema = z.union([
    z.lazy(() => Created1$inboundSchema),
    z.array(z.lazy(() => Created2$inboundSchema)),
]);
/** @internal */
export const Created$outboundSchema = z.union([
    z.lazy(() => Created1$outboundSchema),
    z.array(z.lazy(() => Created2$outboundSchema)),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Created$;
(function (Created$) {
    /** @deprecated use `Created$inboundSchema` instead. */
    Created$.inboundSchema = Created$inboundSchema;
    /** @deprecated use `Created$outboundSchema` instead. */
    Created$.outboundSchema = Created$outboundSchema;
})(Created$ || (Created$ = {}));
export function createdToJSON(created) {
    return JSON.stringify(Created$outboundSchema.parse(created));
}
export function createdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Created$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Created' from JSON`);
}
/** @internal */
export const Value2$inboundSchema = z
    .nativeEnum(Value2);
/** @internal */
export const Value2$outboundSchema = Value2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Value2$;
(function (Value2$) {
    /** @deprecated use `Value2$inboundSchema` instead. */
    Value2$.inboundSchema = Value2$inboundSchema;
    /** @deprecated use `Value2$outboundSchema` instead. */
    Value2$.outboundSchema = Value2$outboundSchema;
})(Value2$ || (Value2$ = {}));
/** @internal */
export const CreateProjectEnvValue$inboundSchema = z.union([z.string(), z.array(Value2$inboundSchema)]);
/** @internal */
export const CreateProjectEnvValue$outboundSchema = z.union([z.string(), z.array(Value2$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvValue$;
(function (CreateProjectEnvValue$) {
    /** @deprecated use `CreateProjectEnvValue$inboundSchema` instead. */
    CreateProjectEnvValue$.inboundSchema = CreateProjectEnvValue$inboundSchema;
    /** @deprecated use `CreateProjectEnvValue$outboundSchema` instead. */
    CreateProjectEnvValue$.outboundSchema = CreateProjectEnvValue$outboundSchema;
})(CreateProjectEnvValue$ || (CreateProjectEnvValue$ = {}));
export function createProjectEnvValueToJSON(createProjectEnvValue) {
    return JSON.stringify(CreateProjectEnvValue$outboundSchema.parse(createProjectEnvValue));
}
export function createProjectEnvValueFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvValue$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvValue' from JSON`);
}
/** @internal */
export const CreateProjectEnvTargetProjectsResponse2$inboundSchema = z
    .nativeEnum(CreateProjectEnvTargetProjectsResponse2);
/** @internal */
export const CreateProjectEnvTargetProjectsResponse2$outboundSchema = CreateProjectEnvTargetProjectsResponse2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTargetProjectsResponse2$;
(function (CreateProjectEnvTargetProjectsResponse2$) {
    /** @deprecated use `CreateProjectEnvTargetProjectsResponse2$inboundSchema` instead. */
    CreateProjectEnvTargetProjectsResponse2$.inboundSchema = CreateProjectEnvTargetProjectsResponse2$inboundSchema;
    /** @deprecated use `CreateProjectEnvTargetProjectsResponse2$outboundSchema` instead. */
    CreateProjectEnvTargetProjectsResponse2$.outboundSchema = CreateProjectEnvTargetProjectsResponse2$outboundSchema;
})(CreateProjectEnvTargetProjectsResponse2$ || (CreateProjectEnvTargetProjectsResponse2$ = {}));
/** @internal */
export const CreateProjectEnvTargetProjects1$inboundSchema = z.nativeEnum(CreateProjectEnvTargetProjects1);
/** @internal */
export const CreateProjectEnvTargetProjects1$outboundSchema = CreateProjectEnvTargetProjects1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTargetProjects1$;
(function (CreateProjectEnvTargetProjects1$) {
    /** @deprecated use `CreateProjectEnvTargetProjects1$inboundSchema` instead. */
    CreateProjectEnvTargetProjects1$.inboundSchema = CreateProjectEnvTargetProjects1$inboundSchema;
    /** @deprecated use `CreateProjectEnvTargetProjects1$outboundSchema` instead. */
    CreateProjectEnvTargetProjects1$.outboundSchema = CreateProjectEnvTargetProjects1$outboundSchema;
})(CreateProjectEnvTargetProjects1$ || (CreateProjectEnvTargetProjects1$ = {}));
/** @internal */
export const CreateProjectEnvTarget$inboundSchema = z.union([
    z.array(CreateProjectEnvTargetProjects1$inboundSchema),
    CreateProjectEnvTargetProjectsResponse2$inboundSchema,
]);
/** @internal */
export const CreateProjectEnvTarget$outboundSchema = z.union([
    z.array(CreateProjectEnvTargetProjects1$outboundSchema),
    CreateProjectEnvTargetProjectsResponse2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvTarget$;
(function (CreateProjectEnvTarget$) {
    /** @deprecated use `CreateProjectEnvTarget$inboundSchema` instead. */
    CreateProjectEnvTarget$.inboundSchema = CreateProjectEnvTarget$inboundSchema;
    /** @deprecated use `CreateProjectEnvTarget$outboundSchema` instead. */
    CreateProjectEnvTarget$.outboundSchema = CreateProjectEnvTarget$outboundSchema;
})(CreateProjectEnvTarget$ || (CreateProjectEnvTarget$ = {}));
export function createProjectEnvTargetToJSON(createProjectEnvTarget) {
    return JSON.stringify(CreateProjectEnvTarget$outboundSchema.parse(createProjectEnvTarget));
}
export function createProjectEnvTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvTarget' from JSON`);
}
/** @internal */
export const CreateProjectEnvError$inboundSchema = z.object({
    code: z.string(),
    message: z.string(),
    key: z.string().optional(),
    envVarId: z.string().optional(),
    envVarKey: z.string().optional(),
    action: z.string().optional(),
    link: z.string().optional(),
    value: z.union([z.string(), z.array(Value2$inboundSchema)]).optional(),
    gitBranch: z.string().optional(),
    target: z.union([
        z.array(CreateProjectEnvTargetProjects1$inboundSchema),
        CreateProjectEnvTargetProjectsResponse2$inboundSchema,
    ]).optional(),
    project: z.string().optional(),
});
/** @internal */
export const CreateProjectEnvError$outboundSchema = z.object({
    code: z.string(),
    message: z.string(),
    key: z.string().optional(),
    envVarId: z.string().optional(),
    envVarKey: z.string().optional(),
    action: z.string().optional(),
    link: z.string().optional(),
    value: z.union([z.string(), z.array(Value2$outboundSchema)]).optional(),
    gitBranch: z.string().optional(),
    target: z.union([
        z.array(CreateProjectEnvTargetProjects1$outboundSchema),
        CreateProjectEnvTargetProjectsResponse2$outboundSchema,
    ]).optional(),
    project: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvError$;
(function (CreateProjectEnvError$) {
    /** @deprecated use `CreateProjectEnvError$inboundSchema` instead. */
    CreateProjectEnvError$.inboundSchema = CreateProjectEnvError$inboundSchema;
    /** @deprecated use `CreateProjectEnvError$outboundSchema` instead. */
    CreateProjectEnvError$.outboundSchema = CreateProjectEnvError$outboundSchema;
})(CreateProjectEnvError$ || (CreateProjectEnvError$ = {}));
export function createProjectEnvErrorToJSON(createProjectEnvError) {
    return JSON.stringify(CreateProjectEnvError$outboundSchema.parse(createProjectEnvError));
}
export function createProjectEnvErrorFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvError$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvError' from JSON`);
}
/** @internal */
export const Failed$inboundSchema = z
    .object({
    error: z.lazy(() => CreateProjectEnvError$inboundSchema),
});
/** @internal */
export const Failed$outboundSchema = z.object({
    error: z.lazy(() => CreateProjectEnvError$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Failed$;
(function (Failed$) {
    /** @deprecated use `Failed$inboundSchema` instead. */
    Failed$.inboundSchema = Failed$inboundSchema;
    /** @deprecated use `Failed$outboundSchema` instead. */
    Failed$.outboundSchema = Failed$outboundSchema;
})(Failed$ || (Failed$ = {}));
export function failedToJSON(failed) {
    return JSON.stringify(Failed$outboundSchema.parse(failed));
}
export function failedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Failed$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Failed' from JSON`);
}
/** @internal */
export const CreateProjectEnvResponseBody$inboundSchema = z.object({
    created: z.union([
        z.lazy(() => Created1$inboundSchema),
        z.array(z.lazy(() => Created2$inboundSchema)),
    ]),
    failed: z.array(z.lazy(() => Failed$inboundSchema)),
});
/** @internal */
export const CreateProjectEnvResponseBody$outboundSchema = z.object({
    created: z.union([
        z.lazy(() => Created1$outboundSchema),
        z.array(z.lazy(() => Created2$outboundSchema)),
    ]),
    failed: z.array(z.lazy(() => Failed$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProjectEnvResponseBody$;
(function (CreateProjectEnvResponseBody$) {
    /** @deprecated use `CreateProjectEnvResponseBody$inboundSchema` instead. */
    CreateProjectEnvResponseBody$.inboundSchema = CreateProjectEnvResponseBody$inboundSchema;
    /** @deprecated use `CreateProjectEnvResponseBody$outboundSchema` instead. */
    CreateProjectEnvResponseBody$.outboundSchema = CreateProjectEnvResponseBody$outboundSchema;
})(CreateProjectEnvResponseBody$ || (CreateProjectEnvResponseBody$ = {}));
export function createProjectEnvResponseBodyToJSON(createProjectEnvResponseBody) {
    return JSON.stringify(CreateProjectEnvResponseBody$outboundSchema.parse(createProjectEnvResponseBody));
}
export function createProjectEnvResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProjectEnvResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProjectEnvResponseBody' from JSON`);
}
//# sourceMappingURL=createprojectenvop.js.map