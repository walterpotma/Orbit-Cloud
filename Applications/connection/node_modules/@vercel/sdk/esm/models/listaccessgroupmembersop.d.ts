import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type ListAccessGroupMembersRequest = {
    /**
     * The ID or name of the Access Group.
     */
    idOrName: string;
    /**
     * Limit how many access group members should be returned.
     */
    limit?: number | undefined;
    /**
     * Continuation cursor to retrieve the next page of results.
     */
    next?: string | undefined;
    /**
     * Search project members by their name, username, and email.
     */
    search?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const TeamRole: {
    readonly Owner: "OWNER";
    readonly Member: "MEMBER";
    readonly Developer: "DEVELOPER";
    readonly Security: "SECURITY";
    readonly Billing: "BILLING";
    readonly Viewer: "VIEWER";
    readonly ViewerForPlus: "VIEWER_FOR_PLUS";
    readonly Contributor: "CONTRIBUTOR";
};
export type TeamRole = ClosedEnum<typeof TeamRole>;
export type Members = {
    avatar?: string | undefined;
    email: string;
    uid: string;
    username: string;
    name?: string | undefined;
    createdAt?: string | undefined;
    teamRole: TeamRole;
};
export type ListAccessGroupMembersPagination = {
    count: number;
    next: string | null;
};
export type ListAccessGroupMembersResponseBody = {
    members: Array<Members>;
    pagination: ListAccessGroupMembersPagination;
};
/** @internal */
export declare const ListAccessGroupMembersRequest$inboundSchema: z.ZodType<ListAccessGroupMembersRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupMembersRequest$Outbound = {
    idOrName: string;
    limit?: number | undefined;
    next?: string | undefined;
    search?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const ListAccessGroupMembersRequest$outboundSchema: z.ZodType<ListAccessGroupMembersRequest$Outbound, z.ZodTypeDef, ListAccessGroupMembersRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupMembersRequest$ {
    /** @deprecated use `ListAccessGroupMembersRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupMembersRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupMembersRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupMembersRequest$Outbound, z.ZodTypeDef, ListAccessGroupMembersRequest>;
    /** @deprecated use `ListAccessGroupMembersRequest$Outbound` instead. */
    type Outbound = ListAccessGroupMembersRequest$Outbound;
}
export declare function listAccessGroupMembersRequestToJSON(listAccessGroupMembersRequest: ListAccessGroupMembersRequest): string;
export declare function listAccessGroupMembersRequestFromJSON(jsonString: string): SafeParseResult<ListAccessGroupMembersRequest, SDKValidationError>;
/** @internal */
export declare const TeamRole$inboundSchema: z.ZodNativeEnum<typeof TeamRole>;
/** @internal */
export declare const TeamRole$outboundSchema: z.ZodNativeEnum<typeof TeamRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TeamRole$ {
    /** @deprecated use `TeamRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Owner: "OWNER";
        readonly Member: "MEMBER";
        readonly Developer: "DEVELOPER";
        readonly Security: "SECURITY";
        readonly Billing: "BILLING";
        readonly Viewer: "VIEWER";
        readonly ViewerForPlus: "VIEWER_FOR_PLUS";
        readonly Contributor: "CONTRIBUTOR";
    }>;
    /** @deprecated use `TeamRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Owner: "OWNER";
        readonly Member: "MEMBER";
        readonly Developer: "DEVELOPER";
        readonly Security: "SECURITY";
        readonly Billing: "BILLING";
        readonly Viewer: "VIEWER";
        readonly ViewerForPlus: "VIEWER_FOR_PLUS";
        readonly Contributor: "CONTRIBUTOR";
    }>;
}
/** @internal */
export declare const Members$inboundSchema: z.ZodType<Members, z.ZodTypeDef, unknown>;
/** @internal */
export type Members$Outbound = {
    avatar?: string | undefined;
    email: string;
    uid: string;
    username: string;
    name?: string | undefined;
    createdAt?: string | undefined;
    teamRole: string;
};
/** @internal */
export declare const Members$outboundSchema: z.ZodType<Members$Outbound, z.ZodTypeDef, Members>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Members$ {
    /** @deprecated use `Members$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Members, z.ZodTypeDef, unknown>;
    /** @deprecated use `Members$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Members$Outbound, z.ZodTypeDef, Members>;
    /** @deprecated use `Members$Outbound` instead. */
    type Outbound = Members$Outbound;
}
export declare function membersToJSON(members: Members): string;
export declare function membersFromJSON(jsonString: string): SafeParseResult<Members, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupMembersPagination$inboundSchema: z.ZodType<ListAccessGroupMembersPagination, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupMembersPagination$Outbound = {
    count: number;
    next: string | null;
};
/** @internal */
export declare const ListAccessGroupMembersPagination$outboundSchema: z.ZodType<ListAccessGroupMembersPagination$Outbound, z.ZodTypeDef, ListAccessGroupMembersPagination>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupMembersPagination$ {
    /** @deprecated use `ListAccessGroupMembersPagination$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupMembersPagination, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupMembersPagination$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupMembersPagination$Outbound, z.ZodTypeDef, ListAccessGroupMembersPagination>;
    /** @deprecated use `ListAccessGroupMembersPagination$Outbound` instead. */
    type Outbound = ListAccessGroupMembersPagination$Outbound;
}
export declare function listAccessGroupMembersPaginationToJSON(listAccessGroupMembersPagination: ListAccessGroupMembersPagination): string;
export declare function listAccessGroupMembersPaginationFromJSON(jsonString: string): SafeParseResult<ListAccessGroupMembersPagination, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupMembersResponseBody$inboundSchema: z.ZodType<ListAccessGroupMembersResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupMembersResponseBody$Outbound = {
    members: Array<Members$Outbound>;
    pagination: ListAccessGroupMembersPagination$Outbound;
};
/** @internal */
export declare const ListAccessGroupMembersResponseBody$outboundSchema: z.ZodType<ListAccessGroupMembersResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupMembersResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupMembersResponseBody$ {
    /** @deprecated use `ListAccessGroupMembersResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupMembersResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupMembersResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupMembersResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupMembersResponseBody>;
    /** @deprecated use `ListAccessGroupMembersResponseBody$Outbound` instead. */
    type Outbound = ListAccessGroupMembersResponseBody$Outbound;
}
export declare function listAccessGroupMembersResponseBodyToJSON(listAccessGroupMembersResponseBody: ListAccessGroupMembersResponseBody): string;
export declare function listAccessGroupMembersResponseBodyFromJSON(jsonString: string): SafeParseResult<ListAccessGroupMembersResponseBody, SDKValidationError>;
//# sourceMappingURL=listaccessgroupmembersop.d.ts.map