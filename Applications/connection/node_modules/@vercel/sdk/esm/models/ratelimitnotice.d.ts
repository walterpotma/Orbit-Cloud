import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type RateLimitNotice = {
    remaining: number;
    reset: number;
    resetMs: number;
    total: number;
};
/** @internal */
export declare const RateLimitNotice$inboundSchema: z.ZodType<RateLimitNotice, z.ZodTypeDef, unknown>;
/** @internal */
export type RateLimitNotice$Outbound = {
    remaining: number;
    reset: number;
    resetMs: number;
    total: number;
};
/** @internal */
export declare const RateLimitNotice$outboundSchema: z.ZodType<RateLimitNotice$Outbound, z.ZodTypeDef, RateLimitNotice>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RateLimitNotice$ {
    /** @deprecated use `RateLimitNotice$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RateLimitNotice, z.ZodTypeDef, unknown>;
    /** @deprecated use `RateLimitNotice$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RateLimitNotice$Outbound, z.ZodTypeDef, RateLimitNotice>;
    /** @deprecated use `RateLimitNotice$Outbound` instead. */
    type Outbound = RateLimitNotice$Outbound;
}
export declare function rateLimitNoticeToJSON(rateLimitNotice: RateLimitNotice): string;
export declare function rateLimitNoticeFromJSON(jsonString: string): SafeParseResult<RateLimitNotice, SDKValidationError>;
//# sourceMappingURL=ratelimitnotice.d.ts.map