/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DownloadArtifactRequest$inboundSchema = z.object({
    "x-artifact-client-ci": z.string().optional(),
    "x-artifact-client-interactive": z.number().int().optional(),
    hash: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "x-artifact-client-ci": "xArtifactClientCi",
        "x-artifact-client-interactive": "xArtifactClientInteractive",
    });
});
/** @internal */
export const DownloadArtifactRequest$outboundSchema = z.object({
    xArtifactClientCi: z.string().optional(),
    xArtifactClientInteractive: z.number().int().optional(),
    hash: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        xArtifactClientCi: "x-artifact-client-ci",
        xArtifactClientInteractive: "x-artifact-client-interactive",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DownloadArtifactRequest$;
(function (DownloadArtifactRequest$) {
    /** @deprecated use `DownloadArtifactRequest$inboundSchema` instead. */
    DownloadArtifactRequest$.inboundSchema = DownloadArtifactRequest$inboundSchema;
    /** @deprecated use `DownloadArtifactRequest$outboundSchema` instead. */
    DownloadArtifactRequest$.outboundSchema = DownloadArtifactRequest$outboundSchema;
})(DownloadArtifactRequest$ || (DownloadArtifactRequest$ = {}));
export function downloadArtifactRequestToJSON(downloadArtifactRequest) {
    return JSON.stringify(DownloadArtifactRequest$outboundSchema.parse(downloadArtifactRequest));
}
export function downloadArtifactRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DownloadArtifactRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DownloadArtifactRequest' from JSON`);
}
//# sourceMappingURL=downloadartifactop.js.map