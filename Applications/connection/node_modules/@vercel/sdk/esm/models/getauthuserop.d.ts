import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { AuthUser, AuthUser$Outbound } from "./authuser.js";
import { AuthUserLimited, AuthUserLimited$Outbound } from "./authuserlimited.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetAuthUserUser = AuthUser | AuthUserLimited;
/**
 * Successful response.
 */
export type GetAuthUserResponseBody = {
    user: AuthUser | AuthUserLimited;
};
/** @internal */
export declare const GetAuthUserUser$inboundSchema: z.ZodType<GetAuthUserUser, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAuthUserUser$Outbound = AuthUser$Outbound | AuthUserLimited$Outbound;
/** @internal */
export declare const GetAuthUserUser$outboundSchema: z.ZodType<GetAuthUserUser$Outbound, z.ZodTypeDef, GetAuthUserUser>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAuthUserUser$ {
    /** @deprecated use `GetAuthUserUser$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAuthUserUser, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAuthUserUser$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAuthUserUser$Outbound, z.ZodTypeDef, GetAuthUserUser>;
    /** @deprecated use `GetAuthUserUser$Outbound` instead. */
    type Outbound = GetAuthUserUser$Outbound;
}
export declare function getAuthUserUserToJSON(getAuthUserUser: GetAuthUserUser): string;
export declare function getAuthUserUserFromJSON(jsonString: string): SafeParseResult<GetAuthUserUser, SDKValidationError>;
/** @internal */
export declare const GetAuthUserResponseBody$inboundSchema: z.ZodType<GetAuthUserResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAuthUserResponseBody$Outbound = {
    user: AuthUser$Outbound | AuthUserLimited$Outbound;
};
/** @internal */
export declare const GetAuthUserResponseBody$outboundSchema: z.ZodType<GetAuthUserResponseBody$Outbound, z.ZodTypeDef, GetAuthUserResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAuthUserResponseBody$ {
    /** @deprecated use `GetAuthUserResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAuthUserResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAuthUserResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAuthUserResponseBody$Outbound, z.ZodTypeDef, GetAuthUserResponseBody>;
    /** @deprecated use `GetAuthUserResponseBody$Outbound` instead. */
    type Outbound = GetAuthUserResponseBody$Outbound;
}
export declare function getAuthUserResponseBodyToJSON(getAuthUserResponseBody: GetAuthUserResponseBody): string;
export declare function getAuthUserResponseBodyFromJSON(jsonString: string): SafeParseResult<GetAuthUserResponseBody, SDKValidationError>;
//# sourceMappingURL=getauthuserop.d.ts.map