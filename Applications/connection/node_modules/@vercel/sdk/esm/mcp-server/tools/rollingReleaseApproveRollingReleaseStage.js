/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { rollingReleaseApproveRollingReleaseStage } from "../../funcs/rollingReleaseApproveRollingReleaseStage.js";
import { ApproveRollingReleaseStageRequest$inboundSchema } from "../../models/approverollingreleasestageop.js";
import { formatResult } from "../tools.js";
const args = {
    request: ApproveRollingReleaseStageRequest$inboundSchema,
};
export const tool$rollingReleaseApproveRollingReleaseStage = {
    name: "rolling-release-approve-rolling-release-stage",
    description: `Update the active rolling release to the next stage for a project

Advance a rollout to the next stage. This is only needed when rolling releases is configured to require manual approval.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await rollingReleaseApproveRollingReleaseStage(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=rollingReleaseApproveRollingReleaseStage.js.map