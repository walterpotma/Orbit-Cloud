apiVersion: apps/v1
kind: Deployment
metadata:
  name: orbitsender-api
  namespace: orbitcloud
  labels:
    app: orbitsender-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orbitsender-api
  template:
    metadata:
      labels:
        app: orbitsender-api
    spec:
      containers:
      - name: orbitsender-api-container
        image: localhost:5000/orbitsender-api:v1.10
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: orbitsender-api
  namespace: orbitcloud
spec:
  selector:
    app: orbitsender-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orbitsender-api
  namespace: orbitcloud
  annotations:
    # 1. ANOTAÇÃO OBRIGATÓRIA: Diz ao ExternalDNS o hostname a ser criado.
    # ***SUBSTITUA PELO SEU DOMÍNIO REAL***
    external-dns.alpha.kubernetes.io/exclude: "true"
    
    # 2. Anotação para o Ingress Controller (K3s usa Traefik por padrão)
    # Isso garante que o Traefik saiba o que fazer com a regra.
    # O K3s muitas vezes infere isso, mas é bom ser explícito.
    # Se você tem um Ingress Controller específico (como Traefik), use a annotation dele aqui.
    # Caso contrário, essa pode ser opcional ou específica do seu setup.
spec:
  rules:
  - host: api.orbitsender.crion.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            # Aponta para o Service interno que já está rodando
            name: orbitsender-api
            port:
              number: 8080