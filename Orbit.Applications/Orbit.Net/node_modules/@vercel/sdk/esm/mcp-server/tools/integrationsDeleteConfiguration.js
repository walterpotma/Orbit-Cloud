/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { integrationsDeleteConfiguration } from "../../funcs/integrationsDeleteConfiguration.js";
import { DeleteConfigurationRequest$inboundSchema } from "../../models/deleteconfigurationop.js";
import { formatResult } from "../tools.js";
const args = {
    request: DeleteConfigurationRequest$inboundSchema,
};
export const tool$integrationsDeleteConfiguration = {
    name: "integrations-delete-configuration",
    description: `Delete an integration configuration

Allows to remove the configuration with the \`id\` provided in the parameters. The configuration and all of its resources will be removed. This includes Webhooks, LogDrains and Project Env variables.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await integrationsDeleteConfiguration(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        return formatResult(void 0, apiCall);
    },
};
//# sourceMappingURL=integrationsDeleteConfiguration.js.map