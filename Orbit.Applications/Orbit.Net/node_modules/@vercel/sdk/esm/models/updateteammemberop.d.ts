import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The project role of the member that will be added. \"null\" will remove this project level role.
 */
export declare const UpdateTeamMemberRole: {
    readonly Admin: "ADMIN";
    readonly ProjectViewer: "PROJECT_VIEWER";
    readonly ProjectDeveloper: "PROJECT_DEVELOPER";
};
/**
 * The project role of the member that will be added. \"null\" will remove this project level role.
 */
export type UpdateTeamMemberRole = ClosedEnum<typeof UpdateTeamMemberRole>;
export type UpdateTeamMemberProjects = {
    /**
     * The ID of the project.
     */
    projectId: string;
    /**
     * The project role of the member that will be added. \"null\" will remove this project level role.
     */
    role: UpdateTeamMemberRole | null;
};
export type UpdateTeamMemberJoinedFrom = {
    ssoUserId?: any | null | undefined;
};
export type UpdateTeamMemberRequestBody = {
    /**
     * Accept a user who requested access to the team.
     */
    confirmed?: boolean | undefined;
    /**
     * The role in the team of the member.
     */
    role?: string | undefined;
    projects?: Array<UpdateTeamMemberProjects> | undefined;
    joinedFrom?: UpdateTeamMemberJoinedFrom | undefined;
};
export type UpdateTeamMemberRequest = {
    /**
     * The ID of the member.
     */
    uid: string;
    teamId: string;
    requestBody: UpdateTeamMemberRequestBody;
};
/**
 * Successfully updated the membership.
 */
export type UpdateTeamMemberResponseBody = {
    /**
     * ID of the team.
     */
    id: string;
};
/** @internal */
export declare const UpdateTeamMemberRole$inboundSchema: z.ZodNativeEnum<typeof UpdateTeamMemberRole>;
/** @internal */
export declare const UpdateTeamMemberRole$outboundSchema: z.ZodNativeEnum<typeof UpdateTeamMemberRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberRole$ {
    /** @deprecated use `UpdateTeamMemberRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
    /** @deprecated use `UpdateTeamMemberRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
}
/** @internal */
export declare const UpdateTeamMemberProjects$inboundSchema: z.ZodType<UpdateTeamMemberProjects, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateTeamMemberProjects$Outbound = {
    projectId: string;
    role: string | null;
};
/** @internal */
export declare const UpdateTeamMemberProjects$outboundSchema: z.ZodType<UpdateTeamMemberProjects$Outbound, z.ZodTypeDef, UpdateTeamMemberProjects>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberProjects$ {
    /** @deprecated use `UpdateTeamMemberProjects$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateTeamMemberProjects, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateTeamMemberProjects$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateTeamMemberProjects$Outbound, z.ZodTypeDef, UpdateTeamMemberProjects>;
    /** @deprecated use `UpdateTeamMemberProjects$Outbound` instead. */
    type Outbound = UpdateTeamMemberProjects$Outbound;
}
export declare function updateTeamMemberProjectsToJSON(updateTeamMemberProjects: UpdateTeamMemberProjects): string;
export declare function updateTeamMemberProjectsFromJSON(jsonString: string): SafeParseResult<UpdateTeamMemberProjects, SDKValidationError>;
/** @internal */
export declare const UpdateTeamMemberJoinedFrom$inboundSchema: z.ZodType<UpdateTeamMemberJoinedFrom, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateTeamMemberJoinedFrom$Outbound = {
    ssoUserId?: any | null | undefined;
};
/** @internal */
export declare const UpdateTeamMemberJoinedFrom$outboundSchema: z.ZodType<UpdateTeamMemberJoinedFrom$Outbound, z.ZodTypeDef, UpdateTeamMemberJoinedFrom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberJoinedFrom$ {
    /** @deprecated use `UpdateTeamMemberJoinedFrom$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateTeamMemberJoinedFrom, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateTeamMemberJoinedFrom$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateTeamMemberJoinedFrom$Outbound, z.ZodTypeDef, UpdateTeamMemberJoinedFrom>;
    /** @deprecated use `UpdateTeamMemberJoinedFrom$Outbound` instead. */
    type Outbound = UpdateTeamMemberJoinedFrom$Outbound;
}
export declare function updateTeamMemberJoinedFromToJSON(updateTeamMemberJoinedFrom: UpdateTeamMemberJoinedFrom): string;
export declare function updateTeamMemberJoinedFromFromJSON(jsonString: string): SafeParseResult<UpdateTeamMemberJoinedFrom, SDKValidationError>;
/** @internal */
export declare const UpdateTeamMemberRequestBody$inboundSchema: z.ZodType<UpdateTeamMemberRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateTeamMemberRequestBody$Outbound = {
    confirmed?: boolean | undefined;
    role: string;
    projects?: Array<UpdateTeamMemberProjects$Outbound> | undefined;
    joinedFrom?: UpdateTeamMemberJoinedFrom$Outbound | undefined;
};
/** @internal */
export declare const UpdateTeamMemberRequestBody$outboundSchema: z.ZodType<UpdateTeamMemberRequestBody$Outbound, z.ZodTypeDef, UpdateTeamMemberRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberRequestBody$ {
    /** @deprecated use `UpdateTeamMemberRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateTeamMemberRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateTeamMemberRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateTeamMemberRequestBody$Outbound, z.ZodTypeDef, UpdateTeamMemberRequestBody>;
    /** @deprecated use `UpdateTeamMemberRequestBody$Outbound` instead. */
    type Outbound = UpdateTeamMemberRequestBody$Outbound;
}
export declare function updateTeamMemberRequestBodyToJSON(updateTeamMemberRequestBody: UpdateTeamMemberRequestBody): string;
export declare function updateTeamMemberRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdateTeamMemberRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdateTeamMemberRequest$inboundSchema: z.ZodType<UpdateTeamMemberRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateTeamMemberRequest$Outbound = {
    uid: string;
    teamId: string;
    RequestBody: UpdateTeamMemberRequestBody$Outbound;
};
/** @internal */
export declare const UpdateTeamMemberRequest$outboundSchema: z.ZodType<UpdateTeamMemberRequest$Outbound, z.ZodTypeDef, UpdateTeamMemberRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberRequest$ {
    /** @deprecated use `UpdateTeamMemberRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateTeamMemberRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateTeamMemberRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateTeamMemberRequest$Outbound, z.ZodTypeDef, UpdateTeamMemberRequest>;
    /** @deprecated use `UpdateTeamMemberRequest$Outbound` instead. */
    type Outbound = UpdateTeamMemberRequest$Outbound;
}
export declare function updateTeamMemberRequestToJSON(updateTeamMemberRequest: UpdateTeamMemberRequest): string;
export declare function updateTeamMemberRequestFromJSON(jsonString: string): SafeParseResult<UpdateTeamMemberRequest, SDKValidationError>;
/** @internal */
export declare const UpdateTeamMemberResponseBody$inboundSchema: z.ZodType<UpdateTeamMemberResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateTeamMemberResponseBody$Outbound = {
    id: string;
};
/** @internal */
export declare const UpdateTeamMemberResponseBody$outboundSchema: z.ZodType<UpdateTeamMemberResponseBody$Outbound, z.ZodTypeDef, UpdateTeamMemberResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateTeamMemberResponseBody$ {
    /** @deprecated use `UpdateTeamMemberResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateTeamMemberResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateTeamMemberResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateTeamMemberResponseBody$Outbound, z.ZodTypeDef, UpdateTeamMemberResponseBody>;
    /** @deprecated use `UpdateTeamMemberResponseBody$Outbound` instead. */
    type Outbound = UpdateTeamMemberResponseBody$Outbound;
}
export declare function updateTeamMemberResponseBodyToJSON(updateTeamMemberResponseBody: UpdateTeamMemberResponseBody): string;
export declare function updateTeamMemberResponseBodyFromJSON(jsonString: string): SafeParseResult<UpdateTeamMemberResponseBody, SDKValidationError>;
//# sourceMappingURL=updateteammemberop.d.ts.map