/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const PauseProjectRequest$inboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const PauseProjectRequest$outboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PauseProjectRequest$;
(function (PauseProjectRequest$) {
    /** @deprecated use `PauseProjectRequest$inboundSchema` instead. */
    PauseProjectRequest$.inboundSchema = PauseProjectRequest$inboundSchema;
    /** @deprecated use `PauseProjectRequest$outboundSchema` instead. */
    PauseProjectRequest$.outboundSchema = PauseProjectRequest$outboundSchema;
})(PauseProjectRequest$ || (PauseProjectRequest$ = {}));
export function pauseProjectRequestToJSON(pauseProjectRequest) {
    return JSON.stringify(PauseProjectRequest$outboundSchema.parse(pauseProjectRequest));
}
export function pauseProjectRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PauseProjectRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PauseProjectRequest' from JSON`);
}
//# sourceMappingURL=pauseprojectop.js.map