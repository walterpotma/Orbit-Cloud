import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetRollingReleaseBillingStatusRequest = {
    /**
     * Project ID or project name (URL-encoded)
     */
    idOrName: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason: {
    readonly AvailableSlots: "available_slots";
};
export type GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason = ClosedEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason>;
export type ResponseBody4 = {
    availableSlots: number;
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason;
    message: string;
};
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason: {
    readonly NoAvailableSlots: "no_available_slots";
};
export type GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason = ClosedEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason>;
export type GetRollingReleaseBillingStatusResponseBody3 = {
    availableSlots: number;
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason;
    message: string;
    enabledProjects: Array<string>;
};
export declare const AvailableSlots: {
    readonly Unlimited: "unlimited";
};
export type AvailableSlots = ClosedEnum<typeof AvailableSlots>;
export declare const GetRollingReleaseBillingStatusResponseBodyReason: {
    readonly UnlimitedSlots: "unlimited_slots";
};
export type GetRollingReleaseBillingStatusResponseBodyReason = ClosedEnum<typeof GetRollingReleaseBillingStatusResponseBodyReason>;
export type GetRollingReleaseBillingStatusResponseBody2 = {
    availableSlots: AvailableSlots;
    reason: GetRollingReleaseBillingStatusResponseBodyReason;
    message: string;
};
export declare const ResponseBodyReason: {
    readonly PlanNotSupported: "plan_not_supported";
};
export type ResponseBodyReason = ClosedEnum<typeof ResponseBodyReason>;
export type GetRollingReleaseBillingStatusResponseBody1 = {
    availableSlots: number;
    reason: ResponseBodyReason;
    message: string;
};
export type GetRollingReleaseBillingStatusResponseBody = GetRollingReleaseBillingStatusResponseBody3 | GetRollingReleaseBillingStatusResponseBody1 | GetRollingReleaseBillingStatusResponseBody2 | ResponseBody4;
/** @internal */
export declare const GetRollingReleaseBillingStatusRequest$inboundSchema: z.ZodType<GetRollingReleaseBillingStatusRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRollingReleaseBillingStatusRequest$Outbound = {
    idOrName: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetRollingReleaseBillingStatusRequest$outboundSchema: z.ZodType<GetRollingReleaseBillingStatusRequest$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusRequest$ {
    /** @deprecated use `GetRollingReleaseBillingStatusRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRollingReleaseBillingStatusRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRollingReleaseBillingStatusRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRollingReleaseBillingStatusRequest$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusRequest>;
    /** @deprecated use `GetRollingReleaseBillingStatusRequest$Outbound` instead. */
    type Outbound = GetRollingReleaseBillingStatusRequest$Outbound;
}
export declare function getRollingReleaseBillingStatusRequestToJSON(getRollingReleaseBillingStatusRequest: GetRollingReleaseBillingStatusRequest): string;
export declare function getRollingReleaseBillingStatusRequestFromJSON(jsonString: string): SafeParseResult<GetRollingReleaseBillingStatusRequest, SDKValidationError>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly AvailableSlots: "available_slots";
    }>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly AvailableSlots: "available_slots";
    }>;
}
/** @internal */
export declare const ResponseBody4$inboundSchema: z.ZodType<ResponseBody4, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBody4$Outbound = {
    availableSlots: number;
    reason: string;
    message: string;
};
/** @internal */
export declare const ResponseBody4$outboundSchema: z.ZodType<ResponseBody4$Outbound, z.ZodTypeDef, ResponseBody4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBody4$ {
    /** @deprecated use `ResponseBody4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBody4, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBody4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBody4$Outbound, z.ZodTypeDef, ResponseBody4>;
    /** @deprecated use `ResponseBody4$Outbound` instead. */
    type Outbound = ResponseBody4$Outbound;
}
export declare function responseBody4ToJSON(responseBody4: ResponseBody4): string;
export declare function responseBody4FromJSON(jsonString: string): SafeParseResult<ResponseBody4, SDKValidationError>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly NoAvailableSlots: "no_available_slots";
    }>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly NoAvailableSlots: "no_available_slots";
    }>;
}
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody3$inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody3, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRollingReleaseBillingStatusResponseBody3$Outbound = {
    availableSlots: number;
    reason: string;
    message: string;
    enabledProjects: Array<string>;
};
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody3$outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody3$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBody3$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody3, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody3$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody3>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody3$Outbound` instead. */
    type Outbound = GetRollingReleaseBillingStatusResponseBody3$Outbound;
}
export declare function getRollingReleaseBillingStatusResponseBody3ToJSON(getRollingReleaseBillingStatusResponseBody3: GetRollingReleaseBillingStatusResponseBody3): string;
export declare function getRollingReleaseBillingStatusResponseBody3FromJSON(jsonString: string): SafeParseResult<GetRollingReleaseBillingStatusResponseBody3, SDKValidationError>;
/** @internal */
export declare const AvailableSlots$inboundSchema: z.ZodNativeEnum<typeof AvailableSlots>;
/** @internal */
export declare const AvailableSlots$outboundSchema: z.ZodNativeEnum<typeof AvailableSlots>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AvailableSlots$ {
    /** @deprecated use `AvailableSlots$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Unlimited: "unlimited";
    }>;
    /** @deprecated use `AvailableSlots$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Unlimited: "unlimited";
    }>;
}
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyReason>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema: z.ZodNativeEnum<typeof GetRollingReleaseBillingStatusResponseBodyReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBodyReason$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly UnlimitedSlots: "unlimited_slots";
    }>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly UnlimitedSlots: "unlimited_slots";
    }>;
}
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody2$inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRollingReleaseBillingStatusResponseBody2$Outbound = {
    availableSlots: string;
    reason: string;
    message: string;
};
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody2$outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody2$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBody2$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody2$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody2>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody2$Outbound` instead. */
    type Outbound = GetRollingReleaseBillingStatusResponseBody2$Outbound;
}
export declare function getRollingReleaseBillingStatusResponseBody2ToJSON(getRollingReleaseBillingStatusResponseBody2: GetRollingReleaseBillingStatusResponseBody2): string;
export declare function getRollingReleaseBillingStatusResponseBody2FromJSON(jsonString: string): SafeParseResult<GetRollingReleaseBillingStatusResponseBody2, SDKValidationError>;
/** @internal */
export declare const ResponseBodyReason$inboundSchema: z.ZodNativeEnum<typeof ResponseBodyReason>;
/** @internal */
export declare const ResponseBodyReason$outboundSchema: z.ZodNativeEnum<typeof ResponseBodyReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyReason$ {
    /** @deprecated use `ResponseBodyReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PlanNotSupported: "plan_not_supported";
    }>;
    /** @deprecated use `ResponseBodyReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PlanNotSupported: "plan_not_supported";
    }>;
}
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody1$inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRollingReleaseBillingStatusResponseBody1$Outbound = {
    availableSlots: number;
    reason: string;
    message: string;
};
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody1$outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody1$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBody1$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody1$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody1>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody1$Outbound` instead. */
    type Outbound = GetRollingReleaseBillingStatusResponseBody1$Outbound;
}
export declare function getRollingReleaseBillingStatusResponseBody1ToJSON(getRollingReleaseBillingStatusResponseBody1: GetRollingReleaseBillingStatusResponseBody1): string;
export declare function getRollingReleaseBillingStatusResponseBody1FromJSON(jsonString: string): SafeParseResult<GetRollingReleaseBillingStatusResponseBody1, SDKValidationError>;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody$inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRollingReleaseBillingStatusResponseBody$Outbound = GetRollingReleaseBillingStatusResponseBody3$Outbound | GetRollingReleaseBillingStatusResponseBody1$Outbound | GetRollingReleaseBillingStatusResponseBody2$Outbound | ResponseBody4$Outbound;
/** @internal */
export declare const GetRollingReleaseBillingStatusResponseBody$outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRollingReleaseBillingStatusResponseBody$ {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRollingReleaseBillingStatusResponseBody$Outbound, z.ZodTypeDef, GetRollingReleaseBillingStatusResponseBody>;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody$Outbound` instead. */
    type Outbound = GetRollingReleaseBillingStatusResponseBody$Outbound;
}
export declare function getRollingReleaseBillingStatusResponseBodyToJSON(getRollingReleaseBillingStatusResponseBody: GetRollingReleaseBillingStatusResponseBody): string;
export declare function getRollingReleaseBillingStatusResponseBodyFromJSON(jsonString: string): SafeParseResult<GetRollingReleaseBillingStatusResponseBody, SDKValidationError>;
//# sourceMappingURL=getrollingreleasebillingstatusop.d.ts.map