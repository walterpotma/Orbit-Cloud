/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const CreateEdgeConfigTokenRequestBody$inboundSchema = z.object({
    label: z.string(),
});
/** @internal */
export const CreateEdgeConfigTokenRequestBody$outboundSchema = z.object({
    label: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateEdgeConfigTokenRequestBody$;
(function (CreateEdgeConfigTokenRequestBody$) {
    /** @deprecated use `CreateEdgeConfigTokenRequestBody$inboundSchema` instead. */
    CreateEdgeConfigTokenRequestBody$.inboundSchema = CreateEdgeConfigTokenRequestBody$inboundSchema;
    /** @deprecated use `CreateEdgeConfigTokenRequestBody$outboundSchema` instead. */
    CreateEdgeConfigTokenRequestBody$.outboundSchema = CreateEdgeConfigTokenRequestBody$outboundSchema;
})(CreateEdgeConfigTokenRequestBody$ || (CreateEdgeConfigTokenRequestBody$ = {}));
export function createEdgeConfigTokenRequestBodyToJSON(createEdgeConfigTokenRequestBody) {
    return JSON.stringify(CreateEdgeConfigTokenRequestBody$outboundSchema.parse(createEdgeConfigTokenRequestBody));
}
export function createEdgeConfigTokenRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateEdgeConfigTokenRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateEdgeConfigTokenRequestBody' from JSON`);
}
/** @internal */
export const CreateEdgeConfigTokenRequest$inboundSchema = z.object({
    edgeConfigId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.lazy(() => CreateEdgeConfigTokenRequestBody$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const CreateEdgeConfigTokenRequest$outboundSchema = z.object({
    edgeConfigId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.lazy(() => CreateEdgeConfigTokenRequestBody$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateEdgeConfigTokenRequest$;
(function (CreateEdgeConfigTokenRequest$) {
    /** @deprecated use `CreateEdgeConfigTokenRequest$inboundSchema` instead. */
    CreateEdgeConfigTokenRequest$.inboundSchema = CreateEdgeConfigTokenRequest$inboundSchema;
    /** @deprecated use `CreateEdgeConfigTokenRequest$outboundSchema` instead. */
    CreateEdgeConfigTokenRequest$.outboundSchema = CreateEdgeConfigTokenRequest$outboundSchema;
})(CreateEdgeConfigTokenRequest$ || (CreateEdgeConfigTokenRequest$ = {}));
export function createEdgeConfigTokenRequestToJSON(createEdgeConfigTokenRequest) {
    return JSON.stringify(CreateEdgeConfigTokenRequest$outboundSchema.parse(createEdgeConfigTokenRequest));
}
export function createEdgeConfigTokenRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateEdgeConfigTokenRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateEdgeConfigTokenRequest' from JSON`);
}
/** @internal */
export const CreateEdgeConfigTokenResponseBody$inboundSchema = z.object({
    token: z.string(),
    id: z.string(),
});
/** @internal */
export const CreateEdgeConfigTokenResponseBody$outboundSchema = z.object({
    token: z.string(),
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateEdgeConfigTokenResponseBody$;
(function (CreateEdgeConfigTokenResponseBody$) {
    /** @deprecated use `CreateEdgeConfigTokenResponseBody$inboundSchema` instead. */
    CreateEdgeConfigTokenResponseBody$.inboundSchema = CreateEdgeConfigTokenResponseBody$inboundSchema;
    /** @deprecated use `CreateEdgeConfigTokenResponseBody$outboundSchema` instead. */
    CreateEdgeConfigTokenResponseBody$.outboundSchema = CreateEdgeConfigTokenResponseBody$outboundSchema;
})(CreateEdgeConfigTokenResponseBody$ || (CreateEdgeConfigTokenResponseBody$ = {}));
export function createEdgeConfigTokenResponseBodyToJSON(createEdgeConfigTokenResponseBody) {
    return JSON.stringify(CreateEdgeConfigTokenResponseBody$outboundSchema.parse(createEdgeConfigTokenResponseBody));
}
export function createEdgeConfigTokenResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateEdgeConfigTokenResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateEdgeConfigTokenResponseBody' from JSON`);
}
//# sourceMappingURL=createedgeconfigtokenop.js.map