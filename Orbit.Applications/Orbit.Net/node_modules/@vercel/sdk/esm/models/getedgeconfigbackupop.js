/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { EdgeConfigItemValue$inboundSchema, EdgeConfigItemValue$outboundSchema, } from "./edgeconfigitemvalue.js";
/** @internal */
export const GetEdgeConfigBackupRequest$inboundSchema = z.object({
    edgeConfigId: z.string(),
    edgeConfigBackupVersionId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetEdgeConfigBackupRequest$outboundSchema = z.object({
    edgeConfigId: z.string(),
    edgeConfigBackupVersionId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupRequest$;
(function (GetEdgeConfigBackupRequest$) {
    /** @deprecated use `GetEdgeConfigBackupRequest$inboundSchema` instead. */
    GetEdgeConfigBackupRequest$.inboundSchema = GetEdgeConfigBackupRequest$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupRequest$outboundSchema` instead. */
    GetEdgeConfigBackupRequest$.outboundSchema = GetEdgeConfigBackupRequest$outboundSchema;
})(GetEdgeConfigBackupRequest$ || (GetEdgeConfigBackupRequest$ = {}));
export function getEdgeConfigBackupRequestToJSON(getEdgeConfigBackupRequest) {
    return JSON.stringify(GetEdgeConfigBackupRequest$outboundSchema.parse(getEdgeConfigBackupRequest));
}
export function getEdgeConfigBackupRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupRequest' from JSON`);
}
/** @internal */
export const ResponseBodyUser$inboundSchema = z.object({
    id: z.string(),
    username: z.string(),
    email: z.string(),
    name: z.string().optional(),
    avatar: z.string().optional(),
});
/** @internal */
export const ResponseBodyUser$outboundSchema = z.object({
    id: z.string(),
    username: z.string(),
    email: z.string(),
    name: z.string().optional(),
    avatar: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyUser$;
(function (ResponseBodyUser$) {
    /** @deprecated use `ResponseBodyUser$inboundSchema` instead. */
    ResponseBodyUser$.inboundSchema = ResponseBodyUser$inboundSchema;
    /** @deprecated use `ResponseBodyUser$outboundSchema` instead. */
    ResponseBodyUser$.outboundSchema = ResponseBodyUser$outboundSchema;
})(ResponseBodyUser$ || (ResponseBodyUser$ = {}));
export function responseBodyUserToJSON(responseBodyUser) {
    return JSON.stringify(ResponseBodyUser$outboundSchema.parse(responseBodyUser));
}
export function responseBodyUserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyUser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyUser' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBodyItems$inboundSchema = z.object({
    updatedAt: z.number(),
    value: z.nullable(EdgeConfigItemValue$inboundSchema),
    description: z.string().optional(),
    createdAt: z.number(),
});
/** @internal */
export const GetEdgeConfigBackupResponseBodyItems$outboundSchema = z.object({
    updatedAt: z.number(),
    value: z.nullable(EdgeConfigItemValue$outboundSchema),
    description: z.string().optional(),
    createdAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBodyItems$;
(function (GetEdgeConfigBackupResponseBodyItems$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBodyItems$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyItems$.inboundSchema = GetEdgeConfigBackupResponseBodyItems$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBodyItems$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyItems$.outboundSchema = GetEdgeConfigBackupResponseBodyItems$outboundSchema;
})(GetEdgeConfigBackupResponseBodyItems$ || (GetEdgeConfigBackupResponseBodyItems$ = {}));
export function getEdgeConfigBackupResponseBodyItemsToJSON(getEdgeConfigBackupResponseBodyItems) {
    return JSON.stringify(GetEdgeConfigBackupResponseBodyItems$outboundSchema.parse(getEdgeConfigBackupResponseBodyItems));
}
export function getEdgeConfigBackupResponseBodyItemsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBodyItems$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBodyItems' from JSON`);
}
/** @internal */
export const ResponseBodyBackup$inboundSchema = z.object({
    digest: z.string(),
    items: z.record(z.lazy(() => GetEdgeConfigBackupResponseBodyItems$inboundSchema)),
    slug: z.string(),
    updatedAt: z.number(),
});
/** @internal */
export const ResponseBodyBackup$outboundSchema = z.object({
    digest: z.string(),
    items: z.record(z.lazy(() => GetEdgeConfigBackupResponseBodyItems$outboundSchema)),
    slug: z.string(),
    updatedAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyBackup$;
(function (ResponseBodyBackup$) {
    /** @deprecated use `ResponseBodyBackup$inboundSchema` instead. */
    ResponseBodyBackup$.inboundSchema = ResponseBodyBackup$inboundSchema;
    /** @deprecated use `ResponseBodyBackup$outboundSchema` instead. */
    ResponseBodyBackup$.outboundSchema = ResponseBodyBackup$outboundSchema;
})(ResponseBodyBackup$ || (ResponseBodyBackup$ = {}));
export function responseBodyBackupToJSON(responseBodyBackup) {
    return JSON.stringify(ResponseBodyBackup$outboundSchema.parse(responseBodyBackup));
}
export function responseBodyBackupFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyBackup$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyBackup' from JSON`);
}
/** @internal */
export const ResponseBodyMetadata$inboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/** @internal */
export const ResponseBodyMetadata$outboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyMetadata$;
(function (ResponseBodyMetadata$) {
    /** @deprecated use `ResponseBodyMetadata$inboundSchema` instead. */
    ResponseBodyMetadata$.inboundSchema = ResponseBodyMetadata$inboundSchema;
    /** @deprecated use `ResponseBodyMetadata$outboundSchema` instead. */
    ResponseBodyMetadata$.outboundSchema = ResponseBodyMetadata$outboundSchema;
})(ResponseBodyMetadata$ || (ResponseBodyMetadata$ = {}));
export function responseBodyMetadataToJSON(responseBodyMetadata) {
    return JSON.stringify(ResponseBodyMetadata$outboundSchema.parse(responseBodyMetadata));
}
export function responseBodyMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyMetadata' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBody2$inboundSchema = z.object({
    user: z.lazy(() => ResponseBodyUser$inboundSchema),
    id: z.string(),
    lastModified: z.number(),
    backup: z.lazy(() => ResponseBodyBackup$inboundSchema),
    metadata: z.lazy(() => ResponseBodyMetadata$inboundSchema),
});
/** @internal */
export const GetEdgeConfigBackupResponseBody2$outboundSchema = z.object({
    user: z.lazy(() => ResponseBodyUser$outboundSchema),
    id: z.string(),
    lastModified: z.number(),
    backup: z.lazy(() => ResponseBodyBackup$outboundSchema),
    metadata: z.lazy(() => ResponseBodyMetadata$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBody2$;
(function (GetEdgeConfigBackupResponseBody2$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBody2$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBody2$.inboundSchema = GetEdgeConfigBackupResponseBody2$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBody2$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBody2$.outboundSchema = GetEdgeConfigBackupResponseBody2$outboundSchema;
})(GetEdgeConfigBackupResponseBody2$ || (GetEdgeConfigBackupResponseBody2$ = {}));
export function getEdgeConfigBackupResponseBody2ToJSON(getEdgeConfigBackupResponseBody2) {
    return JSON.stringify(GetEdgeConfigBackupResponseBody2$outboundSchema.parse(getEdgeConfigBackupResponseBody2));
}
export function getEdgeConfigBackupResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBody2' from JSON`);
}
/** @internal */
export const ResponseBodyItems$inboundSchema = z.object({
    updatedAt: z.number(),
    value: z.nullable(EdgeConfigItemValue$inboundSchema),
    description: z.string().optional(),
    createdAt: z.number(),
});
/** @internal */
export const ResponseBodyItems$outboundSchema = z.object({
    updatedAt: z.number(),
    value: z.nullable(EdgeConfigItemValue$outboundSchema),
    description: z.string().optional(),
    createdAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyItems$;
(function (ResponseBodyItems$) {
    /** @deprecated use `ResponseBodyItems$inboundSchema` instead. */
    ResponseBodyItems$.inboundSchema = ResponseBodyItems$inboundSchema;
    /** @deprecated use `ResponseBodyItems$outboundSchema` instead. */
    ResponseBodyItems$.outboundSchema = ResponseBodyItems$outboundSchema;
})(ResponseBodyItems$ || (ResponseBodyItems$ = {}));
export function responseBodyItemsToJSON(responseBodyItems) {
    return JSON.stringify(ResponseBodyItems$outboundSchema.parse(responseBodyItems));
}
export function responseBodyItemsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyItems$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyItems' from JSON`);
}
/** @internal */
export const Backup$inboundSchema = z
    .object({
    digest: z.string(),
    items: z.record(z.lazy(() => ResponseBodyItems$inboundSchema)),
    slug: z.string(),
    updatedAt: z.number(),
});
/** @internal */
export const Backup$outboundSchema = z.object({
    digest: z.string(),
    items: z.record(z.lazy(() => ResponseBodyItems$outboundSchema)),
    slug: z.string(),
    updatedAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Backup$;
(function (Backup$) {
    /** @deprecated use `Backup$inboundSchema` instead. */
    Backup$.inboundSchema = Backup$inboundSchema;
    /** @deprecated use `Backup$outboundSchema` instead. */
    Backup$.outboundSchema = Backup$outboundSchema;
})(Backup$ || (Backup$ = {}));
export function backupToJSON(backup) {
    return JSON.stringify(Backup$outboundSchema.parse(backup));
}
export function backupFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Backup$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Backup' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBodyMetadata$inboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/** @internal */
export const GetEdgeConfigBackupResponseBodyMetadata$outboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBodyMetadata$;
(function (GetEdgeConfigBackupResponseBodyMetadata$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBodyMetadata$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyMetadata$.inboundSchema = GetEdgeConfigBackupResponseBodyMetadata$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBodyMetadata$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyMetadata$.outboundSchema = GetEdgeConfigBackupResponseBodyMetadata$outboundSchema;
})(GetEdgeConfigBackupResponseBodyMetadata$ || (GetEdgeConfigBackupResponseBodyMetadata$ = {}));
export function getEdgeConfigBackupResponseBodyMetadataToJSON(getEdgeConfigBackupResponseBodyMetadata) {
    return JSON.stringify(GetEdgeConfigBackupResponseBodyMetadata$outboundSchema.parse(getEdgeConfigBackupResponseBodyMetadata));
}
export function getEdgeConfigBackupResponseBodyMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBodyMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBodyMetadata' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBodyUser$inboundSchema = z.object({
    id: z.string(),
    username: z.string(),
    email: z.string(),
    name: z.string().optional(),
    avatar: z.string().optional(),
});
/** @internal */
export const GetEdgeConfigBackupResponseBodyUser$outboundSchema = z.object({
    id: z.string(),
    username: z.string(),
    email: z.string(),
    name: z.string().optional(),
    avatar: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBodyUser$;
(function (GetEdgeConfigBackupResponseBodyUser$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBodyUser$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyUser$.inboundSchema = GetEdgeConfigBackupResponseBodyUser$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBodyUser$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBodyUser$.outboundSchema = GetEdgeConfigBackupResponseBodyUser$outboundSchema;
})(GetEdgeConfigBackupResponseBodyUser$ || (GetEdgeConfigBackupResponseBodyUser$ = {}));
export function getEdgeConfigBackupResponseBodyUserToJSON(getEdgeConfigBackupResponseBodyUser) {
    return JSON.stringify(GetEdgeConfigBackupResponseBodyUser$outboundSchema.parse(getEdgeConfigBackupResponseBodyUser));
}
export function getEdgeConfigBackupResponseBodyUserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBodyUser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBodyUser' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBody1$inboundSchema = z.object({
    id: z.string(),
    lastModified: z.number(),
    backup: z.lazy(() => Backup$inboundSchema),
    metadata: z.lazy(() => GetEdgeConfigBackupResponseBodyMetadata$inboundSchema),
    user: z.lazy(() => GetEdgeConfigBackupResponseBodyUser$inboundSchema)
        .optional(),
});
/** @internal */
export const GetEdgeConfigBackupResponseBody1$outboundSchema = z.object({
    id: z.string(),
    lastModified: z.number(),
    backup: z.lazy(() => Backup$outboundSchema),
    metadata: z.lazy(() => GetEdgeConfigBackupResponseBodyMetadata$outboundSchema),
    user: z.lazy(() => GetEdgeConfigBackupResponseBodyUser$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBody1$;
(function (GetEdgeConfigBackupResponseBody1$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBody1$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBody1$.inboundSchema = GetEdgeConfigBackupResponseBody1$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBody1$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBody1$.outboundSchema = GetEdgeConfigBackupResponseBody1$outboundSchema;
})(GetEdgeConfigBackupResponseBody1$ || (GetEdgeConfigBackupResponseBody1$ = {}));
export function getEdgeConfigBackupResponseBody1ToJSON(getEdgeConfigBackupResponseBody1) {
    return JSON.stringify(GetEdgeConfigBackupResponseBody1$outboundSchema.parse(getEdgeConfigBackupResponseBody1));
}
export function getEdgeConfigBackupResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBody1' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupResponseBody$inboundSchema = z.union([
    z.lazy(() => GetEdgeConfigBackupResponseBody2$inboundSchema),
    z.lazy(() => GetEdgeConfigBackupResponseBody1$inboundSchema),
]);
/** @internal */
export const GetEdgeConfigBackupResponseBody$outboundSchema = z.union([
    z.lazy(() => GetEdgeConfigBackupResponseBody2$outboundSchema),
    z.lazy(() => GetEdgeConfigBackupResponseBody1$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupResponseBody$;
(function (GetEdgeConfigBackupResponseBody$) {
    /** @deprecated use `GetEdgeConfigBackupResponseBody$inboundSchema` instead. */
    GetEdgeConfigBackupResponseBody$.inboundSchema = GetEdgeConfigBackupResponseBody$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupResponseBody$outboundSchema` instead. */
    GetEdgeConfigBackupResponseBody$.outboundSchema = GetEdgeConfigBackupResponseBody$outboundSchema;
})(GetEdgeConfigBackupResponseBody$ || (GetEdgeConfigBackupResponseBody$ = {}));
export function getEdgeConfigBackupResponseBodyToJSON(getEdgeConfigBackupResponseBody) {
    return JSON.stringify(GetEdgeConfigBackupResponseBody$outboundSchema.parse(getEdgeConfigBackupResponseBody));
}
export function getEdgeConfigBackupResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupResponseBody' from JSON`);
}
//# sourceMappingURL=getedgeconfigbackupop.js.map