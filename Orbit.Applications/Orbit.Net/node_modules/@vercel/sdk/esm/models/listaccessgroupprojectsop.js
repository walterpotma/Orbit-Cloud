/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const ListAccessGroupProjectsRole = {
    Admin: "ADMIN",
    ProjectDeveloper: "PROJECT_DEVELOPER",
    ProjectViewer: "PROJECT_VIEWER",
};
/** @internal */
export const ListAccessGroupProjectsRequest$inboundSchema = z.object({
    idOrName: z.string(),
    limit: z.number().int().optional(),
    next: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const ListAccessGroupProjectsRequest$outboundSchema = z.object({
    idOrName: z.string(),
    limit: z.number().int().optional(),
    next: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsRequest$;
(function (ListAccessGroupProjectsRequest$) {
    /** @deprecated use `ListAccessGroupProjectsRequest$inboundSchema` instead. */
    ListAccessGroupProjectsRequest$.inboundSchema = ListAccessGroupProjectsRequest$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsRequest$outboundSchema` instead. */
    ListAccessGroupProjectsRequest$.outboundSchema = ListAccessGroupProjectsRequest$outboundSchema;
})(ListAccessGroupProjectsRequest$ || (ListAccessGroupProjectsRequest$ = {}));
export function listAccessGroupProjectsRequestToJSON(listAccessGroupProjectsRequest) {
    return JSON.stringify(ListAccessGroupProjectsRequest$outboundSchema.parse(listAccessGroupProjectsRequest));
}
export function listAccessGroupProjectsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupProjectsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupProjectsRequest' from JSON`);
}
/** @internal */
export const ListAccessGroupProjectsRole$inboundSchema = z.nativeEnum(ListAccessGroupProjectsRole);
/** @internal */
export const ListAccessGroupProjectsRole$outboundSchema = ListAccessGroupProjectsRole$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsRole$;
(function (ListAccessGroupProjectsRole$) {
    /** @deprecated use `ListAccessGroupProjectsRole$inboundSchema` instead. */
    ListAccessGroupProjectsRole$.inboundSchema = ListAccessGroupProjectsRole$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsRole$outboundSchema` instead. */
    ListAccessGroupProjectsRole$.outboundSchema = ListAccessGroupProjectsRole$outboundSchema;
})(ListAccessGroupProjectsRole$ || (ListAccessGroupProjectsRole$ = {}));
/** @internal */
export const ListAccessGroupProjectsProject$inboundSchema = z.object({
    name: z.string().optional(),
    framework: z.nullable(z.string()).optional(),
    latestDeploymentId: z.string().optional(),
});
/** @internal */
export const ListAccessGroupProjectsProject$outboundSchema = z.object({
    name: z.string().optional(),
    framework: z.nullable(z.string()).optional(),
    latestDeploymentId: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsProject$;
(function (ListAccessGroupProjectsProject$) {
    /** @deprecated use `ListAccessGroupProjectsProject$inboundSchema` instead. */
    ListAccessGroupProjectsProject$.inboundSchema = ListAccessGroupProjectsProject$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsProject$outboundSchema` instead. */
    ListAccessGroupProjectsProject$.outboundSchema = ListAccessGroupProjectsProject$outboundSchema;
})(ListAccessGroupProjectsProject$ || (ListAccessGroupProjectsProject$ = {}));
export function listAccessGroupProjectsProjectToJSON(listAccessGroupProjectsProject) {
    return JSON.stringify(ListAccessGroupProjectsProject$outboundSchema.parse(listAccessGroupProjectsProject));
}
export function listAccessGroupProjectsProjectFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupProjectsProject$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupProjectsProject' from JSON`);
}
/** @internal */
export const ListAccessGroupProjectsProjects$inboundSchema = z.object({
    projectId: z.string(),
    role: ListAccessGroupProjectsRole$inboundSchema,
    createdAt: z.string(),
    updatedAt: z.string(),
    project: z.lazy(() => ListAccessGroupProjectsProject$inboundSchema),
});
/** @internal */
export const ListAccessGroupProjectsProjects$outboundSchema = z.object({
    projectId: z.string(),
    role: ListAccessGroupProjectsRole$outboundSchema,
    createdAt: z.string(),
    updatedAt: z.string(),
    project: z.lazy(() => ListAccessGroupProjectsProject$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsProjects$;
(function (ListAccessGroupProjectsProjects$) {
    /** @deprecated use `ListAccessGroupProjectsProjects$inboundSchema` instead. */
    ListAccessGroupProjectsProjects$.inboundSchema = ListAccessGroupProjectsProjects$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsProjects$outboundSchema` instead. */
    ListAccessGroupProjectsProjects$.outboundSchema = ListAccessGroupProjectsProjects$outboundSchema;
})(ListAccessGroupProjectsProjects$ || (ListAccessGroupProjectsProjects$ = {}));
export function listAccessGroupProjectsProjectsToJSON(listAccessGroupProjectsProjects) {
    return JSON.stringify(ListAccessGroupProjectsProjects$outboundSchema.parse(listAccessGroupProjectsProjects));
}
export function listAccessGroupProjectsProjectsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupProjectsProjects$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupProjectsProjects' from JSON`);
}
/** @internal */
export const ListAccessGroupProjectsPagination$inboundSchema = z.object({
    count: z.number(),
    next: z.nullable(z.string()),
});
/** @internal */
export const ListAccessGroupProjectsPagination$outboundSchema = z.object({
    count: z.number(),
    next: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsPagination$;
(function (ListAccessGroupProjectsPagination$) {
    /** @deprecated use `ListAccessGroupProjectsPagination$inboundSchema` instead. */
    ListAccessGroupProjectsPagination$.inboundSchema = ListAccessGroupProjectsPagination$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsPagination$outboundSchema` instead. */
    ListAccessGroupProjectsPagination$.outboundSchema = ListAccessGroupProjectsPagination$outboundSchema;
})(ListAccessGroupProjectsPagination$ || (ListAccessGroupProjectsPagination$ = {}));
export function listAccessGroupProjectsPaginationToJSON(listAccessGroupProjectsPagination) {
    return JSON.stringify(ListAccessGroupProjectsPagination$outboundSchema.parse(listAccessGroupProjectsPagination));
}
export function listAccessGroupProjectsPaginationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupProjectsPagination$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupProjectsPagination' from JSON`);
}
/** @internal */
export const ListAccessGroupProjectsResponseBody$inboundSchema = z.object({
    projects: z.array(z.lazy(() => ListAccessGroupProjectsProjects$inboundSchema)),
    pagination: z.lazy(() => ListAccessGroupProjectsPagination$inboundSchema),
});
/** @internal */
export const ListAccessGroupProjectsResponseBody$outboundSchema = z.object({
    projects: z.array(z.lazy(() => ListAccessGroupProjectsProjects$outboundSchema)),
    pagination: z.lazy(() => ListAccessGroupProjectsPagination$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccessGroupProjectsResponseBody$;
(function (ListAccessGroupProjectsResponseBody$) {
    /** @deprecated use `ListAccessGroupProjectsResponseBody$inboundSchema` instead. */
    ListAccessGroupProjectsResponseBody$.inboundSchema = ListAccessGroupProjectsResponseBody$inboundSchema;
    /** @deprecated use `ListAccessGroupProjectsResponseBody$outboundSchema` instead. */
    ListAccessGroupProjectsResponseBody$.outboundSchema = ListAccessGroupProjectsResponseBody$outboundSchema;
})(ListAccessGroupProjectsResponseBody$ || (ListAccessGroupProjectsResponseBody$ = {}));
export function listAccessGroupProjectsResponseBodyToJSON(listAccessGroupProjectsResponseBody) {
    return JSON.stringify(ListAccessGroupProjectsResponseBody$outboundSchema.parse(listAccessGroupProjectsResponseBody));
}
export function listAccessGroupProjectsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccessGroupProjectsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccessGroupProjectsResponseBody' from JSON`);
}
//# sourceMappingURL=listaccessgroupprojectsop.js.map