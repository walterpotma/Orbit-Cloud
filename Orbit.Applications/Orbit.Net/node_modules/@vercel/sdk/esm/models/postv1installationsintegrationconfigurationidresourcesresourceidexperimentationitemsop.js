/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
export const Category = {
    Experiment: "experiment",
    Flag: "flag",
};
/** @internal */
export const Category$inboundSchema = z
    .nativeEnum(Category);
/** @internal */
export const Category$outboundSchema = Category$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Category$;
(function (Category$) {
    /** @deprecated use `Category$inboundSchema` instead. */
    Category$.inboundSchema = Category$inboundSchema;
    /** @deprecated use `Category$outboundSchema` instead. */
    Category$.outboundSchema = Category$outboundSchema;
})(Category$ || (Category$ = {}));
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$inboundSchema = z.object({
    id: z.string(),
    slug: z.string(),
    origin: z.string(),
    category: Category$inboundSchema.optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    isArchived: z.boolean().optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
});
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$outboundSchema = z.object({
    id: z.string(),
    slug: z.string(),
    origin: z.string(),
    category: Category$outboundSchema.optional(),
    name: z.string().optional(),
    description: z.string().optional(),
    isArchived: z.boolean().optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$;
(function (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$) {
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$inboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$.inboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$inboundSchema;
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$outboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$.outboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$outboundSchema;
})(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$ || (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$ = {}));
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemsToJSON(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems) {
    return JSON.stringify(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$outboundSchema
        .parse(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems));
}
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems' from JSON`);
}
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$inboundSchema = z.object({
    items: z.array(z.lazy(() => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$inboundSchema)),
});
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$outboundSchema = z.object({
    items: z.array(z.lazy(() => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItems$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$;
(function (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$) {
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$inboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$.inboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$inboundSchema;
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$outboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$.outboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$outboundSchema;
})(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$ || (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$ = {}));
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBodyToJSON(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody) {
    return JSON.stringify(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$outboundSchema
        .parse(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody));
}
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody' from JSON`);
}
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$inboundSchema = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    RequestBody: z.lazy(() => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$outboundSchema = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    requestBody: z.lazy(() => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestBody$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$;
(function (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$) {
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$inboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$.inboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$inboundSchema;
    /** @deprecated use `PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$outboundSchema` instead. */
    PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$.outboundSchema = PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$outboundSchema;
})(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$ || (PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$ = {}));
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestToJSON(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest) {
    return JSON.stringify(PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$outboundSchema
        .parse(postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest));
}
export function postV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'PostV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsRequest' from JSON`);
}
//# sourceMappingURL=postv1installationsintegrationconfigurationidresourcesresourceidexperimentationitemsop.js.map