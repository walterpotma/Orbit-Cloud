import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetEdgeConfigSchemaRequest = {
    edgeConfigId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * The EdgeConfig.
 */
export type GetEdgeConfigSchemaResponseBody = {};
/** @internal */
export declare const GetEdgeConfigSchemaRequest$inboundSchema: z.ZodType<GetEdgeConfigSchemaRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigSchemaRequest$Outbound = {
    edgeConfigId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetEdgeConfigSchemaRequest$outboundSchema: z.ZodType<GetEdgeConfigSchemaRequest$Outbound, z.ZodTypeDef, GetEdgeConfigSchemaRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigSchemaRequest$ {
    /** @deprecated use `GetEdgeConfigSchemaRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigSchemaRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigSchemaRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigSchemaRequest$Outbound, z.ZodTypeDef, GetEdgeConfigSchemaRequest>;
    /** @deprecated use `GetEdgeConfigSchemaRequest$Outbound` instead. */
    type Outbound = GetEdgeConfigSchemaRequest$Outbound;
}
export declare function getEdgeConfigSchemaRequestToJSON(getEdgeConfigSchemaRequest: GetEdgeConfigSchemaRequest): string;
export declare function getEdgeConfigSchemaRequestFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigSchemaRequest, SDKValidationError>;
/** @internal */
export declare const GetEdgeConfigSchemaResponseBody$inboundSchema: z.ZodType<GetEdgeConfigSchemaResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigSchemaResponseBody$Outbound = {};
/** @internal */
export declare const GetEdgeConfigSchemaResponseBody$outboundSchema: z.ZodType<GetEdgeConfigSchemaResponseBody$Outbound, z.ZodTypeDef, GetEdgeConfigSchemaResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigSchemaResponseBody$ {
    /** @deprecated use `GetEdgeConfigSchemaResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigSchemaResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigSchemaResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigSchemaResponseBody$Outbound, z.ZodTypeDef, GetEdgeConfigSchemaResponseBody>;
    /** @deprecated use `GetEdgeConfigSchemaResponseBody$Outbound` instead. */
    type Outbound = GetEdgeConfigSchemaResponseBody$Outbound;
}
export declare function getEdgeConfigSchemaResponseBodyToJSON(getEdgeConfigSchemaResponseBody: GetEdgeConfigSchemaResponseBody): string;
export declare function getEdgeConfigSchemaResponseBodyFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigSchemaResponseBody, SDKValidationError>;
//# sourceMappingURL=getedgeconfigschemaop.d.ts.map