import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type DeleteIntegrationResourceRequest = {
    integrationConfigurationId: string;
    resourceId: string;
};
/** @internal */
export declare const DeleteIntegrationResourceRequest$inboundSchema: z.ZodType<DeleteIntegrationResourceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteIntegrationResourceRequest$Outbound = {
    integrationConfigurationId: string;
    resourceId: string;
};
/** @internal */
export declare const DeleteIntegrationResourceRequest$outboundSchema: z.ZodType<DeleteIntegrationResourceRequest$Outbound, z.ZodTypeDef, DeleteIntegrationResourceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteIntegrationResourceRequest$ {
    /** @deprecated use `DeleteIntegrationResourceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteIntegrationResourceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteIntegrationResourceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteIntegrationResourceRequest$Outbound, z.ZodTypeDef, DeleteIntegrationResourceRequest>;
    /** @deprecated use `DeleteIntegrationResourceRequest$Outbound` instead. */
    type Outbound = DeleteIntegrationResourceRequest$Outbound;
}
export declare function deleteIntegrationResourceRequestToJSON(deleteIntegrationResourceRequest: DeleteIntegrationResourceRequest): string;
export declare function deleteIntegrationResourceRequestFromJSON(jsonString: string): SafeParseResult<DeleteIntegrationResourceRequest, SDKValidationError>;
//# sourceMappingURL=deleteintegrationresourceop.d.ts.map