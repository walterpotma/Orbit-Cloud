import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import { VercelError } from "./vercelerror.js";
export type ErrorT = {
    code: string;
    message: string;
};
export type VercelBadRequestErrorData = {
    error: ErrorT;
};
export declare class VercelBadRequestError extends VercelError {
    error: ErrorT;
    /** The original data that was passed to this error instance. */
    data$: VercelBadRequestErrorData;
    constructor(err: VercelBadRequestErrorData, httpMeta: {
        response: Response;
        request: Request;
        body: string;
    });
}
/** @internal */
export declare const ErrorT$inboundSchema: z.ZodType<ErrorT, z.ZodTypeDef, unknown>;
/** @internal */
export type ErrorT$Outbound = {
    code: string;
    message: string;
};
/** @internal */
export declare const ErrorT$outboundSchema: z.ZodType<ErrorT$Outbound, z.ZodTypeDef, ErrorT>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ErrorT$ {
    /** @deprecated use `ErrorT$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ErrorT, z.ZodTypeDef, unknown>;
    /** @deprecated use `ErrorT$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ErrorT$Outbound, z.ZodTypeDef, ErrorT>;
    /** @deprecated use `ErrorT$Outbound` instead. */
    type Outbound = ErrorT$Outbound;
}
export declare function errorToJSON(errorT: ErrorT): string;
export declare function errorFromJSON(jsonString: string): SafeParseResult<ErrorT, SDKValidationError>;
/** @internal */
export declare const VercelBadRequestError$inboundSchema: z.ZodType<VercelBadRequestError, z.ZodTypeDef, unknown>;
/** @internal */
export type VercelBadRequestError$Outbound = {
    error: ErrorT$Outbound;
};
/** @internal */
export declare const VercelBadRequestError$outboundSchema: z.ZodType<VercelBadRequestError$Outbound, z.ZodTypeDef, VercelBadRequestError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VercelBadRequestError$ {
    /** @deprecated use `VercelBadRequestError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VercelBadRequestError, z.ZodTypeDef, unknown>;
    /** @deprecated use `VercelBadRequestError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VercelBadRequestError$Outbound, z.ZodTypeDef, VercelBadRequestError>;
    /** @deprecated use `VercelBadRequestError$Outbound` instead. */
    type Outbound = VercelBadRequestError$Outbound;
}
//# sourceMappingURL=vercelbadrequesterror.d.ts.map