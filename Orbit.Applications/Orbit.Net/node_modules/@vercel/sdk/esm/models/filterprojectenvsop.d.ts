import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * If true, the environment variable value will be decrypted
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export declare const Decrypt: {
    readonly True: "true";
    readonly False: "false";
};
/**
 * If true, the environment variable value will be decrypted
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type Decrypt = ClosedEnum<typeof Decrypt>;
export type FilterProjectEnvsRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * If defined, the git branch of the environment variable to filter the results (must have target=preview)
     */
    gitBranch?: string | undefined;
    /**
     * If true, the environment variable value will be decrypted
     */
    decrypt?: Decrypt | undefined;
    /**
     * The source that is calling the endpoint.
     */
    source?: string | undefined;
    /**
     * The unique custom environment identifier within the project
     */
    customEnvironmentId?: string | undefined;
    /**
     * The custom environment slug (name) within the project
     */
    customEnvironmentSlug?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const FilterProjectEnvsTargetProjectsResponse2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTargetProjectsResponse2 = ClosedEnum<typeof FilterProjectEnvsTargetProjectsResponse2>;
export declare const FilterProjectEnvsTargetProjectsResponse1: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTargetProjectsResponse1 = ClosedEnum<typeof FilterProjectEnvsTargetProjectsResponse1>;
export type FilterProjectEnvsResponseBodyProjectsResponseTarget = Array<FilterProjectEnvsTargetProjectsResponse1> | FilterProjectEnvsTargetProjectsResponse2;
export declare const FilterProjectEnvsResponseBodyProjectsResponse200Type: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type FilterProjectEnvsResponseBodyProjectsResponse200Type = ClosedEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200Type>;
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type>;
export type FilterProjectEnvsContentHintProjectsResponse15 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type;
    projectId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type>;
export type FilterProjectEnvsContentHintProjectsResponse14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type>;
export type FilterProjectEnvsContentHintProjectsResponse13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type>;
export type FilterProjectEnvsContentHintProjectsResponse12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type: {
    readonly PostgresPassword: "postgres-password";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type>;
export type FilterProjectEnvsContentHintProjectsResponse11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type: {
    readonly PostgresHost: "postgres-host";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type>;
export type FilterProjectEnvsContentHintProjectsResponse10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type: {
    readonly PostgresUser: "postgres-user";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type>;
export type FilterProjectEnvsContentHintProjectsResponse9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type>;
export type FilterProjectEnvsContentHintProjectsResponse8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type>;
export type FilterProjectEnvsContentHintProjectsResponse7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type: {
    readonly PostgresUrl: "postgres-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type>;
export type FilterProjectEnvsContentHintProjectsResponse6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type>;
export type FilterProjectEnvsContentHintProjectsResponse5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type>;
export type FilterProjectEnvsContentHintProjectsResponse4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type>;
export type FilterProjectEnvsContentHintProjectsResponse3 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType>;
export type FilterProjectEnvsContentHintProjectsResponse2 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type: {
    readonly RedisUrl: "redis-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type>;
export type FilterProjectEnvsContentHintProjectsResponse1 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type;
    storeId: string;
};
export type FilterProjectEnvsResponseBodyProjectsContentHint = FilterProjectEnvsContentHintProjectsResponse14 | FilterProjectEnvsContentHintProjectsResponse1 | FilterProjectEnvsContentHintProjectsResponse2 | FilterProjectEnvsContentHintProjectsResponse3 | FilterProjectEnvsContentHintProjectsResponse4 | FilterProjectEnvsContentHintProjectsResponse5 | FilterProjectEnvsContentHintProjectsResponse6 | FilterProjectEnvsContentHintProjectsResponse7 | FilterProjectEnvsContentHintProjectsResponse8 | FilterProjectEnvsContentHintProjectsResponse9 | FilterProjectEnvsContentHintProjectsResponse10 | FilterProjectEnvsContentHintProjectsResponse11 | FilterProjectEnvsContentHintProjectsResponse12 | FilterProjectEnvsContentHintProjectsResponse13 | FilterProjectEnvsContentHintProjectsResponse15;
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type: {
    readonly FlagsSecret: "flags-secret";
};
export type FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type = ClosedEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type FilterProjectEnvsResponseBodyProjectsInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type ResponseBodyEnvs = {
    target?: Array<FilterProjectEnvsTargetProjectsResponse1> | FilterProjectEnvsTargetProjectsResponse2 | undefined;
    type: FilterProjectEnvsResponseBodyProjectsResponse200Type;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHintProjectsResponse14 | FilterProjectEnvsContentHintProjectsResponse1 | FilterProjectEnvsContentHintProjectsResponse2 | FilterProjectEnvsContentHintProjectsResponse3 | FilterProjectEnvsContentHintProjectsResponse4 | FilterProjectEnvsContentHintProjectsResponse5 | FilterProjectEnvsContentHintProjectsResponse6 | FilterProjectEnvsContentHintProjectsResponse7 | FilterProjectEnvsContentHintProjectsResponse8 | FilterProjectEnvsContentHintProjectsResponse9 | FilterProjectEnvsContentHintProjectsResponse10 | FilterProjectEnvsContentHintProjectsResponse11 | FilterProjectEnvsContentHintProjectsResponse12 | FilterProjectEnvsContentHintProjectsResponse13 | FilterProjectEnvsContentHintProjectsResponse15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: FilterProjectEnvsResponseBodyProjectsInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/**
 * The list of environment variables for the given project
 */
export type FilterProjectEnvsResponseBody3 = {
    envs: Array<ResponseBodyEnvs>;
};
export declare const FilterProjectEnvsTargetProjects2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTargetProjects2 = ClosedEnum<typeof FilterProjectEnvsTargetProjects2>;
export declare const FilterProjectEnvsTargetProjects1: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTargetProjects1 = ClosedEnum<typeof FilterProjectEnvsTargetProjects1>;
export type FilterProjectEnvsResponseBodyProjectsTarget = Array<FilterProjectEnvsTargetProjects1> | FilterProjectEnvsTargetProjects2;
export declare const FilterProjectEnvsResponseBodyProjectsResponseType: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type FilterProjectEnvsResponseBodyProjectsResponseType = ClosedEnum<typeof FilterProjectEnvsResponseBodyProjectsResponseType>;
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type>;
export type FilterProjectEnvsContentHintProjects15 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type;
    projectId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type>;
export type FilterProjectEnvsContentHintProjects14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type>;
export type FilterProjectEnvsContentHintProjects13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type>;
export type FilterProjectEnvsContentHintProjects12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type: {
    readonly PostgresPassword: "postgres-password";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type>;
export type FilterProjectEnvsContentHintProjects11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type: {
    readonly PostgresHost: "postgres-host";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type>;
export type FilterProjectEnvsContentHintProjects10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type: {
    readonly PostgresUser: "postgres-user";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type>;
export type FilterProjectEnvsContentHintProjects9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type>;
export type FilterProjectEnvsContentHintProjects8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type>;
export type FilterProjectEnvsContentHintProjects7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type: {
    readonly PostgresUrl: "postgres-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type>;
export type FilterProjectEnvsContentHintProjects6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type>;
export type FilterProjectEnvsContentHintProjects5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type>;
export type FilterProjectEnvsContentHintProjects4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type>;
export type FilterProjectEnvsContentHintProjects3 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType>;
export type FilterProjectEnvsContentHintProjects2 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type: {
    readonly RedisUrl: "redis-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type>;
export type FilterProjectEnvsContentHintProjects1 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type;
    storeId: string;
};
export type FilterProjectEnvsResponseBodyContentHint = FilterProjectEnvsContentHintProjects14 | FilterProjectEnvsContentHintProjects1 | FilterProjectEnvsContentHintProjects2 | FilterProjectEnvsContentHintProjects3 | FilterProjectEnvsContentHintProjects4 | FilterProjectEnvsContentHintProjects5 | FilterProjectEnvsContentHintProjects6 | FilterProjectEnvsContentHintProjects7 | FilterProjectEnvsContentHintProjects8 | FilterProjectEnvsContentHintProjects9 | FilterProjectEnvsContentHintProjects10 | FilterProjectEnvsContentHintProjects11 | FilterProjectEnvsContentHintProjects12 | FilterProjectEnvsContentHintProjects13 | FilterProjectEnvsContentHintProjects15;
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType: {
    readonly FlagsSecret: "flags-secret";
};
export type FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType = ClosedEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type FilterProjectEnvsResponseBodyInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type Envs = {
    target?: Array<FilterProjectEnvsTargetProjects1> | FilterProjectEnvsTargetProjects2 | undefined;
    type: FilterProjectEnvsResponseBodyProjectsResponseType;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHintProjects14 | FilterProjectEnvsContentHintProjects1 | FilterProjectEnvsContentHintProjects2 | FilterProjectEnvsContentHintProjects3 | FilterProjectEnvsContentHintProjects4 | FilterProjectEnvsContentHintProjects5 | FilterProjectEnvsContentHintProjects6 | FilterProjectEnvsContentHintProjects7 | FilterProjectEnvsContentHintProjects8 | FilterProjectEnvsContentHintProjects9 | FilterProjectEnvsContentHintProjects10 | FilterProjectEnvsContentHintProjects11 | FilterProjectEnvsContentHintProjects12 | FilterProjectEnvsContentHintProjects13 | FilterProjectEnvsContentHintProjects15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: FilterProjectEnvsResponseBodyInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
export type FilterProjectEnvsResponseBody2 = {
    envs: Array<Envs>;
    /**
     * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
     */
    pagination: Pagination;
};
export declare const FilterProjectEnvsTarget2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTarget2 = ClosedEnum<typeof FilterProjectEnvsTarget2>;
export declare const FilterProjectEnvsTarget1: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type FilterProjectEnvsTarget1 = ClosedEnum<typeof FilterProjectEnvsTarget1>;
export type FilterProjectEnvsResponseBodyTarget = Array<FilterProjectEnvsTarget1> | FilterProjectEnvsTarget2;
export declare const FilterProjectEnvsResponseBodyType: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type FilterProjectEnvsResponseBodyType = ClosedEnum<typeof FilterProjectEnvsResponseBodyType>;
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
export type FilterProjectEnvsContentHint15 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type;
    projectId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
export type FilterProjectEnvsContentHint14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
export type FilterProjectEnvsContentHint13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
export type FilterProjectEnvsContentHint12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type: {
    readonly PostgresPassword: "postgres-password";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
export type FilterProjectEnvsContentHint11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type: {
    readonly PostgresHost: "postgres-host";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
export type FilterProjectEnvsContentHint10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type: {
    readonly PostgresUser: "postgres-user";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
export type FilterProjectEnvsContentHint9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
export type FilterProjectEnvsContentHint8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
export type FilterProjectEnvsContentHint7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType: {
    readonly PostgresUrl: "postgres-url";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
export type FilterProjectEnvsContentHint6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType>;
export type FilterProjectEnvsContentHint5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponse200Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type FilterProjectEnvsContentHintProjectsResponse200Type = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponse200Type>;
export type FilterProjectEnvsContentHint4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200Type;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsResponseType: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type FilterProjectEnvsContentHintProjectsResponseType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsResponseType>;
export type FilterProjectEnvsContentHint3 = {
    type: FilterProjectEnvsContentHintProjectsResponseType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintProjectsType: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type FilterProjectEnvsContentHintProjectsType = ClosedEnum<typeof FilterProjectEnvsContentHintProjectsType>;
export type FilterProjectEnvsContentHint2 = {
    type: FilterProjectEnvsContentHintProjectsType;
    storeId: string;
};
export declare const FilterProjectEnvsContentHintType: {
    readonly RedisUrl: "redis-url";
};
export type FilterProjectEnvsContentHintType = ClosedEnum<typeof FilterProjectEnvsContentHintType>;
export type FilterProjectEnvsContentHint1 = {
    type: FilterProjectEnvsContentHintType;
    storeId: string;
};
export type ResponseBodyContentHint = FilterProjectEnvsContentHint14 | FilterProjectEnvsContentHint1 | FilterProjectEnvsContentHint2 | FilterProjectEnvsContentHint3 | FilterProjectEnvsContentHint4 | FilterProjectEnvsContentHint5 | FilterProjectEnvsContentHint6 | FilterProjectEnvsContentHint7 | FilterProjectEnvsContentHint8 | FilterProjectEnvsContentHint9 | FilterProjectEnvsContentHint10 | FilterProjectEnvsContentHint11 | FilterProjectEnvsContentHint12 | FilterProjectEnvsContentHint13 | FilterProjectEnvsContentHint15;
export declare const FilterProjectEnvsResponseBodyProjectsType: {
    readonly FlagsSecret: "flags-secret";
};
export type FilterProjectEnvsResponseBodyProjectsType = ClosedEnum<typeof FilterProjectEnvsResponseBodyProjectsType>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type ResponseBodyInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type FilterProjectEnvsResponseBody1 = {
    target?: Array<FilterProjectEnvsTarget1> | FilterProjectEnvsTarget2 | undefined;
    type: FilterProjectEnvsResponseBodyType;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHint14 | FilterProjectEnvsContentHint1 | FilterProjectEnvsContentHint2 | FilterProjectEnvsContentHint3 | FilterProjectEnvsContentHint4 | FilterProjectEnvsContentHint5 | FilterProjectEnvsContentHint6 | FilterProjectEnvsContentHint7 | FilterProjectEnvsContentHint8 | FilterProjectEnvsContentHint9 | FilterProjectEnvsContentHint10 | FilterProjectEnvsContentHint11 | FilterProjectEnvsContentHint12 | FilterProjectEnvsContentHint13 | FilterProjectEnvsContentHint15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: ResponseBodyInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/**
 * The list of environment variables for the given project
 */
export type FilterProjectEnvsResponseBody = FilterProjectEnvsResponseBody1 | FilterProjectEnvsResponseBody2 | FilterProjectEnvsResponseBody3;
/** @internal */
export declare const Decrypt$inboundSchema: z.ZodNativeEnum<typeof Decrypt>;
/** @internal */
export declare const Decrypt$outboundSchema: z.ZodNativeEnum<typeof Decrypt>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Decrypt$ {
    /** @deprecated use `Decrypt$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly True: "true";
        readonly False: "false";
    }>;
    /** @deprecated use `Decrypt$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly True: "true";
        readonly False: "false";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsRequest$inboundSchema: z.ZodType<FilterProjectEnvsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsRequest$Outbound = {
    idOrName: string;
    gitBranch?: string | undefined;
    decrypt?: string | undefined;
    source?: string | undefined;
    customEnvironmentId?: string | undefined;
    customEnvironmentSlug?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const FilterProjectEnvsRequest$outboundSchema: z.ZodType<FilterProjectEnvsRequest$Outbound, z.ZodTypeDef, FilterProjectEnvsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsRequest$ {
    /** @deprecated use `FilterProjectEnvsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsRequest$Outbound, z.ZodTypeDef, FilterProjectEnvsRequest>;
    /** @deprecated use `FilterProjectEnvsRequest$Outbound` instead. */
    type Outbound = FilterProjectEnvsRequest$Outbound;
}
export declare function filterProjectEnvsRequestToJSON(filterProjectEnvsRequest: FilterProjectEnvsRequest): string;
export declare function filterProjectEnvsRequestFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsRequest, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsTargetProjectsResponse2$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjectsResponse2>;
/** @internal */
export declare const FilterProjectEnvsTargetProjectsResponse2$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjectsResponse2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTargetProjectsResponse2$ {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsTargetProjectsResponse1$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjectsResponse1>;
/** @internal */
export declare const FilterProjectEnvsTargetProjectsResponse1$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjectsResponse1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTargetProjectsResponse1$ {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsResponseTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound = Array<string> | string;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsResponseTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsResponseTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsResponseTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsResponseTarget>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound;
}
export declare function filterProjectEnvsResponseBodyProjectsResponseTargetToJSON(filterProjectEnvsResponseBodyProjectsResponseTarget: FilterProjectEnvsResponseBodyProjectsResponseTarget): string;
export declare function filterProjectEnvsResponseBodyProjectsResponseTargetFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyProjectsResponseTarget, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200Type>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsResponse200Type$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs15Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse15$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse15, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse15$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse15$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse15, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse15>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse15$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse15$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse15ToJSON(filterProjectEnvsContentHintProjectsResponse15: FilterProjectEnvsContentHintProjectsResponse15): string;
export declare function filterProjectEnvsContentHintProjectsResponse15FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse15, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse14$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse14, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse14$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse14$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse14, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse14>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse14$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse14ToJSON(filterProjectEnvsContentHintProjectsResponse14: FilterProjectEnvsContentHintProjectsResponse14): string;
export declare function filterProjectEnvsContentHintProjectsResponse14FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse14, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse13$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse13, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse13$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse13$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse13, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse13>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse13$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse13ToJSON(filterProjectEnvsContentHintProjectsResponse13: FilterProjectEnvsContentHintProjectsResponse13): string;
export declare function filterProjectEnvsContentHintProjectsResponse13FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse13, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse12$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse12, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse12$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse12$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse12, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse12>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse12$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse12ToJSON(filterProjectEnvsContentHintProjectsResponse12: FilterProjectEnvsContentHintProjectsResponse12): string;
export declare function filterProjectEnvsContentHintProjectsResponse12FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse12, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse11$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse11, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse11$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse11$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse11, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse11>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse11$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse11ToJSON(filterProjectEnvsContentHintProjectsResponse11: FilterProjectEnvsContentHintProjectsResponse11): string;
export declare function filterProjectEnvsContentHintProjectsResponse11FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse11, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse10$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse10, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse10$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse10$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse10, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse10>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse10$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse10ToJSON(filterProjectEnvsContentHintProjectsResponse10: FilterProjectEnvsContentHintProjectsResponse10): string;
export declare function filterProjectEnvsContentHintProjectsResponse10FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse10, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse9$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse9, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse9$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse9$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse9, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse9>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse9$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse9ToJSON(filterProjectEnvsContentHintProjectsResponse9: FilterProjectEnvsContentHintProjectsResponse9): string;
export declare function filterProjectEnvsContentHintProjectsResponse9FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse9, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse8$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse8, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse8$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse8$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse8, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse8>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse8$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse8ToJSON(filterProjectEnvsContentHintProjectsResponse8: FilterProjectEnvsContentHintProjectsResponse8): string;
export declare function filterProjectEnvsContentHintProjectsResponse8FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse8, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse7$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse7, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse7$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse7$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse7, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse7>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse7$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse7ToJSON(filterProjectEnvsContentHintProjectsResponse7: FilterProjectEnvsContentHintProjectsResponse7): string;
export declare function filterProjectEnvsContentHintProjectsResponse7FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse7, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse6$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse6, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse6$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse6$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse6, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse6>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse6$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse6ToJSON(filterProjectEnvsContentHintProjectsResponse6: FilterProjectEnvsContentHintProjectsResponse6): string;
export declare function filterProjectEnvsContentHintProjectsResponse6FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse6, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse5$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse5, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse5$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse5$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse5, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse5>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse5$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse5ToJSON(filterProjectEnvsContentHintProjectsResponse5: FilterProjectEnvsContentHintProjectsResponse5): string;
export declare function filterProjectEnvsContentHintProjectsResponse5FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse5, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse4$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse4, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse4$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse4$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse4, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse4>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse4$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse4ToJSON(filterProjectEnvsContentHintProjectsResponse4: FilterProjectEnvsContentHintProjectsResponse4): string;
export declare function filterProjectEnvsContentHintProjectsResponse4FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse4, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse3$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse3, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse3$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse3$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse3, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse3>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse3$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse3ToJSON(filterProjectEnvsContentHintProjectsResponse3: FilterProjectEnvsContentHintProjectsResponse3): string;
export declare function filterProjectEnvsContentHintProjectsResponse3FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse3, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse2$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse2, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse2$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse2$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse2, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse2>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse2$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse2ToJSON(filterProjectEnvsContentHintProjectsResponse2: FilterProjectEnvsContentHintProjectsResponse2): string;
export declare function filterProjectEnvsContentHintProjectsResponse2FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse2, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse1$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse1, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse1$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse1$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse1, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjectsResponse1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjectsResponse1>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjectsResponse1$Outbound;
}
export declare function filterProjectEnvsContentHintProjectsResponse1ToJSON(filterProjectEnvsContentHintProjectsResponse1: FilterProjectEnvsContentHintProjectsResponse1): string;
export declare function filterProjectEnvsContentHintProjectsResponse1FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjectsResponse1, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyProjectsContentHint$Outbound = FilterProjectEnvsContentHintProjectsResponse14$Outbound | FilterProjectEnvsContentHintProjectsResponse1$Outbound | FilterProjectEnvsContentHintProjectsResponse2$Outbound | FilterProjectEnvsContentHintProjectsResponse3$Outbound | FilterProjectEnvsContentHintProjectsResponse4$Outbound | FilterProjectEnvsContentHintProjectsResponse5$Outbound | FilterProjectEnvsContentHintProjectsResponse6$Outbound | FilterProjectEnvsContentHintProjectsResponse7$Outbound | FilterProjectEnvsContentHintProjectsResponse8$Outbound | FilterProjectEnvsContentHintProjectsResponse9$Outbound | FilterProjectEnvsContentHintProjectsResponse10$Outbound | FilterProjectEnvsContentHintProjectsResponse11$Outbound | FilterProjectEnvsContentHintProjectsResponse12$Outbound | FilterProjectEnvsContentHintProjectsResponse13$Outbound | FilterProjectEnvsContentHintProjectsResponse15$Outbound;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsContentHint>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyProjectsContentHint$Outbound;
}
export declare function filterProjectEnvsResponseBodyProjectsContentHintToJSON(filterProjectEnvsResponseBodyProjectsContentHint: FilterProjectEnvsResponseBodyProjectsContentHint): string;
export declare function filterProjectEnvsResponseBodyProjectsContentHintFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyProjectsContentHint, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsInternalContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsInternalContentHint>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound;
}
export declare function filterProjectEnvsResponseBodyProjectsInternalContentHintToJSON(filterProjectEnvsResponseBodyProjectsInternalContentHint: FilterProjectEnvsResponseBodyProjectsInternalContentHint): string;
export declare function filterProjectEnvsResponseBodyProjectsInternalContentHintFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyProjectsInternalContentHint, SDKValidationError>;
/** @internal */
export declare const ResponseBodyEnvs$inboundSchema: z.ZodType<ResponseBodyEnvs, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyEnvs$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHintProjectsResponse14$Outbound | FilterProjectEnvsContentHintProjectsResponse1$Outbound | FilterProjectEnvsContentHintProjectsResponse2$Outbound | FilterProjectEnvsContentHintProjectsResponse3$Outbound | FilterProjectEnvsContentHintProjectsResponse4$Outbound | FilterProjectEnvsContentHintProjectsResponse5$Outbound | FilterProjectEnvsContentHintProjectsResponse6$Outbound | FilterProjectEnvsContentHintProjectsResponse7$Outbound | FilterProjectEnvsContentHintProjectsResponse8$Outbound | FilterProjectEnvsContentHintProjectsResponse9$Outbound | FilterProjectEnvsContentHintProjectsResponse10$Outbound | FilterProjectEnvsContentHintProjectsResponse11$Outbound | FilterProjectEnvsContentHintProjectsResponse12$Outbound | FilterProjectEnvsContentHintProjectsResponse13$Outbound | FilterProjectEnvsContentHintProjectsResponse15$Outbound | null | undefined;
    internalContentHint?: FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/** @internal */
export declare const ResponseBodyEnvs$outboundSchema: z.ZodType<ResponseBodyEnvs$Outbound, z.ZodTypeDef, ResponseBodyEnvs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyEnvs$ {
    /** @deprecated use `ResponseBodyEnvs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyEnvs, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyEnvs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyEnvs$Outbound, z.ZodTypeDef, ResponseBodyEnvs>;
    /** @deprecated use `ResponseBodyEnvs$Outbound` instead. */
    type Outbound = ResponseBodyEnvs$Outbound;
}
export declare function responseBodyEnvsToJSON(responseBodyEnvs: ResponseBodyEnvs): string;
export declare function responseBodyEnvsFromJSON(jsonString: string): SafeParseResult<ResponseBodyEnvs, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBody3$inboundSchema: z.ZodType<FilterProjectEnvsResponseBody3, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBody3$Outbound = {
    envs: Array<ResponseBodyEnvs$Outbound>;
};
/** @internal */
export declare const FilterProjectEnvsResponseBody3$outboundSchema: z.ZodType<FilterProjectEnvsResponseBody3$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBody3$ {
    /** @deprecated use `FilterProjectEnvsResponseBody3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBody3, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBody3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBody3$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody3>;
    /** @deprecated use `FilterProjectEnvsResponseBody3$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBody3$Outbound;
}
export declare function filterProjectEnvsResponseBody3ToJSON(filterProjectEnvsResponseBody3: FilterProjectEnvsResponseBody3): string;
export declare function filterProjectEnvsResponseBody3FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBody3, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsTargetProjects2$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjects2>;
/** @internal */
export declare const FilterProjectEnvsTargetProjects2$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjects2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTargetProjects2$ {
    /** @deprecated use `FilterProjectEnvsTargetProjects2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTargetProjects2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsTargetProjects1$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjects1>;
/** @internal */
export declare const FilterProjectEnvsTargetProjects1$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTargetProjects1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTargetProjects1$ {
    /** @deprecated use `FilterProjectEnvsTargetProjects1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTargetProjects1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyProjectsTarget$Outbound = Array<string> | string;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyProjectsTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyProjectsTarget>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyProjectsTarget$Outbound;
}
export declare function filterProjectEnvsResponseBodyProjectsTargetToJSON(filterProjectEnvsResponseBodyProjectsTarget: FilterProjectEnvsResponseBodyProjectsTarget): string;
export declare function filterProjectEnvsResponseBodyProjectsTargetFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyProjectsTarget, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponseType>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponseType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsResponseType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs15Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects15$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects15, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects15$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects15$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects15, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects15>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects15$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects15$Outbound;
}
export declare function filterProjectEnvsContentHintProjects15ToJSON(filterProjectEnvsContentHintProjects15: FilterProjectEnvsContentHintProjects15): string;
export declare function filterProjectEnvsContentHintProjects15FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects15, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects14$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects14, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects14$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects14$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects14, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects14>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects14$Outbound;
}
export declare function filterProjectEnvsContentHintProjects14ToJSON(filterProjectEnvsContentHintProjects14: FilterProjectEnvsContentHintProjects14): string;
export declare function filterProjectEnvsContentHintProjects14FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects14, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects13$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects13, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects13$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects13$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects13, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects13>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects13$Outbound;
}
export declare function filterProjectEnvsContentHintProjects13ToJSON(filterProjectEnvsContentHintProjects13: FilterProjectEnvsContentHintProjects13): string;
export declare function filterProjectEnvsContentHintProjects13FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects13, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects12$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects12, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects12$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects12$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects12, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects12>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects12$Outbound;
}
export declare function filterProjectEnvsContentHintProjects12ToJSON(filterProjectEnvsContentHintProjects12: FilterProjectEnvsContentHintProjects12): string;
export declare function filterProjectEnvsContentHintProjects12FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects12, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects11$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects11, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects11$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects11$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects11, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects11>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects11$Outbound;
}
export declare function filterProjectEnvsContentHintProjects11ToJSON(filterProjectEnvsContentHintProjects11: FilterProjectEnvsContentHintProjects11): string;
export declare function filterProjectEnvsContentHintProjects11FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects11, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects10$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects10, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects10$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects10$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects10, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects10>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects10$Outbound;
}
export declare function filterProjectEnvsContentHintProjects10ToJSON(filterProjectEnvsContentHintProjects10: FilterProjectEnvsContentHintProjects10): string;
export declare function filterProjectEnvsContentHintProjects10FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects10, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects9$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects9, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects9$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects9$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects9, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects9>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects9$Outbound;
}
export declare function filterProjectEnvsContentHintProjects9ToJSON(filterProjectEnvsContentHintProjects9: FilterProjectEnvsContentHintProjects9): string;
export declare function filterProjectEnvsContentHintProjects9FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects9, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects8$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects8, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects8$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects8$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects8, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects8>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects8$Outbound;
}
export declare function filterProjectEnvsContentHintProjects8ToJSON(filterProjectEnvsContentHintProjects8: FilterProjectEnvsContentHintProjects8): string;
export declare function filterProjectEnvsContentHintProjects8FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects8, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects7$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects7, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects7$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects7$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects7, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects7>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects7$Outbound;
}
export declare function filterProjectEnvsContentHintProjects7ToJSON(filterProjectEnvsContentHintProjects7: FilterProjectEnvsContentHintProjects7): string;
export declare function filterProjectEnvsContentHintProjects7FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects7, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects6$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects6, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects6$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects6$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects6, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects6>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects6$Outbound;
}
export declare function filterProjectEnvsContentHintProjects6ToJSON(filterProjectEnvsContentHintProjects6: FilterProjectEnvsContentHintProjects6): string;
export declare function filterProjectEnvsContentHintProjects6FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects6, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects5$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects5, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects5$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects5$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects5, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects5>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects5$Outbound;
}
export declare function filterProjectEnvsContentHintProjects5ToJSON(filterProjectEnvsContentHintProjects5: FilterProjectEnvsContentHintProjects5): string;
export declare function filterProjectEnvsContentHintProjects5FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects5, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects4$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects4, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects4$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects4$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects4, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects4>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects4$Outbound;
}
export declare function filterProjectEnvsContentHintProjects4ToJSON(filterProjectEnvsContentHintProjects4: FilterProjectEnvsContentHintProjects4): string;
export declare function filterProjectEnvsContentHintProjects4FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects4, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects3$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects3, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects3$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects3$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects3, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects3>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects3$Outbound;
}
export declare function filterProjectEnvsContentHintProjects3ToJSON(filterProjectEnvsContentHintProjects3: FilterProjectEnvsContentHintProjects3): string;
export declare function filterProjectEnvsContentHintProjects3FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects3, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects2$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects2, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects2$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects2$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects2, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects2>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects2$Outbound;
}
export declare function filterProjectEnvsContentHintProjects2ToJSON(filterProjectEnvsContentHintProjects2: FilterProjectEnvsContentHintProjects2): string;
export declare function filterProjectEnvsContentHintProjects2FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects2, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjects1$inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects1, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHintProjects1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHintProjects1$outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjects1$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects1, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHintProjects1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHintProjects1>;
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHintProjects1$Outbound;
}
export declare function filterProjectEnvsContentHintProjects1ToJSON(filterProjectEnvsContentHintProjects1: FilterProjectEnvsContentHintProjects1): string;
export declare function filterProjectEnvsContentHintProjects1FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHintProjects1, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyContentHint$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyContentHint$Outbound = FilterProjectEnvsContentHintProjects14$Outbound | FilterProjectEnvsContentHintProjects1$Outbound | FilterProjectEnvsContentHintProjects2$Outbound | FilterProjectEnvsContentHintProjects3$Outbound | FilterProjectEnvsContentHintProjects4$Outbound | FilterProjectEnvsContentHintProjects5$Outbound | FilterProjectEnvsContentHintProjects6$Outbound | FilterProjectEnvsContentHintProjects7$Outbound | FilterProjectEnvsContentHintProjects8$Outbound | FilterProjectEnvsContentHintProjects9$Outbound | FilterProjectEnvsContentHintProjects10$Outbound | FilterProjectEnvsContentHintProjects11$Outbound | FilterProjectEnvsContentHintProjects12$Outbound | FilterProjectEnvsContentHintProjects13$Outbound | FilterProjectEnvsContentHintProjects15$Outbound;
/** @internal */
export declare const FilterProjectEnvsResponseBodyContentHint$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyContentHint>;
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyContentHint$Outbound;
}
export declare function filterProjectEnvsResponseBodyContentHintToJSON(filterProjectEnvsResponseBodyContentHint: FilterProjectEnvsResponseBodyContentHint): string;
export declare function filterProjectEnvsResponseBodyContentHintFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyContentHint, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyInternalContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyInternalContentHint>;
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyInternalContentHint$Outbound;
}
export declare function filterProjectEnvsResponseBodyInternalContentHintToJSON(filterProjectEnvsResponseBodyInternalContentHint: FilterProjectEnvsResponseBodyInternalContentHint): string;
export declare function filterProjectEnvsResponseBodyInternalContentHintFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyInternalContentHint, SDKValidationError>;
/** @internal */
export declare const Envs$inboundSchema: z.ZodType<Envs, z.ZodTypeDef, unknown>;
/** @internal */
export type Envs$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHintProjects14$Outbound | FilterProjectEnvsContentHintProjects1$Outbound | FilterProjectEnvsContentHintProjects2$Outbound | FilterProjectEnvsContentHintProjects3$Outbound | FilterProjectEnvsContentHintProjects4$Outbound | FilterProjectEnvsContentHintProjects5$Outbound | FilterProjectEnvsContentHintProjects6$Outbound | FilterProjectEnvsContentHintProjects7$Outbound | FilterProjectEnvsContentHintProjects8$Outbound | FilterProjectEnvsContentHintProjects9$Outbound | FilterProjectEnvsContentHintProjects10$Outbound | FilterProjectEnvsContentHintProjects11$Outbound | FilterProjectEnvsContentHintProjects12$Outbound | FilterProjectEnvsContentHintProjects13$Outbound | FilterProjectEnvsContentHintProjects15$Outbound | null | undefined;
    internalContentHint?: FilterProjectEnvsResponseBodyInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/** @internal */
export declare const Envs$outboundSchema: z.ZodType<Envs$Outbound, z.ZodTypeDef, Envs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Envs$ {
    /** @deprecated use `Envs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Envs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Envs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Envs$Outbound, z.ZodTypeDef, Envs>;
    /** @deprecated use `Envs$Outbound` instead. */
    type Outbound = Envs$Outbound;
}
export declare function envsToJSON(envs: Envs): string;
export declare function envsFromJSON(jsonString: string): SafeParseResult<Envs, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBody2$inboundSchema: z.ZodType<FilterProjectEnvsResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBody2$Outbound = {
    envs: Array<Envs$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const FilterProjectEnvsResponseBody2$outboundSchema: z.ZodType<FilterProjectEnvsResponseBody2$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBody2$ {
    /** @deprecated use `FilterProjectEnvsResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBody2$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody2>;
    /** @deprecated use `FilterProjectEnvsResponseBody2$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBody2$Outbound;
}
export declare function filterProjectEnvsResponseBody2ToJSON(filterProjectEnvsResponseBody2: FilterProjectEnvsResponseBody2): string;
export declare function filterProjectEnvsResponseBody2FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBody2, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsTarget2$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTarget2>;
/** @internal */
export declare const FilterProjectEnvsTarget2$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTarget2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTarget2$ {
    /** @deprecated use `FilterProjectEnvsTarget2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTarget2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsTarget1$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTarget1>;
/** @internal */
export declare const FilterProjectEnvsTarget1$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsTarget1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsTarget1$ {
    /** @deprecated use `FilterProjectEnvsTarget1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `FilterProjectEnvsTarget1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsResponseBodyTarget$inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBodyTarget$Outbound = Array<string> | string;
/** @internal */
export declare const FilterProjectEnvsResponseBodyTarget$outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBodyTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBodyTarget$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBodyTarget>;
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBodyTarget$Outbound;
}
export declare function filterProjectEnvsResponseBodyTargetToJSON(filterProjectEnvsResponseBodyTarget: FilterProjectEnvsResponseBodyTarget): string;
export declare function filterProjectEnvsResponseBodyTargetFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBodyTarget, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyType>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint15$inboundSchema: z.ZodType<FilterProjectEnvsContentHint15, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint15$outboundSchema: z.ZodType<FilterProjectEnvsContentHint15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint15$ {
    /** @deprecated use `FilterProjectEnvsContentHint15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint15, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint15$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint15>;
    /** @deprecated use `FilterProjectEnvsContentHint15$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint15$Outbound;
}
export declare function filterProjectEnvsContentHint15ToJSON(filterProjectEnvsContentHint15: FilterProjectEnvsContentHint15): string;
export declare function filterProjectEnvsContentHint15FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint15, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint14$inboundSchema: z.ZodType<FilterProjectEnvsContentHint14, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint14$outboundSchema: z.ZodType<FilterProjectEnvsContentHint14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint14$ {
    /** @deprecated use `FilterProjectEnvsContentHint14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint14, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint14$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint14>;
    /** @deprecated use `FilterProjectEnvsContentHint14$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint14$Outbound;
}
export declare function filterProjectEnvsContentHint14ToJSON(filterProjectEnvsContentHint14: FilterProjectEnvsContentHint14): string;
export declare function filterProjectEnvsContentHint14FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint14, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint13$inboundSchema: z.ZodType<FilterProjectEnvsContentHint13, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint13$outboundSchema: z.ZodType<FilterProjectEnvsContentHint13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint13$ {
    /** @deprecated use `FilterProjectEnvsContentHint13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint13, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint13$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint13>;
    /** @deprecated use `FilterProjectEnvsContentHint13$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint13$Outbound;
}
export declare function filterProjectEnvsContentHint13ToJSON(filterProjectEnvsContentHint13: FilterProjectEnvsContentHint13): string;
export declare function filterProjectEnvsContentHint13FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint13, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint12$inboundSchema: z.ZodType<FilterProjectEnvsContentHint12, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint12$outboundSchema: z.ZodType<FilterProjectEnvsContentHint12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint12$ {
    /** @deprecated use `FilterProjectEnvsContentHint12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint12, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint12$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint12>;
    /** @deprecated use `FilterProjectEnvsContentHint12$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint12$Outbound;
}
export declare function filterProjectEnvsContentHint12ToJSON(filterProjectEnvsContentHint12: FilterProjectEnvsContentHint12): string;
export declare function filterProjectEnvsContentHint12FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint12, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint11$inboundSchema: z.ZodType<FilterProjectEnvsContentHint11, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint11$outboundSchema: z.ZodType<FilterProjectEnvsContentHint11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint11$ {
    /** @deprecated use `FilterProjectEnvsContentHint11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint11, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint11$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint11>;
    /** @deprecated use `FilterProjectEnvsContentHint11$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint11$Outbound;
}
export declare function filterProjectEnvsContentHint11ToJSON(filterProjectEnvsContentHint11: FilterProjectEnvsContentHint11): string;
export declare function filterProjectEnvsContentHint11FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint11, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint10$inboundSchema: z.ZodType<FilterProjectEnvsContentHint10, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint10$outboundSchema: z.ZodType<FilterProjectEnvsContentHint10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint10$ {
    /** @deprecated use `FilterProjectEnvsContentHint10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint10, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint10$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint10>;
    /** @deprecated use `FilterProjectEnvsContentHint10$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint10$Outbound;
}
export declare function filterProjectEnvsContentHint10ToJSON(filterProjectEnvsContentHint10: FilterProjectEnvsContentHint10): string;
export declare function filterProjectEnvsContentHint10FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint10, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint9$inboundSchema: z.ZodType<FilterProjectEnvsContentHint9, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint9$outboundSchema: z.ZodType<FilterProjectEnvsContentHint9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint9$ {
    /** @deprecated use `FilterProjectEnvsContentHint9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint9, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint9$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint9>;
    /** @deprecated use `FilterProjectEnvsContentHint9$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint9$Outbound;
}
export declare function filterProjectEnvsContentHint9ToJSON(filterProjectEnvsContentHint9: FilterProjectEnvsContentHint9): string;
export declare function filterProjectEnvsContentHint9FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint9, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint8$inboundSchema: z.ZodType<FilterProjectEnvsContentHint8, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint8$outboundSchema: z.ZodType<FilterProjectEnvsContentHint8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint8$ {
    /** @deprecated use `FilterProjectEnvsContentHint8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint8, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint8$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint8>;
    /** @deprecated use `FilterProjectEnvsContentHint8$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint8$Outbound;
}
export declare function filterProjectEnvsContentHint8ToJSON(filterProjectEnvsContentHint8: FilterProjectEnvsContentHint8): string;
export declare function filterProjectEnvsContentHint8FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint8, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint7$inboundSchema: z.ZodType<FilterProjectEnvsContentHint7, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint7$outboundSchema: z.ZodType<FilterProjectEnvsContentHint7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint7$ {
    /** @deprecated use `FilterProjectEnvsContentHint7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint7, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint7$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint7>;
    /** @deprecated use `FilterProjectEnvsContentHint7$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint7$Outbound;
}
export declare function filterProjectEnvsContentHint7ToJSON(filterProjectEnvsContentHint7: FilterProjectEnvsContentHint7): string;
export declare function filterProjectEnvsContentHint7FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint7, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint6$inboundSchema: z.ZodType<FilterProjectEnvsContentHint6, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint6$outboundSchema: z.ZodType<FilterProjectEnvsContentHint6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint6$ {
    /** @deprecated use `FilterProjectEnvsContentHint6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint6, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint6$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint6>;
    /** @deprecated use `FilterProjectEnvsContentHint6$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint6$Outbound;
}
export declare function filterProjectEnvsContentHint6ToJSON(filterProjectEnvsContentHint6: FilterProjectEnvsContentHint6): string;
export declare function filterProjectEnvsContentHint6FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint6, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint5$inboundSchema: z.ZodType<FilterProjectEnvsContentHint5, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint5$outboundSchema: z.ZodType<FilterProjectEnvsContentHint5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint5$ {
    /** @deprecated use `FilterProjectEnvsContentHint5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint5, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint5$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint5>;
    /** @deprecated use `FilterProjectEnvsContentHint5$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint5$Outbound;
}
export declare function filterProjectEnvsContentHint5ToJSON(filterProjectEnvsContentHint5: FilterProjectEnvsContentHint5): string;
export declare function filterProjectEnvsContentHint5FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint5, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200Type>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponse200Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponse200Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint4$inboundSchema: z.ZodType<FilterProjectEnvsContentHint4, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint4$outboundSchema: z.ZodType<FilterProjectEnvsContentHint4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint4$ {
    /** @deprecated use `FilterProjectEnvsContentHint4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint4, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint4$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint4>;
    /** @deprecated use `FilterProjectEnvsContentHint4$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint4$Outbound;
}
export declare function filterProjectEnvsContentHint4ToJSON(filterProjectEnvsContentHint4: FilterProjectEnvsContentHint4): string;
export declare function filterProjectEnvsContentHint4FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint4, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponseType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponseType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsResponseType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsResponseType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsResponseType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint3$inboundSchema: z.ZodType<FilterProjectEnvsContentHint3, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint3$outboundSchema: z.ZodType<FilterProjectEnvsContentHint3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint3$ {
    /** @deprecated use `FilterProjectEnvsContentHint3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint3, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint3$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint3>;
    /** @deprecated use `FilterProjectEnvsContentHint3$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint3$Outbound;
}
export declare function filterProjectEnvsContentHint3ToJSON(filterProjectEnvsContentHint3: FilterProjectEnvsContentHint3): string;
export declare function filterProjectEnvsContentHint3FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint3, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsType>;
/** @internal */
export declare const FilterProjectEnvsContentHintProjectsType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintProjectsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint2$inboundSchema: z.ZodType<FilterProjectEnvsContentHint2, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint2$outboundSchema: z.ZodType<FilterProjectEnvsContentHint2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint2$ {
    /** @deprecated use `FilterProjectEnvsContentHint2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint2, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint2$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint2>;
    /** @deprecated use `FilterProjectEnvsContentHint2$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint2$Outbound;
}
export declare function filterProjectEnvsContentHint2ToJSON(filterProjectEnvsContentHint2: FilterProjectEnvsContentHint2): string;
export declare function filterProjectEnvsContentHint2FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint2, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsContentHintType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintType>;
/** @internal */
export declare const FilterProjectEnvsContentHintType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsContentHintType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHintType$ {
    /** @deprecated use `FilterProjectEnvsContentHintType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `FilterProjectEnvsContentHintType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const FilterProjectEnvsContentHint1$inboundSchema: z.ZodType<FilterProjectEnvsContentHint1, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsContentHint1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const FilterProjectEnvsContentHint1$outboundSchema: z.ZodType<FilterProjectEnvsContentHint1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsContentHint1$ {
    /** @deprecated use `FilterProjectEnvsContentHint1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsContentHint1, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsContentHint1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsContentHint1$Outbound, z.ZodTypeDef, FilterProjectEnvsContentHint1>;
    /** @deprecated use `FilterProjectEnvsContentHint1$Outbound` instead. */
    type Outbound = FilterProjectEnvsContentHint1$Outbound;
}
export declare function filterProjectEnvsContentHint1ToJSON(filterProjectEnvsContentHint1: FilterProjectEnvsContentHint1): string;
export declare function filterProjectEnvsContentHint1FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsContentHint1, SDKValidationError>;
/** @internal */
export declare const ResponseBodyContentHint$inboundSchema: z.ZodType<ResponseBodyContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyContentHint$Outbound = FilterProjectEnvsContentHint14$Outbound | FilterProjectEnvsContentHint1$Outbound | FilterProjectEnvsContentHint2$Outbound | FilterProjectEnvsContentHint3$Outbound | FilterProjectEnvsContentHint4$Outbound | FilterProjectEnvsContentHint5$Outbound | FilterProjectEnvsContentHint6$Outbound | FilterProjectEnvsContentHint7$Outbound | FilterProjectEnvsContentHint8$Outbound | FilterProjectEnvsContentHint9$Outbound | FilterProjectEnvsContentHint10$Outbound | FilterProjectEnvsContentHint11$Outbound | FilterProjectEnvsContentHint12$Outbound | FilterProjectEnvsContentHint13$Outbound | FilterProjectEnvsContentHint15$Outbound;
/** @internal */
export declare const ResponseBodyContentHint$outboundSchema: z.ZodType<ResponseBodyContentHint$Outbound, z.ZodTypeDef, ResponseBodyContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyContentHint$ {
    /** @deprecated use `ResponseBodyContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyContentHint$Outbound, z.ZodTypeDef, ResponseBodyContentHint>;
    /** @deprecated use `ResponseBodyContentHint$Outbound` instead. */
    type Outbound = ResponseBodyContentHint$Outbound;
}
export declare function responseBodyContentHintToJSON(responseBodyContentHint: ResponseBodyContentHint): string;
export declare function responseBodyContentHintFromJSON(jsonString: string): SafeParseResult<ResponseBodyContentHint, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsType$inboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsType>;
/** @internal */
export declare const FilterProjectEnvsResponseBodyProjectsType$outboundSchema: z.ZodNativeEnum<typeof FilterProjectEnvsResponseBodyProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBodyProjectsType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const ResponseBodyInternalContentHint$inboundSchema: z.ZodType<ResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const ResponseBodyInternalContentHint$outboundSchema: z.ZodType<ResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, ResponseBodyInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyInternalContentHint$ {
    /** @deprecated use `ResponseBodyInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, ResponseBodyInternalContentHint>;
    /** @deprecated use `ResponseBodyInternalContentHint$Outbound` instead. */
    type Outbound = ResponseBodyInternalContentHint$Outbound;
}
export declare function responseBodyInternalContentHintToJSON(responseBodyInternalContentHint: ResponseBodyInternalContentHint): string;
export declare function responseBodyInternalContentHintFromJSON(jsonString: string): SafeParseResult<ResponseBodyInternalContentHint, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBody1$inboundSchema: z.ZodType<FilterProjectEnvsResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBody1$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: FilterProjectEnvsContentHint14$Outbound | FilterProjectEnvsContentHint1$Outbound | FilterProjectEnvsContentHint2$Outbound | FilterProjectEnvsContentHint3$Outbound | FilterProjectEnvsContentHint4$Outbound | FilterProjectEnvsContentHint5$Outbound | FilterProjectEnvsContentHint6$Outbound | FilterProjectEnvsContentHint7$Outbound | FilterProjectEnvsContentHint8$Outbound | FilterProjectEnvsContentHint9$Outbound | FilterProjectEnvsContentHint10$Outbound | FilterProjectEnvsContentHint11$Outbound | FilterProjectEnvsContentHint12$Outbound | FilterProjectEnvsContentHint13$Outbound | FilterProjectEnvsContentHint15$Outbound | null | undefined;
    internalContentHint?: ResponseBodyInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/** @internal */
export declare const FilterProjectEnvsResponseBody1$outboundSchema: z.ZodType<FilterProjectEnvsResponseBody1$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBody1$ {
    /** @deprecated use `FilterProjectEnvsResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBody1$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody1>;
    /** @deprecated use `FilterProjectEnvsResponseBody1$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBody1$Outbound;
}
export declare function filterProjectEnvsResponseBody1ToJSON(filterProjectEnvsResponseBody1: FilterProjectEnvsResponseBody1): string;
export declare function filterProjectEnvsResponseBody1FromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBody1, SDKValidationError>;
/** @internal */
export declare const FilterProjectEnvsResponseBody$inboundSchema: z.ZodType<FilterProjectEnvsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type FilterProjectEnvsResponseBody$Outbound = FilterProjectEnvsResponseBody1$Outbound | FilterProjectEnvsResponseBody2$Outbound | FilterProjectEnvsResponseBody3$Outbound;
/** @internal */
export declare const FilterProjectEnvsResponseBody$outboundSchema: z.ZodType<FilterProjectEnvsResponseBody$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FilterProjectEnvsResponseBody$ {
    /** @deprecated use `FilterProjectEnvsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FilterProjectEnvsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `FilterProjectEnvsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FilterProjectEnvsResponseBody$Outbound, z.ZodTypeDef, FilterProjectEnvsResponseBody>;
    /** @deprecated use `FilterProjectEnvsResponseBody$Outbound` instead. */
    type Outbound = FilterProjectEnvsResponseBody$Outbound;
}
export declare function filterProjectEnvsResponseBodyToJSON(filterProjectEnvsResponseBody: FilterProjectEnvsResponseBody): string;
export declare function filterProjectEnvsResponseBodyFromJSON(jsonString: string): SafeParseResult<FilterProjectEnvsResponseBody, SDKValidationError>;
//# sourceMappingURL=filterprojectenvsop.d.ts.map