import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest = {
    integrationIdOrSlug: string;
    productIdOrSlug: string;
    metadata?: string | undefined;
};
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType: {
    readonly Prepayment: "prepayment";
    readonly Subscription: "subscription";
};
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType = ClosedEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType>;
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope: {
    readonly Installation: "installation";
    readonly Resource: "resource";
};
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope = ClosedEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope>;
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails = {
    label: string;
    value?: string | undefined;
};
export type HighlightedDetails = {
    label: string;
    value?: string | undefined;
};
export type Quote = {
    line: string;
    amount: string;
};
export type Plans = {
    type: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType;
    id: string;
    name: string;
    scope: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope;
    description: string;
    paymentMethodRequired: boolean;
    preauthorizationAmount?: number | undefined;
    initialCharge?: string | undefined;
    minimumAmount?: string | undefined;
    maximumAmount?: string | undefined;
    maximumAmountAutoPurchasePerPeriod?: string | undefined;
    cost?: string | undefined;
    details?: Array<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails> | undefined;
    highlightedDetails?: Array<HighlightedDetails> | undefined;
    quote?: Array<Quote> | undefined;
    effectiveDate?: string | undefined;
    disabled?: boolean | undefined;
};
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody = {
    plans: Array<Plans>;
};
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$Outbound = {
    integrationIdOrSlug: string;
    productIdOrSlug: string;
    metadata?: string | undefined;
};
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$ {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$Outbound` instead. */
    type Outbound = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest$Outbound;
}
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequestToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest): string;
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequestFromJSON(jsonString: string): SafeParseResult<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansRequest, SDKValidationError>;
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema: z.ZodNativeEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType>;
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema: z.ZodNativeEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$ {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Prepayment: "prepayment";
        readonly Subscription: "subscription";
    }>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Prepayment: "prepayment";
        readonly Subscription: "subscription";
    }>;
}
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema: z.ZodNativeEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope>;
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema: z.ZodNativeEnum<typeof GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$ {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Installation: "installation";
        readonly Resource: "resource";
    }>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansScope$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Installation: "installation";
        readonly Resource: "resource";
    }>;
}
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound = {
    label: string;
    value?: string | undefined;
};
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$ {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound` instead. */
    type Outbound = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound;
}
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetailsToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails): string;
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetailsFromJSON(jsonString: string): SafeParseResult<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails, SDKValidationError>;
/** @internal */
export declare const HighlightedDetails$inboundSchema: z.ZodType<HighlightedDetails, z.ZodTypeDef, unknown>;
/** @internal */
export type HighlightedDetails$Outbound = {
    label: string;
    value?: string | undefined;
};
/** @internal */
export declare const HighlightedDetails$outboundSchema: z.ZodType<HighlightedDetails$Outbound, z.ZodTypeDef, HighlightedDetails>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace HighlightedDetails$ {
    /** @deprecated use `HighlightedDetails$inboundSchema` instead. */
    const inboundSchema: z.ZodType<HighlightedDetails, z.ZodTypeDef, unknown>;
    /** @deprecated use `HighlightedDetails$outboundSchema` instead. */
    const outboundSchema: z.ZodType<HighlightedDetails$Outbound, z.ZodTypeDef, HighlightedDetails>;
    /** @deprecated use `HighlightedDetails$Outbound` instead. */
    type Outbound = HighlightedDetails$Outbound;
}
export declare function highlightedDetailsToJSON(highlightedDetails: HighlightedDetails): string;
export declare function highlightedDetailsFromJSON(jsonString: string): SafeParseResult<HighlightedDetails, SDKValidationError>;
/** @internal */
export declare const Quote$inboundSchema: z.ZodType<Quote, z.ZodTypeDef, unknown>;
/** @internal */
export type Quote$Outbound = {
    line: string;
    amount: string;
};
/** @internal */
export declare const Quote$outboundSchema: z.ZodType<Quote$Outbound, z.ZodTypeDef, Quote>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Quote$ {
    /** @deprecated use `Quote$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Quote, z.ZodTypeDef, unknown>;
    /** @deprecated use `Quote$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Quote$Outbound, z.ZodTypeDef, Quote>;
    /** @deprecated use `Quote$Outbound` instead. */
    type Outbound = Quote$Outbound;
}
export declare function quoteToJSON(quote: Quote): string;
export declare function quoteFromJSON(jsonString: string): SafeParseResult<Quote, SDKValidationError>;
/** @internal */
export declare const Plans$inboundSchema: z.ZodType<Plans, z.ZodTypeDef, unknown>;
/** @internal */
export type Plans$Outbound = {
    type: string;
    id: string;
    name: string;
    scope: string;
    description: string;
    paymentMethodRequired: boolean;
    preauthorizationAmount?: number | undefined;
    initialCharge?: string | undefined;
    minimumAmount?: string | undefined;
    maximumAmount?: string | undefined;
    maximumAmountAutoPurchasePerPeriod?: string | undefined;
    cost?: string | undefined;
    details?: Array<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansDetails$Outbound> | undefined;
    highlightedDetails?: Array<HighlightedDetails$Outbound> | undefined;
    quote?: Array<Quote$Outbound> | undefined;
    effectiveDate?: string | undefined;
    disabled?: boolean | undefined;
};
/** @internal */
export declare const Plans$outboundSchema: z.ZodType<Plans$Outbound, z.ZodTypeDef, Plans>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Plans$ {
    /** @deprecated use `Plans$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Plans, z.ZodTypeDef, unknown>;
    /** @deprecated use `Plans$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Plans$Outbound, z.ZodTypeDef, Plans>;
    /** @deprecated use `Plans$Outbound` instead. */
    type Outbound = Plans$Outbound;
}
export declare function plansToJSON(plans: Plans): string;
export declare function plansFromJSON(jsonString: string): SafeParseResult<Plans, SDKValidationError>;
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$Outbound = {
    plans: Array<Plans$Outbound>;
};
/** @internal */
export declare const GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$ {
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$Outbound, z.ZodTypeDef, GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody>;
    /** @deprecated use `GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$Outbound` instead. */
    type Outbound = GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody$Outbound;
}
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBodyToJSON(getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody: GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody): string;
export declare function getV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBodyFromJSON(jsonString: string): SafeParseResult<GetV1IntegrationsIntegrationIntegrationIdOrSlugProductsProductIdOrSlugPlansResponseBody, SDKValidationError>;
//# sourceMappingURL=getv1integrationsintegrationintegrationidorslugproductsproductidorslugplansop.d.ts.map