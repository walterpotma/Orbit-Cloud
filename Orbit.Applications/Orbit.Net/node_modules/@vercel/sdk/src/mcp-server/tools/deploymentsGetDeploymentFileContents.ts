/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deploymentsGetDeploymentFileContents } from "../../funcs/deploymentsGetDeploymentFileContents.js";
import { GetDeploymentFileContentsRequest$inboundSchema } from "../../models/getdeploymentfilecontentsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetDeploymentFileContentsRequest$inboundSchema,
};

export const tool$deploymentsGetDeploymentFileContents: ToolDefinition<
  typeof args
> = {
  name: "deployments-get-deployment-file-contents",
  description: `Get Deployment File Contents

Allows to retrieve the content of a file by supplying the file identifier and the deployment unique identifier. The response body will contain a JSON response containing the contents of the file encoded as base64.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await deploymentsGetDeploymentFileContents(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
