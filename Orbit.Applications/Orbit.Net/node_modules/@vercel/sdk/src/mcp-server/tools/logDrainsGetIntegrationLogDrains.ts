/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { logDrainsGetIntegrationLogDrains } from "../../funcs/logDrainsGetIntegrationLogDrains.js";
import { GetIntegrationLogDrainsRequest$inboundSchema } from "../../models/getintegrationlogdrainsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetIntegrationLogDrainsRequest$inboundSchema,
};

export const tool$logDrainsGetIntegrationLogDrains: ToolDefinition<
  typeof args
> = {
  name: "log-drains-get-integration-log-drains",
  description: `Retrieves a list of Integration log drains

Retrieves a list of all Integration log drains that are defined for the authenticated user or team. When using an OAuth2 token, the list is limited to log drains created by the authenticated integration.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await logDrainsGetIntegrationLogDrains(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
