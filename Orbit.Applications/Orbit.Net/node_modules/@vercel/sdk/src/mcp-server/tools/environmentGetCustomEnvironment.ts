/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentGetCustomEnvironment } from "../../funcs/environmentGetCustomEnvironment.js";
import { GetCustomEnvironmentRequest$inboundSchema } from "../../models/getcustomenvironmentop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetCustomEnvironmentRequest$inboundSchema,
};

export const tool$environmentGetCustomEnvironment: ToolDefinition<typeof args> =
  {
    name: "environment-get-custom-environment",
    description: `Retrieve a custom environment

Retrieve a custom environment for the project. Must not be named 'Production' or 'Preview'.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await environmentGetCustomEnvironment(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
