/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetProjectEnvRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * The unique ID for the environment variable to get the decrypted value.
   */
  id: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

export const GetProjectEnvTargetProjectsResponse2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetProjectsResponse2 = ClosedEnum<
  typeof GetProjectEnvTargetProjectsResponse2
>;

export type GetProjectEnvResponseBodyProjectsResponseTarget =
  | Array<string>
  | GetProjectEnvTargetProjectsResponse2;

export const GetProjectEnvResponseBodyProjectsResponseType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyProjectsResponseType = ClosedEnum<
  typeof GetProjectEnvResponseBodyProjectsResponseType
>;

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type =
  {
    FlagsConnectionString: "flags-connection-string",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type
  >;

export type GetProjectEnvContentHintProjectsResponse15 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type;
  projectId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type
  >;

export type GetProjectEnvContentHintProjectsResponse14 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type
  >;

export type GetProjectEnvContentHintProjectsResponse13 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type
  >;

export type GetProjectEnvContentHintProjectsResponse12 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type
  >;

export type GetProjectEnvContentHintProjectsResponse11 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type
  >;

export type GetProjectEnvContentHintProjectsResponse10 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type
  >;

export type GetProjectEnvContentHintProjectsResponse9 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type
  >;

export type GetProjectEnvContentHintProjectsResponse8 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type
  >;

export type GetProjectEnvContentHintProjectsResponse7 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type
  >;

export type GetProjectEnvContentHintProjectsResponse6 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type
  >;

export type GetProjectEnvContentHintProjectsResponse5 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type
  >;

export type GetProjectEnvContentHintProjectsResponse4 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type
  >;

export type GetProjectEnvContentHintProjectsResponse3 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type
  >;

export type GetProjectEnvContentHintProjectsResponse2 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type
  >;

export type GetProjectEnvContentHintProjectsResponse1 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type;
  storeId: string;
};

export type GetProjectEnvResponseBodyProjectsResponseContentHint =
  | GetProjectEnvContentHintProjectsResponse14
  | GetProjectEnvContentHintProjectsResponse1
  | GetProjectEnvContentHintProjectsResponse2
  | GetProjectEnvContentHintProjectsResponse3
  | GetProjectEnvContentHintProjectsResponse4
  | GetProjectEnvContentHintProjectsResponse5
  | GetProjectEnvContentHintProjectsResponse6
  | GetProjectEnvContentHintProjectsResponse7
  | GetProjectEnvContentHintProjectsResponse8
  | GetProjectEnvContentHintProjectsResponse9
  | GetProjectEnvContentHintProjectsResponse10
  | GetProjectEnvContentHintProjectsResponse11
  | GetProjectEnvContentHintProjectsResponse12
  | GetProjectEnvContentHintProjectsResponse13
  | GetProjectEnvContentHintProjectsResponse15;

export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type =
  {
    FlagsSecret: "flags-secret",
  } as const;
export type GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type =
  ClosedEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyProjectsResponseInternalContentHint = {
  type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody3 = {
  target?: Array<string> | GetProjectEnvTargetProjectsResponse2 | undefined;
  type: GetProjectEnvResponseBodyProjectsResponseType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  decrypted?: boolean | undefined;
  value: string;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintProjectsResponse14
    | GetProjectEnvContentHintProjectsResponse1
    | GetProjectEnvContentHintProjectsResponse2
    | GetProjectEnvContentHintProjectsResponse3
    | GetProjectEnvContentHintProjectsResponse4
    | GetProjectEnvContentHintProjectsResponse5
    | GetProjectEnvContentHintProjectsResponse6
    | GetProjectEnvContentHintProjectsResponse7
    | GetProjectEnvContentHintProjectsResponse8
    | GetProjectEnvContentHintProjectsResponse9
    | GetProjectEnvContentHintProjectsResponse10
    | GetProjectEnvContentHintProjectsResponse11
    | GetProjectEnvContentHintProjectsResponse12
    | GetProjectEnvContentHintProjectsResponse13
    | GetProjectEnvContentHintProjectsResponse15
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyProjectsResponseInternalContentHint
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

export const GetProjectEnvTargetProjects2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetProjects2 = ClosedEnum<
  typeof GetProjectEnvTargetProjects2
>;

export const GetProjectEnvTargetProjects1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetProjects1 = ClosedEnum<
  typeof GetProjectEnvTargetProjects1
>;

export type GetProjectEnvResponseBodyProjectsTarget =
  | Array<GetProjectEnvTargetProjects1>
  | GetProjectEnvTargetProjects2;

export const GetProjectEnvResponseBodyProjectsType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyProjectsType = ClosedEnum<
  typeof GetProjectEnvResponseBodyProjectsType
>;

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type =
  {
    FlagsConnectionString: "flags-connection-string",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type
  >;

export type GetProjectEnvContentHintProjects15 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type;
  projectId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type
  >;

export type GetProjectEnvContentHintProjects14 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type
  >;

export type GetProjectEnvContentHintProjects13 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type
  >;

export type GetProjectEnvContentHintProjects12 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type
  >;

export type GetProjectEnvContentHintProjects11 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type
  >;

export type GetProjectEnvContentHintProjects10 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type
  >;

export type GetProjectEnvContentHintProjects9 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type
  >;

export type GetProjectEnvContentHintProjects8 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type
  >;

export type GetProjectEnvContentHintProjects7 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type
  >;

export type GetProjectEnvContentHintProjects6 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type
  >;

export type GetProjectEnvContentHintProjects5 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type
  >;

export type GetProjectEnvContentHintProjects4 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type
  >;

export type GetProjectEnvContentHintProjects3 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type
  >;

export type GetProjectEnvContentHintProjects2 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type
  >;

export type GetProjectEnvContentHintProjects1 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type;
  storeId: string;
};

export type GetProjectEnvResponseBodyProjectsContentHint =
  | GetProjectEnvContentHintProjects14
  | GetProjectEnvContentHintProjects1
  | GetProjectEnvContentHintProjects2
  | GetProjectEnvContentHintProjects3
  | GetProjectEnvContentHintProjects4
  | GetProjectEnvContentHintProjects5
  | GetProjectEnvContentHintProjects6
  | GetProjectEnvContentHintProjects7
  | GetProjectEnvContentHintProjects8
  | GetProjectEnvContentHintProjects9
  | GetProjectEnvContentHintProjects10
  | GetProjectEnvContentHintProjects11
  | GetProjectEnvContentHintProjects12
  | GetProjectEnvContentHintProjects13
  | GetProjectEnvContentHintProjects15;

export const GetProjectEnvResponseBodyProjectsResponse200Type = {
  FlagsSecret: "flags-secret",
} as const;
export type GetProjectEnvResponseBodyProjectsResponse200Type = ClosedEnum<
  typeof GetProjectEnvResponseBodyProjectsResponse200Type
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyProjectsInternalContentHint = {
  type: GetProjectEnvResponseBodyProjectsResponse200Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody2 = {
  target?:
    | Array<GetProjectEnvTargetProjects1>
    | GetProjectEnvTargetProjects2
    | undefined;
  type: GetProjectEnvResponseBodyProjectsType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  decrypted?: boolean | undefined;
  value: string;
  vsmValue?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintProjects14
    | GetProjectEnvContentHintProjects1
    | GetProjectEnvContentHintProjects2
    | GetProjectEnvContentHintProjects3
    | GetProjectEnvContentHintProjects4
    | GetProjectEnvContentHintProjects5
    | GetProjectEnvContentHintProjects6
    | GetProjectEnvContentHintProjects7
    | GetProjectEnvContentHintProjects8
    | GetProjectEnvContentHintProjects9
    | GetProjectEnvContentHintProjects10
    | GetProjectEnvContentHintProjects11
    | GetProjectEnvContentHintProjects12
    | GetProjectEnvContentHintProjects13
    | GetProjectEnvContentHintProjects15
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyProjectsInternalContentHint
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

export const GetProjectEnvTarget2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTarget2 = ClosedEnum<typeof GetProjectEnvTarget2>;

export const GetProjectEnvTarget1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTarget1 = ClosedEnum<typeof GetProjectEnvTarget1>;

export type GetProjectEnvResponseBodyTarget =
  | Array<GetProjectEnvTarget1>
  | GetProjectEnvTarget2;

export const GetProjectEnvResponseBodyType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyType = ClosedEnum<
  typeof GetProjectEnvResponseBodyType
>;

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type =
  {
    FlagsConnectionString: "flags-connection-string",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type
  >;

export type GetProjectEnvContentHint15 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type;
  projectId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type
  >;

export type GetProjectEnvContentHint14 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type
  >;

export type GetProjectEnvContentHint13 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type
  >;

export type GetProjectEnvContentHint12 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type
  >;

export type GetProjectEnvContentHint11 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type
  >;

export type GetProjectEnvContentHint10 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type
  >;

export type GetProjectEnvContentHint9 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type
  >;

export type GetProjectEnvContentHint8 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type
  >;

export type GetProjectEnvContentHint7 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType
  >;

export type GetProjectEnvContentHint6 = {
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType = {
  BlobReadWriteToken: "blob-read-write-token",
} as const;
export type GetProjectEnvContentHintProjectsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONType
  >;

export type GetProjectEnvContentHint5 = {
  type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponse200Type = {
  RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
} as const;
export type GetProjectEnvContentHintProjectsResponse200Type = ClosedEnum<
  typeof GetProjectEnvContentHintProjectsResponse200Type
>;

export type GetProjectEnvContentHint4 = {
  type: GetProjectEnvContentHintProjectsResponse200Type;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsResponseType = {
  RedisRestApiToken: "redis-rest-api-token",
} as const;
export type GetProjectEnvContentHintProjectsResponseType = ClosedEnum<
  typeof GetProjectEnvContentHintProjectsResponseType
>;

export type GetProjectEnvContentHint3 = {
  type: GetProjectEnvContentHintProjectsResponseType;
  storeId: string;
};

export const GetProjectEnvContentHintProjectsType = {
  RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type GetProjectEnvContentHintProjectsType = ClosedEnum<
  typeof GetProjectEnvContentHintProjectsType
>;

export type GetProjectEnvContentHint2 = {
  type: GetProjectEnvContentHintProjectsType;
  storeId: string;
};

export const GetProjectEnvContentHintType = {
  RedisUrl: "redis-url",
} as const;
export type GetProjectEnvContentHintType = ClosedEnum<
  typeof GetProjectEnvContentHintType
>;

export type GetProjectEnvContentHint1 = {
  type: GetProjectEnvContentHintType;
  storeId: string;
};

export type GetProjectEnvResponseBodyContentHint =
  | GetProjectEnvContentHint14
  | GetProjectEnvContentHint1
  | GetProjectEnvContentHint2
  | GetProjectEnvContentHint3
  | GetProjectEnvContentHint4
  | GetProjectEnvContentHint5
  | GetProjectEnvContentHint6
  | GetProjectEnvContentHint7
  | GetProjectEnvContentHint8
  | GetProjectEnvContentHint9
  | GetProjectEnvContentHint10
  | GetProjectEnvContentHint11
  | GetProjectEnvContentHint12
  | GetProjectEnvContentHint13
  | GetProjectEnvContentHint15;

export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType = {
  FlagsSecret: "flags-secret",
} as const;
export type GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyInternalContentHint = {
  type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody1 = {
  decrypted: boolean;
  target?: Array<GetProjectEnvTarget1> | GetProjectEnvTarget2 | undefined;
  type: GetProjectEnvResponseBodyType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHint14
    | GetProjectEnvContentHint1
    | GetProjectEnvContentHint2
    | GetProjectEnvContentHint3
    | GetProjectEnvContentHint4
    | GetProjectEnvContentHint5
    | GetProjectEnvContentHint6
    | GetProjectEnvContentHint7
    | GetProjectEnvContentHint8
    | GetProjectEnvContentHint9
    | GetProjectEnvContentHint10
    | GetProjectEnvContentHint11
    | GetProjectEnvContentHint12
    | GetProjectEnvContentHint13
    | GetProjectEnvContentHint15
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyInternalContentHint
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

export type GetProjectEnvResponseBody =
  | GetProjectEnvResponseBody1
  | GetProjectEnvResponseBody2
  | GetProjectEnvResponseBody3;

/** @internal */
export const GetProjectEnvRequest$inboundSchema: z.ZodType<
  GetProjectEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type GetProjectEnvRequest$Outbound = {
  idOrName: string;
  id: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const GetProjectEnvRequest$outboundSchema: z.ZodType<
  GetProjectEnvRequest$Outbound,
  z.ZodTypeDef,
  GetProjectEnvRequest
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvRequest$ {
  /** @deprecated use `GetProjectEnvRequest$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvRequest$inboundSchema;
  /** @deprecated use `GetProjectEnvRequest$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvRequest$outboundSchema;
  /** @deprecated use `GetProjectEnvRequest$Outbound` instead. */
  export type Outbound = GetProjectEnvRequest$Outbound;
}

export function getProjectEnvRequestToJSON(
  getProjectEnvRequest: GetProjectEnvRequest,
): string {
  return JSON.stringify(
    GetProjectEnvRequest$outboundSchema.parse(getProjectEnvRequest),
  );
}

export function getProjectEnvRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvRequest' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvTargetProjectsResponse2$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvTargetProjectsResponse2> = z.nativeEnum(
    GetProjectEnvTargetProjectsResponse2,
  );

/** @internal */
export const GetProjectEnvTargetProjectsResponse2$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvTargetProjectsResponse2> =
    GetProjectEnvTargetProjectsResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetProjectsResponse2$ {
  /** @deprecated use `GetProjectEnvTargetProjectsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvTargetProjectsResponse2$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetProjectsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvTargetProjectsResponse2$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseTarget,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$inboundSchema,
  ]);

/** @internal */
export type GetProjectEnvResponseBodyProjectsResponseTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseTarget$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyProjectsResponseTarget
  > = z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponseTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseTarget$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyProjectsResponseTarget$Outbound;
}

export function getProjectEnvResponseBodyProjectsResponseTargetToJSON(
  getProjectEnvResponseBodyProjectsResponseTarget:
    GetProjectEnvResponseBodyProjectsResponseTarget,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema.parse(
      getProjectEnvResponseBodyProjectsResponseTarget,
    ),
  );
}

export function getProjectEnvResponseBodyProjectsResponseTargetFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsResponseTarget,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseTarget' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsResponseType> = z
    .nativeEnum(GetProjectEnvResponseBodyProjectsResponseType);

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsResponseType> =
    GetProjectEnvResponseBodyProjectsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponseType$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponseType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponseType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse15$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse15, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema,
      projectId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse15$Outbound = {
  type: string;
  projectId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse15$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse15$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse15
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema,
    projectId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse15$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse15$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse15$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse15$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse15$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse15$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse15$Outbound;
}

export function getProjectEnvContentHintProjectsResponse15ToJSON(
  getProjectEnvContentHintProjectsResponse15:
    GetProjectEnvContentHintProjectsResponse15,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse15$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse15,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse15FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse15,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse15$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse15' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse14$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse14, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema,
      storeId: z.string(),
      integrationId: z.string(),
      integrationProductId: z.string(),
      integrationConfigurationId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse14$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse14$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse14
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse14$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse14$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse14$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse14$Outbound;
}

export function getProjectEnvContentHintProjectsResponse14ToJSON(
  getProjectEnvContentHintProjectsResponse14:
    GetProjectEnvContentHintProjectsResponse14,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse14$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse14,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse14FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse14$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse14' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse13$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse13, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema,
      storeId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse13$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse13$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse13
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse13$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse13$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse13$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse13$Outbound;
}

export function getProjectEnvContentHintProjectsResponse13ToJSON(
  getProjectEnvContentHintProjectsResponse13:
    GetProjectEnvContentHintProjectsResponse13,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse13$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse13,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse13FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse13$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse13' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse12$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse12, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema,
      storeId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse12$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse12$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse12
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse12$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse12$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse12$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse12$Outbound;
}

export function getProjectEnvContentHintProjectsResponse12ToJSON(
  getProjectEnvContentHintProjectsResponse12:
    GetProjectEnvContentHintProjectsResponse12,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse12$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse12,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse12FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse12$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse12' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse11$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse11, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema,
      storeId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse11$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse11$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse11
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse11$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse11$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse11$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse11$Outbound;
}

export function getProjectEnvContentHintProjectsResponse11ToJSON(
  getProjectEnvContentHintProjectsResponse11:
    GetProjectEnvContentHintProjectsResponse11,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse11$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse11,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse11FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse11$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse11' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse10$inboundSchema:
  z.ZodType<GetProjectEnvContentHintProjectsResponse10, z.ZodTypeDef, unknown> =
    z.object({
      type:
        GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema,
      storeId: z.string(),
    });

/** @internal */
export type GetProjectEnvContentHintProjectsResponse10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse10$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse10$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse10
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse10$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse10$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse10$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse10$Outbound;
}

export function getProjectEnvContentHintProjectsResponse10ToJSON(
  getProjectEnvContentHintProjectsResponse10:
    GetProjectEnvContentHintProjectsResponse10,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse10$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse10,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse10FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse10,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse10$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse10' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse9$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse9$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse9$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse9
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse9$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse9$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse9$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse9$Outbound;
}

export function getProjectEnvContentHintProjectsResponse9ToJSON(
  getProjectEnvContentHintProjectsResponse9:
    GetProjectEnvContentHintProjectsResponse9,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse9$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse9,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse9FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse9' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse8$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse8$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse8$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse8
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse8$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse8$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse8$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse8$Outbound;
}

export function getProjectEnvContentHintProjectsResponse8ToJSON(
  getProjectEnvContentHintProjectsResponse8:
    GetProjectEnvContentHintProjectsResponse8,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse8$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse8,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse8FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse8' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse7$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse7$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse7$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse7
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse7$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse7$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse7$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse7$Outbound;
}

export function getProjectEnvContentHintProjectsResponse7ToJSON(
  getProjectEnvContentHintProjectsResponse7:
    GetProjectEnvContentHintProjectsResponse7,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse7$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse7,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse7FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse7' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse6$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse6$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse6$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse6
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse6$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse6$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse6$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse6$Outbound;
}

export function getProjectEnvContentHintProjectsResponse6ToJSON(
  getProjectEnvContentHintProjectsResponse6:
    GetProjectEnvContentHintProjectsResponse6,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse6$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse6,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse6FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse6' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse5$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse5$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse5$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse5
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse5$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse5$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse5$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse5$Outbound;
}

export function getProjectEnvContentHintProjectsResponse5ToJSON(
  getProjectEnvContentHintProjectsResponse5:
    GetProjectEnvContentHintProjectsResponse5,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse5$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse5,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse5FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse5' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse4$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse4$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse4$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse4
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse4$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse4$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse4$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse4$Outbound;
}

export function getProjectEnvContentHintProjectsResponse4ToJSON(
  getProjectEnvContentHintProjectsResponse4:
    GetProjectEnvContentHintProjectsResponse4,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse4$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse4,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse4FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse4' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse3$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse3$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse3$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse3
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse3$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse3$Outbound;
}

export function getProjectEnvContentHintProjectsResponse3ToJSON(
  getProjectEnvContentHintProjectsResponse3:
    GetProjectEnvContentHintProjectsResponse3,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse3$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse3,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse3FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse3' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse2$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse2$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse2$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse2
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse2$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse2$Outbound;
}

export function getProjectEnvContentHintProjectsResponse2ToJSON(
  getProjectEnvContentHintProjectsResponse2:
    GetProjectEnvContentHintProjectsResponse2,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse2$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse2,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse2' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse1$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjectsResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjectsResponse1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjectsResponse1$outboundSchema:
  z.ZodType<
    GetProjectEnvContentHintProjectsResponse1$Outbound,
    z.ZodTypeDef,
    GetProjectEnvContentHintProjectsResponse1
  > = z.object({
    type:
      GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse1$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjectsResponse1$Outbound;
}

export function getProjectEnvContentHintProjectsResponse1ToJSON(
  getProjectEnvContentHintProjectsResponse1:
    GetProjectEnvContentHintProjectsResponse1,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjectsResponse1$outboundSchema.parse(
      getProjectEnvContentHintProjectsResponse1,
    ),
  );
}

export function getProjectEnvContentHintProjectsResponse1FromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvContentHintProjectsResponse1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjectsResponse1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvContentHintProjectsResponse1' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseContentHint,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintProjectsResponse14$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse15$inboundSchema),
  ]);

/** @internal */
export type GetProjectEnvResponseBodyProjectsResponseContentHint$Outbound =
  | GetProjectEnvContentHintProjectsResponse14$Outbound
  | GetProjectEnvContentHintProjectsResponse1$Outbound
  | GetProjectEnvContentHintProjectsResponse2$Outbound
  | GetProjectEnvContentHintProjectsResponse3$Outbound
  | GetProjectEnvContentHintProjectsResponse4$Outbound
  | GetProjectEnvContentHintProjectsResponse5$Outbound
  | GetProjectEnvContentHintProjectsResponse6$Outbound
  | GetProjectEnvContentHintProjectsResponse7$Outbound
  | GetProjectEnvContentHintProjectsResponse8$Outbound
  | GetProjectEnvContentHintProjectsResponse9$Outbound
  | GetProjectEnvContentHintProjectsResponse10$Outbound
  | GetProjectEnvContentHintProjectsResponse11$Outbound
  | GetProjectEnvContentHintProjectsResponse12$Outbound
  | GetProjectEnvContentHintProjectsResponse13$Outbound
  | GetProjectEnvContentHintProjectsResponse15$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyProjectsResponseContentHint
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintProjectsResponse14$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse15$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponseContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyProjectsResponseContentHint$Outbound;
}

export function getProjectEnvResponseBodyProjectsResponseContentHintToJSON(
  getProjectEnvResponseBodyProjectsResponseContentHint:
    GetProjectEnvResponseBodyProjectsResponseContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema.parse(
      getProjectEnvResponseBodyProjectsResponseContentHint,
    ),
  );
}

export function getProjectEnvResponseBodyProjectsResponseContentHintFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsResponseContentHint,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type
  > = z.nativeEnum(
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type,
  );

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type
  > =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyProjectsResponseInternalContentHint$Outbound =
  {
    type: string;
    encryptedValue: string;
  };

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint
  > = z.object({
    type:
      GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponseInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseInternalContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$Outbound;
}

export function getProjectEnvResponseBodyProjectsResponseInternalContentHintToJSON(
  getProjectEnvResponseBodyProjectsResponseInternalContentHint:
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema
      .parse(getProjectEnvResponseBodyProjectsResponseInternalContentHint),
  );
}

export function getProjectEnvResponseBodyProjectsResponseInternalContentHintFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsResponseInternalContentHint,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseInternalContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBody3$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody3,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyProjectsResponseType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  decrypted: z.boolean().optional(),
  value: z.string(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintProjectsResponse14$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse15$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema
    ),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/** @internal */
export type GetProjectEnvResponseBody3$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  decrypted?: boolean | undefined;
  value: string;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintProjectsResponse14$Outbound
    | GetProjectEnvContentHintProjectsResponse1$Outbound
    | GetProjectEnvContentHintProjectsResponse2$Outbound
    | GetProjectEnvContentHintProjectsResponse3$Outbound
    | GetProjectEnvContentHintProjectsResponse4$Outbound
    | GetProjectEnvContentHintProjectsResponse5$Outbound
    | GetProjectEnvContentHintProjectsResponse6$Outbound
    | GetProjectEnvContentHintProjectsResponse7$Outbound
    | GetProjectEnvContentHintProjectsResponse8$Outbound
    | GetProjectEnvContentHintProjectsResponse9$Outbound
    | GetProjectEnvContentHintProjectsResponse10$Outbound
    | GetProjectEnvContentHintProjectsResponse11$Outbound
    | GetProjectEnvContentHintProjectsResponse12$Outbound
    | GetProjectEnvContentHintProjectsResponse13$Outbound
    | GetProjectEnvContentHintProjectsResponse15$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyProjectsResponseInternalContentHint$Outbound
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody3$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody3
> = z.object({
  target: z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyProjectsResponseType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  decrypted: z.boolean().optional(),
  value: z.string(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintProjectsResponse14$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjectsResponse15$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema
    ),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody3$ {
  /** @deprecated use `GetProjectEnvResponseBody3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody3$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody3$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody3$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody3$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody3$Outbound;
}

export function getProjectEnvResponseBody3ToJSON(
  getProjectEnvResponseBody3: GetProjectEnvResponseBody3,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBody3$outboundSchema.parse(getProjectEnvResponseBody3),
  );
}

export function getProjectEnvResponseBody3FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBody3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvResponseBody3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBody3' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvTargetProjects2$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetProjects2
> = z.nativeEnum(GetProjectEnvTargetProjects2);

/** @internal */
export const GetProjectEnvTargetProjects2$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetProjects2
> = GetProjectEnvTargetProjects2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetProjects2$ {
  /** @deprecated use `GetProjectEnvTargetProjects2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetProjects2$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetProjects2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetProjects2$outboundSchema;
}

/** @internal */
export const GetProjectEnvTargetProjects1$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetProjects1
> = z.nativeEnum(GetProjectEnvTargetProjects1);

/** @internal */
export const GetProjectEnvTargetProjects1$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetProjects1
> = GetProjectEnvTargetProjects1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetProjects1$ {
  /** @deprecated use `GetProjectEnvTargetProjects1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetProjects1$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetProjects1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetProjects1$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsTarget$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyProjectsTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(GetProjectEnvTargetProjects1$inboundSchema),
  GetProjectEnvTargetProjects2$inboundSchema,
]);

/** @internal */
export type GetProjectEnvResponseBodyProjectsTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const GetProjectEnvResponseBodyProjectsTarget$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyProjectsTarget$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyProjectsTarget
> = z.union([
  z.array(GetProjectEnvTargetProjects1$outboundSchema),
  GetProjectEnvTargetProjects2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsTarget$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyProjectsTarget$Outbound;
}

export function getProjectEnvResponseBodyProjectsTargetToJSON(
  getProjectEnvResponseBodyProjectsTarget:
    GetProjectEnvResponseBodyProjectsTarget,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsTarget$outboundSchema.parse(
      getProjectEnvResponseBodyProjectsTarget,
    ),
  );
}

export function getProjectEnvResponseBodyProjectsTargetFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsTarget,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsTarget$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsTarget' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsType> = z.nativeEnum(
    GetProjectEnvResponseBodyProjectsType,
  );

/** @internal */
export const GetProjectEnvResponseBodyProjectsType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsType> =
    GetProjectEnvResponseBodyProjectsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsType$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects15$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects15,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema,
  projectId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects15$Outbound = {
  type: string;
  projectId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects15$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects15$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects15
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema,
  projectId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects15$ {
  /** @deprecated use `GetProjectEnvContentHintProjects15$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects15$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects15$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects15$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects15$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects15$Outbound;
}

export function getProjectEnvContentHintProjects15ToJSON(
  getProjectEnvContentHintProjects15: GetProjectEnvContentHintProjects15,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects15$outboundSchema.parse(
      getProjectEnvContentHintProjects15,
    ),
  );
}

export function getProjectEnvContentHintProjects15FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects15' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects14$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects14$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects14$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects14
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects14$ {
  /** @deprecated use `GetProjectEnvContentHintProjects14$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects14$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects14$Outbound;
}

export function getProjectEnvContentHintProjects14ToJSON(
  getProjectEnvContentHintProjects14: GetProjectEnvContentHintProjects14,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects14$outboundSchema.parse(
      getProjectEnvContentHintProjects14,
    ),
  );
}

export function getProjectEnvContentHintProjects14FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects14' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects13$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects13$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects13$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects13
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects13$ {
  /** @deprecated use `GetProjectEnvContentHintProjects13$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects13$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects13$Outbound;
}

export function getProjectEnvContentHintProjects13ToJSON(
  getProjectEnvContentHintProjects13: GetProjectEnvContentHintProjects13,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects13$outboundSchema.parse(
      getProjectEnvContentHintProjects13,
    ),
  );
}

export function getProjectEnvContentHintProjects13FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects13' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects12$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects12$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects12$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects12
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects12$ {
  /** @deprecated use `GetProjectEnvContentHintProjects12$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects12$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects12$Outbound;
}

export function getProjectEnvContentHintProjects12ToJSON(
  getProjectEnvContentHintProjects12: GetProjectEnvContentHintProjects12,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects12$outboundSchema.parse(
      getProjectEnvContentHintProjects12,
    ),
  );
}

export function getProjectEnvContentHintProjects12FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects12' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects11$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects11$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects11$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects11
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects11$ {
  /** @deprecated use `GetProjectEnvContentHintProjects11$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects11$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects11$Outbound;
}

export function getProjectEnvContentHintProjects11ToJSON(
  getProjectEnvContentHintProjects11: GetProjectEnvContentHintProjects11,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects11$outboundSchema.parse(
      getProjectEnvContentHintProjects11,
    ),
  );
}

export function getProjectEnvContentHintProjects11FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects11' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects10$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects10$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects10$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects10
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects10$ {
  /** @deprecated use `GetProjectEnvContentHintProjects10$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects10$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects10$Outbound;
}

export function getProjectEnvContentHintProjects10ToJSON(
  getProjectEnvContentHintProjects10: GetProjectEnvContentHintProjects10,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects10$outboundSchema.parse(
      getProjectEnvContentHintProjects10,
    ),
  );
}

export function getProjectEnvContentHintProjects10FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvContentHintProjects10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects10' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects9$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects9$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects9$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects9
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects9$ {
  /** @deprecated use `GetProjectEnvContentHintProjects9$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects9$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects9$Outbound;
}

export function getProjectEnvContentHintProjects9ToJSON(
  getProjectEnvContentHintProjects9: GetProjectEnvContentHintProjects9,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects9$outboundSchema.parse(
      getProjectEnvContentHintProjects9,
    ),
  );
}

export function getProjectEnvContentHintProjects9FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects9' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects8$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects8$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects8$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects8
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects8$ {
  /** @deprecated use `GetProjectEnvContentHintProjects8$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects8$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects8$Outbound;
}

export function getProjectEnvContentHintProjects8ToJSON(
  getProjectEnvContentHintProjects8: GetProjectEnvContentHintProjects8,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects8$outboundSchema.parse(
      getProjectEnvContentHintProjects8,
    ),
  );
}

export function getProjectEnvContentHintProjects8FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects8' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects7$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects7$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects7$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects7
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects7$ {
  /** @deprecated use `GetProjectEnvContentHintProjects7$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects7$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects7$Outbound;
}

export function getProjectEnvContentHintProjects7ToJSON(
  getProjectEnvContentHintProjects7: GetProjectEnvContentHintProjects7,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects7$outboundSchema.parse(
      getProjectEnvContentHintProjects7,
    ),
  );
}

export function getProjectEnvContentHintProjects7FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects7' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects6$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects6$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects6$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects6
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects6$ {
  /** @deprecated use `GetProjectEnvContentHintProjects6$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects6$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects6$Outbound;
}

export function getProjectEnvContentHintProjects6ToJSON(
  getProjectEnvContentHintProjects6: GetProjectEnvContentHintProjects6,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects6$outboundSchema.parse(
      getProjectEnvContentHintProjects6,
    ),
  );
}

export function getProjectEnvContentHintProjects6FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects6' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects5$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects5$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects5$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects5
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects5$ {
  /** @deprecated use `GetProjectEnvContentHintProjects5$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects5$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects5$Outbound;
}

export function getProjectEnvContentHintProjects5ToJSON(
  getProjectEnvContentHintProjects5: GetProjectEnvContentHintProjects5,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects5$outboundSchema.parse(
      getProjectEnvContentHintProjects5,
    ),
  );
}

export function getProjectEnvContentHintProjects5FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects5' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects4$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects4$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects4$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects4
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects4$ {
  /** @deprecated use `GetProjectEnvContentHintProjects4$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects4$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects4$Outbound;
}

export function getProjectEnvContentHintProjects4ToJSON(
  getProjectEnvContentHintProjects4: GetProjectEnvContentHintProjects4,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects4$outboundSchema.parse(
      getProjectEnvContentHintProjects4,
    ),
  );
}

export function getProjectEnvContentHintProjects4FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects4' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects3$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects3$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects3
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects3$ {
  /** @deprecated use `GetProjectEnvContentHintProjects3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects3$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects3$Outbound;
}

export function getProjectEnvContentHintProjects3ToJSON(
  getProjectEnvContentHintProjects3: GetProjectEnvContentHintProjects3,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects3$outboundSchema.parse(
      getProjectEnvContentHintProjects3,
    ),
  );
}

export function getProjectEnvContentHintProjects3FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects3' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects2$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects2$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects2
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects2$ {
  /** @deprecated use `GetProjectEnvContentHintProjects2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects2$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects2$Outbound;
}

export function getProjectEnvContentHintProjects2ToJSON(
  getProjectEnvContentHintProjects2: GetProjectEnvContentHintProjects2,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects2$outboundSchema.parse(
      getProjectEnvContentHintProjects2,
    ),
  );
}

export function getProjectEnvContentHintProjects2FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects2' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjects1$inboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintProjects1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintProjects1$outboundSchema: z.ZodType<
  GetProjectEnvContentHintProjects1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintProjects1
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjects1$ {
  /** @deprecated use `GetProjectEnvContentHintProjects1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintProjects1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects1$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjects1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjects1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintProjects1$Outbound;
}

export function getProjectEnvContentHintProjects1ToJSON(
  getProjectEnvContentHintProjects1: GetProjectEnvContentHintProjects1,
): string {
  return JSON.stringify(
    GetProjectEnvContentHintProjects1$outboundSchema.parse(
      getProjectEnvContentHintProjects1,
    ),
  );
}

export function getProjectEnvContentHintProjects1FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHintProjects1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHintProjects1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHintProjects1' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsContentHint,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintProjects14$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects15$inboundSchema),
  ]);

/** @internal */
export type GetProjectEnvResponseBodyProjectsContentHint$Outbound =
  | GetProjectEnvContentHintProjects14$Outbound
  | GetProjectEnvContentHintProjects1$Outbound
  | GetProjectEnvContentHintProjects2$Outbound
  | GetProjectEnvContentHintProjects3$Outbound
  | GetProjectEnvContentHintProjects4$Outbound
  | GetProjectEnvContentHintProjects5$Outbound
  | GetProjectEnvContentHintProjects6$Outbound
  | GetProjectEnvContentHintProjects7$Outbound
  | GetProjectEnvContentHintProjects8$Outbound
  | GetProjectEnvContentHintProjects9$Outbound
  | GetProjectEnvContentHintProjects10$Outbound
  | GetProjectEnvContentHintProjects11$Outbound
  | GetProjectEnvContentHintProjects12$Outbound
  | GetProjectEnvContentHintProjects13$Outbound
  | GetProjectEnvContentHintProjects15$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyProjectsContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyProjectsContentHint
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintProjects14$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects15$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyProjectsContentHint$Outbound;
}

export function getProjectEnvResponseBodyProjectsContentHintToJSON(
  getProjectEnvResponseBodyProjectsContentHint:
    GetProjectEnvResponseBodyProjectsContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsContentHint$outboundSchema.parse(
      getProjectEnvResponseBodyProjectsContentHint,
    ),
  );
}

export function getProjectEnvResponseBodyProjectsContentHintFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsContentHint,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsContentHint$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsResponse200Type> = z
    .nativeEnum(GetProjectEnvResponseBodyProjectsResponse200Type);

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsResponse200Type> =
    GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponse200Type$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyProjectsInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyProjectsInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyProjectsInternalContentHint
  > = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsInternalContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyProjectsInternalContentHint$Outbound;
}

export function getProjectEnvResponseBodyProjectsInternalContentHintToJSON(
  getProjectEnvResponseBodyProjectsInternalContentHint:
    GetProjectEnvResponseBodyProjectsInternalContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema.parse(
      getProjectEnvResponseBodyProjectsInternalContentHint,
    ),
  );
}

export function getProjectEnvResponseBodyProjectsInternalContentHintFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyProjectsInternalContentHint,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyProjectsInternalContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBody2$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetProjects1$inboundSchema),
    GetProjectEnvTargetProjects2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyProjectsType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  decrypted: z.boolean().optional(),
  value: z.string(),
  vsmValue: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintProjects14$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects15$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema
    ),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/** @internal */
export type GetProjectEnvResponseBody2$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  decrypted?: boolean | undefined;
  value: string;
  vsmValue?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintProjects14$Outbound
    | GetProjectEnvContentHintProjects1$Outbound
    | GetProjectEnvContentHintProjects2$Outbound
    | GetProjectEnvContentHintProjects3$Outbound
    | GetProjectEnvContentHintProjects4$Outbound
    | GetProjectEnvContentHintProjects5$Outbound
    | GetProjectEnvContentHintProjects6$Outbound
    | GetProjectEnvContentHintProjects7$Outbound
    | GetProjectEnvContentHintProjects8$Outbound
    | GetProjectEnvContentHintProjects9$Outbound
    | GetProjectEnvContentHintProjects10$Outbound
    | GetProjectEnvContentHintProjects11$Outbound
    | GetProjectEnvContentHintProjects12$Outbound
    | GetProjectEnvContentHintProjects13$Outbound
    | GetProjectEnvContentHintProjects15$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyProjectsInternalContentHint$Outbound
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody2$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody2
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetProjects1$outboundSchema),
    GetProjectEnvTargetProjects2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyProjectsType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  decrypted: z.boolean().optional(),
  value: z.string(),
  vsmValue: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintProjects14$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintProjects15$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema
    ),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody2$ {
  /** @deprecated use `GetProjectEnvResponseBody2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody2$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody2$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody2$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody2$Outbound;
}

export function getProjectEnvResponseBody2ToJSON(
  getProjectEnvResponseBody2: GetProjectEnvResponseBody2,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBody2$outboundSchema.parse(getProjectEnvResponseBody2),
  );
}

export function getProjectEnvResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBody2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvResponseBody2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBody2' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget2
> = z.nativeEnum(GetProjectEnvTarget2);

/** @internal */
export const GetProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget2
> = GetProjectEnvTarget2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTarget2$ {
  /** @deprecated use `GetProjectEnvTarget2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTarget2$inboundSchema;
  /** @deprecated use `GetProjectEnvTarget2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTarget2$outboundSchema;
}

/** @internal */
export const GetProjectEnvTarget1$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget1
> = z.nativeEnum(GetProjectEnvTarget1);

/** @internal */
export const GetProjectEnvTarget1$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget1
> = GetProjectEnvTarget1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTarget1$ {
  /** @deprecated use `GetProjectEnvTarget1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTarget1$inboundSchema;
  /** @deprecated use `GetProjectEnvTarget1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTarget1$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyTarget$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(GetProjectEnvTarget1$inboundSchema),
  GetProjectEnvTarget2$inboundSchema,
]);

/** @internal */
export type GetProjectEnvResponseBodyTarget$Outbound = Array<string> | string;

/** @internal */
export const GetProjectEnvResponseBodyTarget$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyTarget$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyTarget
> = z.union([
  z.array(GetProjectEnvTarget1$outboundSchema),
  GetProjectEnvTarget2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyTarget$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBodyTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyTarget$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBodyTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyTarget$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyTarget$Outbound;
}

export function getProjectEnvResponseBodyTargetToJSON(
  getProjectEnvResponseBodyTarget: GetProjectEnvResponseBodyTarget,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyTarget$outboundSchema.parse(
      getProjectEnvResponseBodyTarget,
    ),
  );
}

export function getProjectEnvResponseBodyTargetFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBodyTarget, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvResponseBodyTarget$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBodyTarget' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyType
> = z.nativeEnum(GetProjectEnvResponseBodyType);

/** @internal */
export const GetProjectEnvResponseBodyType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyType
> = GetProjectEnvResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyType$ {
  /** @deprecated use `GetProjectEnvResponseBodyType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBodyType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyType$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBodyType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint15$inboundSchema: z.ZodType<
  GetProjectEnvContentHint15,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema,
  projectId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint15$Outbound = {
  type: string;
  projectId: string;
};

/** @internal */
export const GetProjectEnvContentHint15$outboundSchema: z.ZodType<
  GetProjectEnvContentHint15$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint15
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema,
  projectId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint15$ {
  /** @deprecated use `GetProjectEnvContentHint15$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint15$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint15$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint15$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint15$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint15$Outbound;
}

export function getProjectEnvContentHint15ToJSON(
  getProjectEnvContentHint15: GetProjectEnvContentHint15,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint15$outboundSchema.parse(getProjectEnvContentHint15),
  );
}

export function getProjectEnvContentHint15FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint15' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint14$inboundSchema: z.ZodType<
  GetProjectEnvContentHint14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHint14$outboundSchema: z.ZodType<
  GetProjectEnvContentHint14$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint14
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint14$ {
  /** @deprecated use `GetProjectEnvContentHint14$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint14$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint14$Outbound;
}

export function getProjectEnvContentHint14ToJSON(
  getProjectEnvContentHint14: GetProjectEnvContentHint14,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint14$outboundSchema.parse(getProjectEnvContentHint14),
  );
}

export function getProjectEnvContentHint14FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint14' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint13$inboundSchema: z.ZodType<
  GetProjectEnvContentHint13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint13$outboundSchema: z.ZodType<
  GetProjectEnvContentHint13$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint13
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint13$ {
  /** @deprecated use `GetProjectEnvContentHint13$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint13$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint13$Outbound;
}

export function getProjectEnvContentHint13ToJSON(
  getProjectEnvContentHint13: GetProjectEnvContentHint13,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint13$outboundSchema.parse(getProjectEnvContentHint13),
  );
}

export function getProjectEnvContentHint13FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint13' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint12$inboundSchema: z.ZodType<
  GetProjectEnvContentHint12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint12$outboundSchema: z.ZodType<
  GetProjectEnvContentHint12$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint12
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint12$ {
  /** @deprecated use `GetProjectEnvContentHint12$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint12$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint12$Outbound;
}

export function getProjectEnvContentHint12ToJSON(
  getProjectEnvContentHint12: GetProjectEnvContentHint12,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint12$outboundSchema.parse(getProjectEnvContentHint12),
  );
}

export function getProjectEnvContentHint12FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint12' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint11$inboundSchema: z.ZodType<
  GetProjectEnvContentHint11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint11$outboundSchema: z.ZodType<
  GetProjectEnvContentHint11$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint11
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint11$ {
  /** @deprecated use `GetProjectEnvContentHint11$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint11$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint11$Outbound;
}

export function getProjectEnvContentHint11ToJSON(
  getProjectEnvContentHint11: GetProjectEnvContentHint11,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint11$outboundSchema.parse(getProjectEnvContentHint11),
  );
}

export function getProjectEnvContentHint11FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint11' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint10$inboundSchema: z.ZodType<
  GetProjectEnvContentHint10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint10$outboundSchema: z.ZodType<
  GetProjectEnvContentHint10$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint10
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint10$ {
  /** @deprecated use `GetProjectEnvContentHint10$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint10$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint10$Outbound;
}

export function getProjectEnvContentHint10ToJSON(
  getProjectEnvContentHint10: GetProjectEnvContentHint10,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint10$outboundSchema.parse(getProjectEnvContentHint10),
  );
}

export function getProjectEnvContentHint10FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint10' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint9$inboundSchema: z.ZodType<
  GetProjectEnvContentHint9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint9$outboundSchema: z.ZodType<
  GetProjectEnvContentHint9$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint9
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint9$ {
  /** @deprecated use `GetProjectEnvContentHint9$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint9$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint9$Outbound;
}

export function getProjectEnvContentHint9ToJSON(
  getProjectEnvContentHint9: GetProjectEnvContentHint9,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint9$outboundSchema.parse(getProjectEnvContentHint9),
  );
}

export function getProjectEnvContentHint9FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint9' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint8$inboundSchema: z.ZodType<
  GetProjectEnvContentHint8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint8$outboundSchema: z.ZodType<
  GetProjectEnvContentHint8$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint8
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint8$ {
  /** @deprecated use `GetProjectEnvContentHint8$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint8$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint8$Outbound;
}

export function getProjectEnvContentHint8ToJSON(
  getProjectEnvContentHint8: GetProjectEnvContentHint8,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint8$outboundSchema.parse(getProjectEnvContentHint8),
  );
}

export function getProjectEnvContentHint8FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint8' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint7$inboundSchema: z.ZodType<
  GetProjectEnvContentHint7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint7$outboundSchema: z.ZodType<
  GetProjectEnvContentHint7$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint7
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint7$ {
  /** @deprecated use `GetProjectEnvContentHint7$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint7$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint7$Outbound;
}

export function getProjectEnvContentHint7ToJSON(
  getProjectEnvContentHint7: GetProjectEnvContentHint7,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint7$outboundSchema.parse(getProjectEnvContentHint7),
  );
}

export function getProjectEnvContentHint7FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint7' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint6$inboundSchema: z.ZodType<
  GetProjectEnvContentHint6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint6$outboundSchema: z.ZodType<
  GetProjectEnvContentHint6$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint6
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint6$ {
  /** @deprecated use `GetProjectEnvContentHint6$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint6$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint6$Outbound;
}

export function getProjectEnvContentHint6ToJSON(
  getProjectEnvContentHint6: GetProjectEnvContentHint6,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint6$outboundSchema.parse(getProjectEnvContentHint6),
  );
}

export function getProjectEnvContentHint6FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint6' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONType
  > = z.nativeEnum(
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONType
  > =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint5$inboundSchema: z.ZodType<
  GetProjectEnvContentHint5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint5$outboundSchema: z.ZodType<
  GetProjectEnvContentHint5$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint5
> = z.object({
  type:
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint5$ {
  /** @deprecated use `GetProjectEnvContentHint5$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint5$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint5$Outbound;
}

export function getProjectEnvContentHint5ToJSON(
  getProjectEnvContentHint5: GetProjectEnvContentHint5,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint5$outboundSchema.parse(getProjectEnvContentHint5),
  );
}

export function getProjectEnvContentHint5FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint5' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsResponse200Type> = z
    .nativeEnum(GetProjectEnvContentHintProjectsResponse200Type);

/** @internal */
export const GetProjectEnvContentHintProjectsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsResponse200Type> =
    GetProjectEnvContentHintProjectsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponse200Type$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponse200Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponse200Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint4$inboundSchema: z.ZodType<
  GetProjectEnvContentHint4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintProjectsResponse200Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint4$outboundSchema: z.ZodType<
  GetProjectEnvContentHint4$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint4
> = z.object({
  type: GetProjectEnvContentHintProjectsResponse200Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint4$ {
  /** @deprecated use `GetProjectEnvContentHint4$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint4$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint4$Outbound;
}

export function getProjectEnvContentHint4ToJSON(
  getProjectEnvContentHint4: GetProjectEnvContentHint4,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint4$outboundSchema.parse(getProjectEnvContentHint4),
  );
}

export function getProjectEnvContentHint4FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint4' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsResponseType> = z
    .nativeEnum(GetProjectEnvContentHintProjectsResponseType);

/** @internal */
export const GetProjectEnvContentHintProjectsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsResponseType> =
    GetProjectEnvContentHintProjectsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsResponseType$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsResponseType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsResponseType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint3$inboundSchema: z.ZodType<
  GetProjectEnvContentHint3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintProjectsResponseType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint3$outboundSchema: z.ZodType<
  GetProjectEnvContentHint3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint3
> = z.object({
  type: GetProjectEnvContentHintProjectsResponseType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint3$ {
  /** @deprecated use `GetProjectEnvContentHint3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint3$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint3$Outbound;
}

export function getProjectEnvContentHint3ToJSON(
  getProjectEnvContentHint3: GetProjectEnvContentHint3,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint3$outboundSchema.parse(getProjectEnvContentHint3),
  );
}

export function getProjectEnvContentHint3FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint3' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintProjectsType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsType> = z.nativeEnum(
    GetProjectEnvContentHintProjectsType,
  );

/** @internal */
export const GetProjectEnvContentHintProjectsType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsType> =
    GetProjectEnvContentHintProjectsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintProjectsType$ {
  /** @deprecated use `GetProjectEnvContentHintProjectsType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintProjectsType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintProjectsType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintProjectsType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint2$inboundSchema: z.ZodType<
  GetProjectEnvContentHint2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintProjectsType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint2$outboundSchema: z.ZodType<
  GetProjectEnvContentHint2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint2
> = z.object({
  type: GetProjectEnvContentHintProjectsType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint2$ {
  /** @deprecated use `GetProjectEnvContentHint2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint2$Outbound;
}

export function getProjectEnvContentHint2ToJSON(
  getProjectEnvContentHint2: GetProjectEnvContentHint2,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint2$outboundSchema.parse(getProjectEnvContentHint2),
  );
}

export function getProjectEnvContentHint2FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint2' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintType
> = z.nativeEnum(GetProjectEnvContentHintType);

/** @internal */
export const GetProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintType
> = GetProjectEnvContentHintType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintType$ {
  /** @deprecated use `GetProjectEnvContentHintType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintType$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint1$inboundSchema: z.ZodType<
  GetProjectEnvContentHint1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint1$outboundSchema: z.ZodType<
  GetProjectEnvContentHint1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint1
> = z.object({
  type: GetProjectEnvContentHintType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint1$ {
  /** @deprecated use `GetProjectEnvContentHint1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint1$Outbound;
}

export function getProjectEnvContentHint1ToJSON(
  getProjectEnvContentHint1: GetProjectEnvContentHint1,
): string {
  return JSON.stringify(
    GetProjectEnvContentHint1$outboundSchema.parse(getProjectEnvContentHint1),
  );
}

export function getProjectEnvContentHint1FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvContentHint1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvContentHint1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvContentHint1' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyContentHint$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint15$inboundSchema),
]);

/** @internal */
export type GetProjectEnvResponseBodyContentHint$Outbound =
  | GetProjectEnvContentHint14$Outbound
  | GetProjectEnvContentHint1$Outbound
  | GetProjectEnvContentHint2$Outbound
  | GetProjectEnvContentHint3$Outbound
  | GetProjectEnvContentHint4$Outbound
  | GetProjectEnvContentHint5$Outbound
  | GetProjectEnvContentHint6$Outbound
  | GetProjectEnvContentHint7$Outbound
  | GetProjectEnvContentHint8$Outbound
  | GetProjectEnvContentHint9$Outbound
  | GetProjectEnvContentHint10$Outbound
  | GetProjectEnvContentHint11$Outbound
  | GetProjectEnvContentHint12$Outbound
  | GetProjectEnvContentHint13$Outbound
  | GetProjectEnvContentHint15$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyContentHint$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyContentHint$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyContentHint
> = z.union([
  z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint15$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyContentHint$Outbound;
}

export function getProjectEnvResponseBodyContentHintToJSON(
  getProjectEnvResponseBodyContentHint: GetProjectEnvResponseBodyContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyContentHint$outboundSchema.parse(
      getProjectEnvResponseBodyContentHint,
    ),
  );
}

export function getProjectEnvResponseBodyContentHintFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBodyContentHint, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBodyContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType
  > = z.nativeEnum(
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType,
  );

/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType
  > =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyInternalContentHint
  > = z.object({
    type:
      GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyInternalContentHint$Outbound;
}

export function getProjectEnvResponseBodyInternalContentHintToJSON(
  getProjectEnvResponseBodyInternalContentHint:
    GetProjectEnvResponseBodyInternalContentHint,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBodyInternalContentHint$outboundSchema.parse(
      getProjectEnvResponseBodyInternalContentHint,
    ),
  );
}

export function getProjectEnvResponseBodyInternalContentHintFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProjectEnvResponseBodyInternalContentHint,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectEnvResponseBodyInternalContentHint$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProjectEnvResponseBodyInternalContentHint' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBody1$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  decrypted: z.boolean(),
  target: z.union([
    z.array(GetProjectEnvTarget1$inboundSchema),
    GetProjectEnvTarget2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint15$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$inboundSchema),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/** @internal */
export type GetProjectEnvResponseBody1$Outbound = {
  decrypted: boolean;
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHint14$Outbound
    | GetProjectEnvContentHint1$Outbound
    | GetProjectEnvContentHint2$Outbound
    | GetProjectEnvContentHint3$Outbound
    | GetProjectEnvContentHint4$Outbound
    | GetProjectEnvContentHint5$Outbound
    | GetProjectEnvContentHint6$Outbound
    | GetProjectEnvContentHint7$Outbound
    | GetProjectEnvContentHint8$Outbound
    | GetProjectEnvContentHint9$Outbound
    | GetProjectEnvContentHint10$Outbound
    | GetProjectEnvContentHint11$Outbound
    | GetProjectEnvContentHint12$Outbound
    | GetProjectEnvContentHint13$Outbound
    | GetProjectEnvContentHint15$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyInternalContentHint$Outbound
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody1$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody1
> = z.object({
  decrypted: z.boolean(),
  target: z.union([
    z.array(GetProjectEnvTarget1$outboundSchema),
    GetProjectEnvTarget2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint15$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$outboundSchema),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody1$ {
  /** @deprecated use `GetProjectEnvResponseBody1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody1$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody1$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody1$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody1$Outbound;
}

export function getProjectEnvResponseBody1ToJSON(
  getProjectEnvResponseBody1: GetProjectEnvResponseBody1,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBody1$outboundSchema.parse(getProjectEnvResponseBody1),
  );
}

export function getProjectEnvResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBody1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvResponseBody1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBody1' from JSON`,
  );
}

/** @internal */
export const GetProjectEnvResponseBody$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetProjectEnvResponseBody1$inboundSchema),
  z.lazy(() => GetProjectEnvResponseBody2$inboundSchema),
  z.lazy(() => GetProjectEnvResponseBody3$inboundSchema),
]);

/** @internal */
export type GetProjectEnvResponseBody$Outbound =
  | GetProjectEnvResponseBody1$Outbound
  | GetProjectEnvResponseBody2$Outbound
  | GetProjectEnvResponseBody3$Outbound;

/** @internal */
export const GetProjectEnvResponseBody$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody
> = z.union([
  z.lazy(() => GetProjectEnvResponseBody1$outboundSchema),
  z.lazy(() => GetProjectEnvResponseBody2$outboundSchema),
  z.lazy(() => GetProjectEnvResponseBody3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody$ {
  /** @deprecated use `GetProjectEnvResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody$Outbound;
}

export function getProjectEnvResponseBodyToJSON(
  getProjectEnvResponseBody: GetProjectEnvResponseBody,
): string {
  return JSON.stringify(
    GetProjectEnvResponseBody$outboundSchema.parse(getProjectEnvResponseBody),
  );
}

export function getProjectEnvResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectEnvResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProjectEnvResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectEnvResponseBody' from JSON`,
  );
}
