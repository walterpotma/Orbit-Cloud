/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { userListUserEvents } from "../../funcs/userListUserEvents.js";
import { ListUserEventsRequest$inboundSchema } from "../../models/listusereventsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListUserEventsRequest$inboundSchema,
};

export const tool$userListUserEvents: ToolDefinition<typeof args> = {
  name: "user-list-user-events",
  description: `List User Events

Retrieves a list of "events" generated by the User on Vercel. Events are generated when the User performs a particular action, such as logging in, creating a deployment, and joining a Team (just to name a few). When the \`teamId\` parameter is supplied, then the events that are returned will be in relation to the Team that was specified.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await userListUserEvents(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
