/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationsConnectIntegrationResourceToProject } from "../../funcs/integrationsConnectIntegrationResourceToProject.js";
import { ConnectIntegrationResourceToProjectRequest$inboundSchema } from "../../models/connectintegrationresourcetoprojectop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ConnectIntegrationResourceToProjectRequest$inboundSchema,
};

export const tool$integrationsConnectIntegrationResourceToProject:
  ToolDefinition<typeof args> = {
    name: "integrations-connect-integration-resource-to-project",
    description: `Connect integration resource to project

Connects an integration resource to a Vercel project. This endpoint establishes a connection between a provisioned integration resource (from storage APIs like \`POST /v1/storage/stores/integration/direct\`) and a specific Vercel project.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await integrationsConnectIntegrationResourceToProject(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      return formatResult(void 0, apiCall);
    },
  };
