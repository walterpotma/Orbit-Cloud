/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectsUnpauseProject } from "../../funcs/projectsUnpauseProject.js";
import { UnpauseProjectRequest$inboundSchema } from "../../models/unpauseprojectop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: UnpauseProjectRequest$inboundSchema,
};

export const tool$projectsUnpauseProject: ToolDefinition<typeof args> = {
  name: "projects-unpause-project",
  description: `Unpause a project

Unpause a project by passing its project \`id\` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project enables auto assigning custom production domains and unblocks the active Production Deployment then the request will return with 200 status code.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await projectsUnpauseProject(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
