/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentCreateCustomEnvironment } from "../funcs/environmentCreateCustomEnvironment.js";
import { environmentGetCustomEnvironment } from "../funcs/environmentGetCustomEnvironment.js";
import { environmentGetV9ProjectsIdOrNameCustomEnvironments } from "../funcs/environmentGetV9ProjectsIdOrNameCustomEnvironments.js";
import { environmentRemoveCustomEnvironment } from "../funcs/environmentRemoveCustomEnvironment.js";
import { environmentUpdateCustomEnvironment } from "../funcs/environmentUpdateCustomEnvironment.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
  CreateCustomEnvironmentRequest,
  CreateCustomEnvironmentResponseBody,
} from "../models/createcustomenvironmentop.js";
import {
  GetCustomEnvironmentRequest,
  GetCustomEnvironmentResponseBody,
} from "../models/getcustomenvironmentop.js";
import {
  GetV9ProjectsIdOrNameCustomEnvironmentsRequest,
  GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody,
} from "../models/getv9projectsidornamecustomenvironmentsop.js";
import {
  RemoveCustomEnvironmentRequest,
  RemoveCustomEnvironmentResponseBody,
} from "../models/removecustomenvironmentop.js";
import {
  UpdateCustomEnvironmentRequest,
  UpdateCustomEnvironmentResponseBody,
} from "../models/updatecustomenvironmentop.js";
import { unwrapAsync } from "../types/fp.js";

export class Environment extends ClientSDK {
  /**
   * Create a custom environment for the current project.
   *
   * @remarks
   * Creates a custom environment for the current project. Cannot be named 'Production' or 'Preview'.
   */
  async createCustomEnvironment(
    request: CreateCustomEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<CreateCustomEnvironmentResponseBody> {
    return unwrapAsync(environmentCreateCustomEnvironment(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve custom environments
   *
   * @remarks
   * Retrieve custom environments for the project. Must not be named 'Production' or 'Preview'.
   */
  async getV9ProjectsIdOrNameCustomEnvironments(
    request: GetV9ProjectsIdOrNameCustomEnvironmentsRequest,
    options?: RequestOptions,
  ): Promise<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody> {
    return unwrapAsync(environmentGetV9ProjectsIdOrNameCustomEnvironments(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a custom environment
   *
   * @remarks
   * Retrieve a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async getCustomEnvironment(
    request: GetCustomEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<GetCustomEnvironmentResponseBody> {
    return unwrapAsync(environmentGetCustomEnvironment(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a custom environment
   *
   * @remarks
   * Update a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async updateCustomEnvironment(
    request: UpdateCustomEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<UpdateCustomEnvironmentResponseBody> {
    return unwrapAsync(environmentUpdateCustomEnvironment(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a custom environment
   *
   * @remarks
   * Remove a custom environment for the project. Must not be named 'Production' or 'Preview'.
   */
  async removeCustomEnvironment(
    request: RemoveCustomEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<RemoveCustomEnvironmentResponseBody> {
    return unwrapAsync(environmentRemoveCustomEnvironment(
      this,
      request,
      options,
    ));
  }
}
