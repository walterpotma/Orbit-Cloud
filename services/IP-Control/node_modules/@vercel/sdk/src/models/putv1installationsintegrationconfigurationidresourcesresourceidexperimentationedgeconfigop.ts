/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  EdgeConfigItemValue,
  EdgeConfigItemValue$inboundSchema,
  EdgeConfigItemValue$Outbound,
  EdgeConfigItemValue$outboundSchema,
} from "./edgeconfigitemvalue.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody =
  {
    data: { [k: string]: any };
  };

export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest =
  {
    integrationConfigurationId: string;
    resourceId: string;
    requestBody?:
      | PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody
      | undefined;
  };

/**
 * The Edge Config was updated
 */
export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody =
  {
    items: { [k: string]: EdgeConfigItemValue | null };
    updatedAt: number;
    digest: string;
  };

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$inboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.record(z.any()),
  });

/** @internal */
export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$Outbound =
  {
    data: { [k: string]: any };
  };

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$outboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$Outbound,
    z.ZodTypeDef,
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody
  > = z.object({
    data: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$ {
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$inboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$outboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$Outbound` instead. */
  export type Outbound =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$Outbound;
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBodyToJSON(
  putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody:
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody,
): string {
  return JSON.stringify(
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$outboundSchema
      .parse(
        putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody,
      ),
  );
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody' from JSON`,
  );
}

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    RequestBody: z.lazy(() =>
      PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound =
  {
    integrationConfigurationId: string;
    resourceId: string;
    RequestBody?:
      | PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$Outbound
      | undefined;
  };

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound,
    z.ZodTypeDef,
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    requestBody: z.lazy(() =>
      PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestBody$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$ {
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound` instead. */
  export type Outbound =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound;
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestToJSON(
  putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest:
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
): string {
  return JSON.stringify(
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema
      .parse(
        putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
      ),
  );
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest' from JSON`,
  );
}

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    items: z.record(z.nullable(EdgeConfigItemValue$inboundSchema)),
    updatedAt: z.number(),
    digest: z.string(),
  });

/** @internal */
export type PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound =
  {
    items: { [k: string]: EdgeConfigItemValue$Outbound | null };
    updatedAt: number;
    digest: string;
  };

/** @internal */
export const PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema:
  z.ZodType<
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound,
    z.ZodTypeDef,
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody
  > = z.object({
    items: z.record(z.nullable(EdgeConfigItemValue$outboundSchema)),
    updatedAt: z.number(),
    digest: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$ {
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema;
  /** @deprecated use `PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound` instead. */
  export type Outbound =
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound;
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBodyToJSON(
  putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody:
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
): string {
  return JSON.stringify(
    PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema
      .parse(
        putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
      ),
  );
}

export function putV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody' from JSON`,
  );
}
