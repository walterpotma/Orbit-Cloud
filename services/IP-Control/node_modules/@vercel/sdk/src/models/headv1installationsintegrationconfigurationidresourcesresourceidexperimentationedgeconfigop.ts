/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  EdgeConfigItemValue,
  EdgeConfigItemValue$inboundSchema,
  EdgeConfigItemValue$Outbound,
  EdgeConfigItemValue$outboundSchema,
} from "./edgeconfigitemvalue.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest =
  {
    integrationConfigurationId: string;
    resourceId: string;
  };

/**
 * The Edge Config data
 */
export type HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody =
  {
    items: { [k: string]: EdgeConfigItemValue | null };
    updatedAt: number;
    digest: string;
  };

/** @internal */
export const HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema:
  z.ZodType<
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
  });

/** @internal */
export type HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound =
  {
    integrationConfigurationId: string;
    resourceId: string;
  };

/** @internal */
export const HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema:
  z.ZodType<
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound,
    z.ZodTypeDef,
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$ {
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema` instead. */
  export const inboundSchema =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema;
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema` instead. */
  export const outboundSchema =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema;
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound` instead. */
  export type Outbound =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$Outbound;
}

export function headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestToJSON(
  headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest:
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
): string {
  return JSON.stringify(
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$outboundSchema
      .parse(
        headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
      ),
  );
}

export function headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigRequest' from JSON`,
  );
}

/** @internal */
export const HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema:
  z.ZodType<
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    items: z.record(z.nullable(EdgeConfigItemValue$inboundSchema)),
    updatedAt: z.number(),
    digest: z.string(),
  });

/** @internal */
export type HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound =
  {
    items: { [k: string]: EdgeConfigItemValue$Outbound | null };
    updatedAt: number;
    digest: string;
  };

/** @internal */
export const HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema:
  z.ZodType<
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound,
    z.ZodTypeDef,
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody
  > = z.object({
    items: z.record(z.nullable(EdgeConfigItemValue$outboundSchema)),
    updatedAt: z.number(),
    digest: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$ {
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema;
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema;
  /** @deprecated use `HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound` instead. */
  export type Outbound =
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$Outbound;
}

export function headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBodyToJSON(
  headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody:
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
): string {
  return JSON.stringify(
    HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$outboundSchema
      .parse(
        headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
      ),
  );
}

export function headV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HeadV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationEdgeConfigResponseBody' from JSON`,
  );
}
