/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetFirewallConfigRequest = {
  projectId: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
  /**
   * The deployed configVersion for the firewall configuration
   */
  configVersion: string;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction
  >;

/**
 * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
 */
export type GetFirewallConfigSd = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction
  >;

/**
 * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
 */
export type GetFirewallConfigMa = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction;
};

export const GetFirewallConfigSecurityResponseAction = {
  Deny: "deny",
  Log: "log",
} as const;
export type GetFirewallConfigSecurityResponseAction = ClosedEnum<
  typeof GetFirewallConfigSecurityResponseAction
>;

/**
 * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
 */
export type GetFirewallConfigLfi = {
  active: boolean;
  action: GetFirewallConfigSecurityResponseAction;
};

export const GetFirewallConfigSecurityResponse200Action = {
  Deny: "deny",
  Log: "log",
} as const;
export type GetFirewallConfigSecurityResponse200Action = ClosedEnum<
  typeof GetFirewallConfigSecurityResponse200Action
>;

/**
 * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
 */
export type GetFirewallConfigRfi = {
  active: boolean;
  action: GetFirewallConfigSecurityResponse200Action;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONAction = {
  Deny: "deny",
  Log: "log",
} as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONAction =
  ClosedEnum<typeof GetFirewallConfigSecurityResponse200ApplicationJSONAction>;

/**
 * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
 */
export type GetFirewallConfigRce = {
  active: boolean;
  action: GetFirewallConfigSecurityResponse200ApplicationJSONAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction
  >;

/**
 * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
 */
export type GetFirewallConfigPhp = {
  active: boolean;
  action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction
  >;

/**
 * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
 */
export type GetFirewallConfigGen = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction
  >;

/**
 * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
 */
export type GetFirewallConfigXss = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction
  >;

/**
 * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
 */
export type GetFirewallConfigSqli = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction
  >;

/**
 * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
 */
export type GetFirewallConfigSf = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction =
  {
    Deny: "deny",
    Log: "log",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction
  >;

/**
 * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
 */
export type GetFirewallConfigJava = {
  active: boolean;
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction;
};

/**
 * Custom Ruleset
 */
export type GetFirewallConfigCrs = {
  /**
   * Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
   */
  sd: GetFirewallConfigSd;
  /**
   * Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.
   */
  ma: GetFirewallConfigMa;
  /**
   * Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.
   */
  lfi: GetFirewallConfigLfi;
  /**
   * Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.
   */
  rfi: GetFirewallConfigRfi;
  /**
   * Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.
   */
  rce: GetFirewallConfigRce;
  /**
   * PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
   */
  php: GetFirewallConfigPhp;
  /**
   * Generic Attack - Provide broad protection from various undefined or novel attack vectors.
   */
  gen: GetFirewallConfigGen;
  /**
   * XSS Attack - Prevent injection of malicious scripts into trusted webpages.
   */
  xss: GetFirewallConfigXss;
  /**
   * SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases.
   */
  sqli: GetFirewallConfigSqli;
  /**
   * Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.
   */
  sf: GetFirewallConfigSf;
  /**
   * Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.
   */
  java: GetFirewallConfigJava;
};

/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export const GetFirewallConfigType = {
  Host: "host",
  Path: "path",
  Method: "method",
  Header: "header",
  Query: "query",
  Cookie: "cookie",
  TargetPath: "target_path",
  Route: "route",
  RawPath: "raw_path",
  IpAddress: "ip_address",
  Protocol: "protocol",
  Region: "region",
  Scheme: "scheme",
  Environment: "environment",
  UserAgent: "user_agent",
  GeoContinent: "geo_continent",
  GeoCountry: "geo_country",
  GeoCountryRegion: "geo_country_region",
  GeoCity: "geo_city",
  GeoAsNumber: "geo_as_number",
  Ja4Digest: "ja4_digest",
  Ja3Digest: "ja3_digest",
  RateLimitApiId: "rate_limit_api_id",
  ServerAction: "server_action",
} as const;
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export type GetFirewallConfigType = ClosedEnum<typeof GetFirewallConfigType>;

export const GetFirewallConfigOp = {
  Re: "re",
  Eq: "eq",
  Ex: "ex",
  Inc: "inc",
  Pre: "pre",
  Suf: "suf",
  Sub: "sub",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
  Nex: "nex",
  Ninc: "ninc",
  Neq: "neq",
} as const;
export type GetFirewallConfigOp = ClosedEnum<typeof GetFirewallConfigOp>;

export type GetFirewallConfigValue = string | number | Array<string>;

export type GetFirewallConfigConditions = {
  /**
   * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
   */
  type: GetFirewallConfigType;
  op: GetFirewallConfigOp;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | number | Array<string> | undefined;
};

export type GetFirewallConfigConditionGroup = {
  conditions: Array<GetFirewallConfigConditions>;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction =
  {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
    Bypass: "bypass",
    RateLimit: "rate_limit",
    Redirect: "redirect",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction
  >;

export const GetFirewallConfigAlgo = {
  FixedWindow: "fixed_window",
  TokenBucket: "token_bucket",
} as const;
export type GetFirewallConfigAlgo = ClosedEnum<typeof GetFirewallConfigAlgo>;

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction =
  {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
    RateLimit: "rate_limit",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction
  >;

export type GetFirewallConfigRateLimit = {
  algo: GetFirewallConfigAlgo;
  window: number;
  limit: number;
  keys: Array<string>;
  action?:
    | GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction
    | null
    | undefined;
};

export type GetFirewallConfigRedirect = {
  location: string;
  permanent: boolean;
};

export type GetFirewallConfigMitigate = {
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction;
  rateLimit?: GetFirewallConfigRateLimit | null | undefined;
  redirect?: GetFirewallConfigRedirect | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

export type GetFirewallConfigAction = {
  mitigate?: GetFirewallConfigMitigate | undefined;
};

export type GetFirewallConfigRules = {
  id: string;
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<GetFirewallConfigConditionGroup>;
  action: GetFirewallConfigAction;
};

export const GetFirewallConfigSecurityAction = {
  Deny: "deny",
  Log: "log",
  Challenge: "challenge",
  Bypass: "bypass",
} as const;
export type GetFirewallConfigSecurityAction = ClosedEnum<
  typeof GetFirewallConfigSecurityAction
>;

export type GetFirewallConfigIps = {
  id: string;
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: GetFirewallConfigSecurityAction;
};

export type Changes = {};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction =
  {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction
  >;

export type BotProtection = {
  active: boolean;
  action?:
    | GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction
    | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction =
  {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction
  >;

export type AiBots = {
  active: boolean;
  action?:
    | GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction
    | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction =
  {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
  } as const;
export type GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction =
  ClosedEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction
  >;

export type Owasp = {
  active: boolean;
  action?:
    | GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction
    | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

export type ManagedRules = {
  botProtection?: BotProtection | undefined;
  aiBots?: AiBots | undefined;
  owasp?: Owasp | undefined;
};

/**
 * If the firewall configuration includes a [custom managed ruleset](https://vercel.com/docs/security/vercel-waf/managed-rulesets), it will include a `crs` item that has the following values: sd: Scanner Detection ma: Multipart Attack lfi: Local File Inclusion Attack rfi: Remote File Inclusion Attack rce: Remote Execution Attack php: PHP Attack gen: Generic Attack xss: XSS Attack sqli: SQL Injection Attack sf: Session Fixation Attack java: Java Attack
 */
export type GetFirewallConfigResponseBody = {
  ownerId: string;
  projectKey: string;
  id: string;
  version: number;
  updatedAt: string;
  firewallEnabled: boolean;
  /**
   * Custom Ruleset
   */
  crs: GetFirewallConfigCrs;
  rules: Array<GetFirewallConfigRules>;
  ips: Array<GetFirewallConfigIps>;
  changes: Array<Changes>;
  managedRules?: ManagedRules | undefined;
  botIdEnabled?: boolean | undefined;
};

/** @internal */
export const GetFirewallConfigRequest$inboundSchema: z.ZodType<
  GetFirewallConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  configVersion: z.string(),
});

/** @internal */
export type GetFirewallConfigRequest$Outbound = {
  projectId: string;
  teamId?: string | undefined;
  slug?: string | undefined;
  configVersion: string;
};

/** @internal */
export const GetFirewallConfigRequest$outboundSchema: z.ZodType<
  GetFirewallConfigRequest$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRequest
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  configVersion: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRequest$ {
  /** @deprecated use `GetFirewallConfigRequest$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRequest$inboundSchema;
  /** @deprecated use `GetFirewallConfigRequest$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRequest$outboundSchema;
  /** @deprecated use `GetFirewallConfigRequest$Outbound` instead. */
  export type Outbound = GetFirewallConfigRequest$Outbound;
}

export function getFirewallConfigRequestToJSON(
  getFirewallConfigRequest: GetFirewallConfigRequest,
): string {
  return JSON.stringify(
    GetFirewallConfigRequest$outboundSchema.parse(getFirewallConfigRequest),
  );
}

export function getFirewallConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRequest' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigSd$inboundSchema: z.ZodType<
  GetFirewallConfigSd,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigSd$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigSd$outboundSchema: z.ZodType<
  GetFirewallConfigSd$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigSd
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSd$ {
  /** @deprecated use `GetFirewallConfigSd$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigSd$inboundSchema;
  /** @deprecated use `GetFirewallConfigSd$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigSd$outboundSchema;
  /** @deprecated use `GetFirewallConfigSd$Outbound` instead. */
  export type Outbound = GetFirewallConfigSd$Outbound;
}

export function getFirewallConfigSdToJSON(
  getFirewallConfigSd: GetFirewallConfigSd,
): string {
  return JSON.stringify(
    GetFirewallConfigSd$outboundSchema.parse(getFirewallConfigSd),
  );
}

export function getFirewallConfigSdFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigSd, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigSd$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigSd' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigMa$inboundSchema: z.ZodType<
  GetFirewallConfigMa,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigMa$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigMa$outboundSchema: z.ZodType<
  GetFirewallConfigMa$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigMa
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigMa$ {
  /** @deprecated use `GetFirewallConfigMa$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigMa$inboundSchema;
  /** @deprecated use `GetFirewallConfigMa$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigMa$outboundSchema;
  /** @deprecated use `GetFirewallConfigMa$Outbound` instead. */
  export type Outbound = GetFirewallConfigMa$Outbound;
}

export function getFirewallConfigMaToJSON(
  getFirewallConfigMa: GetFirewallConfigMa,
): string {
  return JSON.stringify(
    GetFirewallConfigMa$outboundSchema.parse(getFirewallConfigMa),
  );
}

export function getFirewallConfigMaFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigMa, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigMa$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigMa' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponseAction$inboundSchema:
  z.ZodNativeEnum<typeof GetFirewallConfigSecurityResponseAction> = z
    .nativeEnum(GetFirewallConfigSecurityResponseAction);

/** @internal */
export const GetFirewallConfigSecurityResponseAction$outboundSchema:
  z.ZodNativeEnum<typeof GetFirewallConfigSecurityResponseAction> =
    GetFirewallConfigSecurityResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponseAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponseAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponseAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponseAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponseAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigLfi$inboundSchema: z.ZodType<
  GetFirewallConfigLfi,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action: GetFirewallConfigSecurityResponseAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigLfi$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigLfi$outboundSchema: z.ZodType<
  GetFirewallConfigLfi$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigLfi
> = z.object({
  active: z.boolean(),
  action: GetFirewallConfigSecurityResponseAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigLfi$ {
  /** @deprecated use `GetFirewallConfigLfi$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigLfi$inboundSchema;
  /** @deprecated use `GetFirewallConfigLfi$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigLfi$outboundSchema;
  /** @deprecated use `GetFirewallConfigLfi$Outbound` instead. */
  export type Outbound = GetFirewallConfigLfi$Outbound;
}

export function getFirewallConfigLfiToJSON(
  getFirewallConfigLfi: GetFirewallConfigLfi,
): string {
  return JSON.stringify(
    GetFirewallConfigLfi$outboundSchema.parse(getFirewallConfigLfi),
  );
}

export function getFirewallConfigLfiFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigLfi, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigLfi$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigLfi' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200Action$inboundSchema:
  z.ZodNativeEnum<typeof GetFirewallConfigSecurityResponse200Action> = z
    .nativeEnum(GetFirewallConfigSecurityResponse200Action);

/** @internal */
export const GetFirewallConfigSecurityResponse200Action$outboundSchema:
  z.ZodNativeEnum<typeof GetFirewallConfigSecurityResponse200Action> =
    GetFirewallConfigSecurityResponse200Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200Action$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200Action$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200Action$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200Action$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200Action$outboundSchema;
}

/** @internal */
export const GetFirewallConfigRfi$inboundSchema: z.ZodType<
  GetFirewallConfigRfi,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action: GetFirewallConfigSecurityResponse200Action$inboundSchema,
});

/** @internal */
export type GetFirewallConfigRfi$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigRfi$outboundSchema: z.ZodType<
  GetFirewallConfigRfi$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRfi
> = z.object({
  active: z.boolean(),
  action: GetFirewallConfigSecurityResponse200Action$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRfi$ {
  /** @deprecated use `GetFirewallConfigRfi$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRfi$inboundSchema;
  /** @deprecated use `GetFirewallConfigRfi$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRfi$outboundSchema;
  /** @deprecated use `GetFirewallConfigRfi$Outbound` instead. */
  export type Outbound = GetFirewallConfigRfi$Outbound;
}

export function getFirewallConfigRfiToJSON(
  getFirewallConfigRfi: GetFirewallConfigRfi,
): string {
  return JSON.stringify(
    GetFirewallConfigRfi$outboundSchema.parse(getFirewallConfigRfi),
  );
}

export function getFirewallConfigRfiFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRfi, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRfi$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRfi' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONAction
  > = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONAction);

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONAction
  > = GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigRce$inboundSchema: z.ZodType<
  GetFirewallConfigRce,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigRce$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigRce$outboundSchema: z.ZodType<
  GetFirewallConfigRce$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRce
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRce$ {
  /** @deprecated use `GetFirewallConfigRce$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRce$inboundSchema;
  /** @deprecated use `GetFirewallConfigRce$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRce$outboundSchema;
  /** @deprecated use `GetFirewallConfigRce$Outbound` instead. */
  export type Outbound = GetFirewallConfigRce$Outbound;
}

export function getFirewallConfigRceToJSON(
  getFirewallConfigRce: GetFirewallConfigRce,
): string {
  return JSON.stringify(
    GetFirewallConfigRce$outboundSchema.parse(getFirewallConfigRce),
  );
}

export function getFirewallConfigRceFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRce, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRce$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRce' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigPhp$inboundSchema: z.ZodType<
  GetFirewallConfigPhp,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigPhp$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigPhp$outboundSchema: z.ZodType<
  GetFirewallConfigPhp$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigPhp
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigPhp$ {
  /** @deprecated use `GetFirewallConfigPhp$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigPhp$inboundSchema;
  /** @deprecated use `GetFirewallConfigPhp$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigPhp$outboundSchema;
  /** @deprecated use `GetFirewallConfigPhp$Outbound` instead. */
  export type Outbound = GetFirewallConfigPhp$Outbound;
}

export function getFirewallConfigPhpToJSON(
  getFirewallConfigPhp: GetFirewallConfigPhp,
): string {
  return JSON.stringify(
    GetFirewallConfigPhp$outboundSchema.parse(getFirewallConfigPhp),
  );
}

export function getFirewallConfigPhpFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigPhp, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigPhp$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigPhp' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigGen$inboundSchema: z.ZodType<
  GetFirewallConfigGen,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigGen$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigGen$outboundSchema: z.ZodType<
  GetFirewallConfigGen$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigGen
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigGen$ {
  /** @deprecated use `GetFirewallConfigGen$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigGen$inboundSchema;
  /** @deprecated use `GetFirewallConfigGen$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigGen$outboundSchema;
  /** @deprecated use `GetFirewallConfigGen$Outbound` instead. */
  export type Outbound = GetFirewallConfigGen$Outbound;
}

export function getFirewallConfigGenToJSON(
  getFirewallConfigGen: GetFirewallConfigGen,
): string {
  return JSON.stringify(
    GetFirewallConfigGen$outboundSchema.parse(getFirewallConfigGen),
  );
}

export function getFirewallConfigGenFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigGen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigGen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigGen' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigXss$inboundSchema: z.ZodType<
  GetFirewallConfigXss,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigXss$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigXss$outboundSchema: z.ZodType<
  GetFirewallConfigXss$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigXss
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigXss$ {
  /** @deprecated use `GetFirewallConfigXss$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigXss$inboundSchema;
  /** @deprecated use `GetFirewallConfigXss$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigXss$outboundSchema;
  /** @deprecated use `GetFirewallConfigXss$Outbound` instead. */
  export type Outbound = GetFirewallConfigXss$Outbound;
}

export function getFirewallConfigXssToJSON(
  getFirewallConfigXss: GetFirewallConfigXss,
): string {
  return JSON.stringify(
    GetFirewallConfigXss$outboundSchema.parse(getFirewallConfigXss),
  );
}

export function getFirewallConfigXssFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigXss, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigXss$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigXss' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigSqli$inboundSchema: z.ZodType<
  GetFirewallConfigSqli,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigSqli$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigSqli$outboundSchema: z.ZodType<
  GetFirewallConfigSqli$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigSqli
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSqli$ {
  /** @deprecated use `GetFirewallConfigSqli$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigSqli$inboundSchema;
  /** @deprecated use `GetFirewallConfigSqli$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigSqli$outboundSchema;
  /** @deprecated use `GetFirewallConfigSqli$Outbound` instead. */
  export type Outbound = GetFirewallConfigSqli$Outbound;
}

export function getFirewallConfigSqliToJSON(
  getFirewallConfigSqli: GetFirewallConfigSqli,
): string {
  return JSON.stringify(
    GetFirewallConfigSqli$outboundSchema.parse(getFirewallConfigSqli),
  );
}

export function getFirewallConfigSqliFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigSqli, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigSqli$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigSqli' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigSf$inboundSchema: z.ZodType<
  GetFirewallConfigSf,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigSf$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigSf$outboundSchema: z.ZodType<
  GetFirewallConfigSf$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigSf
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSf$ {
  /** @deprecated use `GetFirewallConfigSf$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigSf$inboundSchema;
  /** @deprecated use `GetFirewallConfigSf$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigSf$outboundSchema;
  /** @deprecated use `GetFirewallConfigSf$Outbound` instead. */
  export type Outbound = GetFirewallConfigSf$Outbound;
}

export function getFirewallConfigSfToJSON(
  getFirewallConfigSf: GetFirewallConfigSf,
): string {
  return JSON.stringify(
    GetFirewallConfigSf$outboundSchema.parse(getFirewallConfigSf),
  );
}

export function getFirewallConfigSfFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigSf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigSf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigSf' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigJava$inboundSchema: z.ZodType<
  GetFirewallConfigJava,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigJava$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const GetFirewallConfigJava$outboundSchema: z.ZodType<
  GetFirewallConfigJava$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigJava
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigJava$ {
  /** @deprecated use `GetFirewallConfigJava$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigJava$inboundSchema;
  /** @deprecated use `GetFirewallConfigJava$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigJava$outboundSchema;
  /** @deprecated use `GetFirewallConfigJava$Outbound` instead. */
  export type Outbound = GetFirewallConfigJava$Outbound;
}

export function getFirewallConfigJavaToJSON(
  getFirewallConfigJava: GetFirewallConfigJava,
): string {
  return JSON.stringify(
    GetFirewallConfigJava$outboundSchema.parse(getFirewallConfigJava),
  );
}

export function getFirewallConfigJavaFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigJava, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigJava$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigJava' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigCrs$inboundSchema: z.ZodType<
  GetFirewallConfigCrs,
  z.ZodTypeDef,
  unknown
> = z.object({
  sd: z.lazy(() => GetFirewallConfigSd$inboundSchema),
  ma: z.lazy(() => GetFirewallConfigMa$inboundSchema),
  lfi: z.lazy(() => GetFirewallConfigLfi$inboundSchema),
  rfi: z.lazy(() => GetFirewallConfigRfi$inboundSchema),
  rce: z.lazy(() => GetFirewallConfigRce$inboundSchema),
  php: z.lazy(() => GetFirewallConfigPhp$inboundSchema),
  gen: z.lazy(() => GetFirewallConfigGen$inboundSchema),
  xss: z.lazy(() => GetFirewallConfigXss$inboundSchema),
  sqli: z.lazy(() => GetFirewallConfigSqli$inboundSchema),
  sf: z.lazy(() => GetFirewallConfigSf$inboundSchema),
  java: z.lazy(() => GetFirewallConfigJava$inboundSchema),
});

/** @internal */
export type GetFirewallConfigCrs$Outbound = {
  sd: GetFirewallConfigSd$Outbound;
  ma: GetFirewallConfigMa$Outbound;
  lfi: GetFirewallConfigLfi$Outbound;
  rfi: GetFirewallConfigRfi$Outbound;
  rce: GetFirewallConfigRce$Outbound;
  php: GetFirewallConfigPhp$Outbound;
  gen: GetFirewallConfigGen$Outbound;
  xss: GetFirewallConfigXss$Outbound;
  sqli: GetFirewallConfigSqli$Outbound;
  sf: GetFirewallConfigSf$Outbound;
  java: GetFirewallConfigJava$Outbound;
};

/** @internal */
export const GetFirewallConfigCrs$outboundSchema: z.ZodType<
  GetFirewallConfigCrs$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigCrs
> = z.object({
  sd: z.lazy(() => GetFirewallConfigSd$outboundSchema),
  ma: z.lazy(() => GetFirewallConfigMa$outboundSchema),
  lfi: z.lazy(() => GetFirewallConfigLfi$outboundSchema),
  rfi: z.lazy(() => GetFirewallConfigRfi$outboundSchema),
  rce: z.lazy(() => GetFirewallConfigRce$outboundSchema),
  php: z.lazy(() => GetFirewallConfigPhp$outboundSchema),
  gen: z.lazy(() => GetFirewallConfigGen$outboundSchema),
  xss: z.lazy(() => GetFirewallConfigXss$outboundSchema),
  sqli: z.lazy(() => GetFirewallConfigSqli$outboundSchema),
  sf: z.lazy(() => GetFirewallConfigSf$outboundSchema),
  java: z.lazy(() => GetFirewallConfigJava$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigCrs$ {
  /** @deprecated use `GetFirewallConfigCrs$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigCrs$inboundSchema;
  /** @deprecated use `GetFirewallConfigCrs$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigCrs$outboundSchema;
  /** @deprecated use `GetFirewallConfigCrs$Outbound` instead. */
  export type Outbound = GetFirewallConfigCrs$Outbound;
}

export function getFirewallConfigCrsToJSON(
  getFirewallConfigCrs: GetFirewallConfigCrs,
): string {
  return JSON.stringify(
    GetFirewallConfigCrs$outboundSchema.parse(getFirewallConfigCrs),
  );
}

export function getFirewallConfigCrsFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigCrs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigCrs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigCrs' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigType$inboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigType
> = z.nativeEnum(GetFirewallConfigType);

/** @internal */
export const GetFirewallConfigType$outboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigType
> = GetFirewallConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigType$ {
  /** @deprecated use `GetFirewallConfigType$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigType$inboundSchema;
  /** @deprecated use `GetFirewallConfigType$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigType$outboundSchema;
}

/** @internal */
export const GetFirewallConfigOp$inboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigOp
> = z.nativeEnum(GetFirewallConfigOp);

/** @internal */
export const GetFirewallConfigOp$outboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigOp
> = GetFirewallConfigOp$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigOp$ {
  /** @deprecated use `GetFirewallConfigOp$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigOp$inboundSchema;
  /** @deprecated use `GetFirewallConfigOp$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigOp$outboundSchema;
}

/** @internal */
export const GetFirewallConfigValue$inboundSchema: z.ZodType<
  GetFirewallConfigValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number(), z.array(z.string())]);

/** @internal */
export type GetFirewallConfigValue$Outbound = string | number | Array<string>;

/** @internal */
export const GetFirewallConfigValue$outboundSchema: z.ZodType<
  GetFirewallConfigValue$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigValue
> = z.union([z.string(), z.number(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigValue$ {
  /** @deprecated use `GetFirewallConfigValue$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigValue$inboundSchema;
  /** @deprecated use `GetFirewallConfigValue$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigValue$outboundSchema;
  /** @deprecated use `GetFirewallConfigValue$Outbound` instead. */
  export type Outbound = GetFirewallConfigValue$Outbound;
}

export function getFirewallConfigValueToJSON(
  getFirewallConfigValue: GetFirewallConfigValue,
): string {
  return JSON.stringify(
    GetFirewallConfigValue$outboundSchema.parse(getFirewallConfigValue),
  );
}

export function getFirewallConfigValueFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigValue' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigConditions$inboundSchema: z.ZodType<
  GetFirewallConfigConditions,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetFirewallConfigType$inboundSchema,
  op: GetFirewallConfigOp$inboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.number(), z.array(z.string())]).optional(),
});

/** @internal */
export type GetFirewallConfigConditions$Outbound = {
  type: string;
  op: string;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | number | Array<string> | undefined;
};

/** @internal */
export const GetFirewallConfigConditions$outboundSchema: z.ZodType<
  GetFirewallConfigConditions$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigConditions
> = z.object({
  type: GetFirewallConfigType$outboundSchema,
  op: GetFirewallConfigOp$outboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.number(), z.array(z.string())]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigConditions$ {
  /** @deprecated use `GetFirewallConfigConditions$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigConditions$inboundSchema;
  /** @deprecated use `GetFirewallConfigConditions$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigConditions$outboundSchema;
  /** @deprecated use `GetFirewallConfigConditions$Outbound` instead. */
  export type Outbound = GetFirewallConfigConditions$Outbound;
}

export function getFirewallConfigConditionsToJSON(
  getFirewallConfigConditions: GetFirewallConfigConditions,
): string {
  return JSON.stringify(
    GetFirewallConfigConditions$outboundSchema.parse(
      getFirewallConfigConditions,
    ),
  );
}

export function getFirewallConfigConditionsFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigConditions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigConditions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigConditions' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigConditionGroup$inboundSchema: z.ZodType<
  GetFirewallConfigConditionGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  conditions: z.array(z.lazy(() => GetFirewallConfigConditions$inboundSchema)),
});

/** @internal */
export type GetFirewallConfigConditionGroup$Outbound = {
  conditions: Array<GetFirewallConfigConditions$Outbound>;
};

/** @internal */
export const GetFirewallConfigConditionGroup$outboundSchema: z.ZodType<
  GetFirewallConfigConditionGroup$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigConditionGroup
> = z.object({
  conditions: z.array(z.lazy(() => GetFirewallConfigConditions$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigConditionGroup$ {
  /** @deprecated use `GetFirewallConfigConditionGroup$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigConditionGroup$inboundSchema;
  /** @deprecated use `GetFirewallConfigConditionGroup$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigConditionGroup$outboundSchema;
  /** @deprecated use `GetFirewallConfigConditionGroup$Outbound` instead. */
  export type Outbound = GetFirewallConfigConditionGroup$Outbound;
}

export function getFirewallConfigConditionGroupToJSON(
  getFirewallConfigConditionGroup: GetFirewallConfigConditionGroup,
): string {
  return JSON.stringify(
    GetFirewallConfigConditionGroup$outboundSchema.parse(
      getFirewallConfigConditionGroup,
    ),
  );
}

export function getFirewallConfigConditionGroupFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigConditionGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigConditionGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigConditionGroup' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigAlgo$inboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigAlgo
> = z.nativeEnum(GetFirewallConfigAlgo);

/** @internal */
export const GetFirewallConfigAlgo$outboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigAlgo
> = GetFirewallConfigAlgo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigAlgo$ {
  /** @deprecated use `GetFirewallConfigAlgo$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigAlgo$inboundSchema;
  /** @deprecated use `GetFirewallConfigAlgo$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigAlgo$outboundSchema;
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigRateLimit$inboundSchema: z.ZodType<
  GetFirewallConfigRateLimit,
  z.ZodTypeDef,
  unknown
> = z.object({
  algo: GetFirewallConfigAlgo$inboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema,
  ).optional(),
});

/** @internal */
export type GetFirewallConfigRateLimit$Outbound = {
  algo: string;
  window: number;
  limit: number;
  keys: Array<string>;
  action?: string | null | undefined;
};

/** @internal */
export const GetFirewallConfigRateLimit$outboundSchema: z.ZodType<
  GetFirewallConfigRateLimit$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRateLimit
> = z.object({
  algo: GetFirewallConfigAlgo$outboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRateLimit$ {
  /** @deprecated use `GetFirewallConfigRateLimit$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRateLimit$inboundSchema;
  /** @deprecated use `GetFirewallConfigRateLimit$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRateLimit$outboundSchema;
  /** @deprecated use `GetFirewallConfigRateLimit$Outbound` instead. */
  export type Outbound = GetFirewallConfigRateLimit$Outbound;
}

export function getFirewallConfigRateLimitToJSON(
  getFirewallConfigRateLimit: GetFirewallConfigRateLimit,
): string {
  return JSON.stringify(
    GetFirewallConfigRateLimit$outboundSchema.parse(getFirewallConfigRateLimit),
  );
}

export function getFirewallConfigRateLimitFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRateLimit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRateLimit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRateLimit' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigRedirect$inboundSchema: z.ZodType<
  GetFirewallConfigRedirect,
  z.ZodTypeDef,
  unknown
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/** @internal */
export type GetFirewallConfigRedirect$Outbound = {
  location: string;
  permanent: boolean;
};

/** @internal */
export const GetFirewallConfigRedirect$outboundSchema: z.ZodType<
  GetFirewallConfigRedirect$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRedirect
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRedirect$ {
  /** @deprecated use `GetFirewallConfigRedirect$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRedirect$inboundSchema;
  /** @deprecated use `GetFirewallConfigRedirect$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRedirect$outboundSchema;
  /** @deprecated use `GetFirewallConfigRedirect$Outbound` instead. */
  export type Outbound = GetFirewallConfigRedirect$Outbound;
}

export function getFirewallConfigRedirectToJSON(
  getFirewallConfigRedirect: GetFirewallConfigRedirect,
): string {
  return JSON.stringify(
    GetFirewallConfigRedirect$outboundSchema.parse(getFirewallConfigRedirect),
  );
}

export function getFirewallConfigRedirectFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRedirect, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRedirect$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRedirect' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigMitigate$inboundSchema: z.ZodType<
  GetFirewallConfigMitigate,
  z.ZodTypeDef,
  unknown
> = z.object({
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema,
  rateLimit: z.nullable(z.lazy(() => GetFirewallConfigRateLimit$inboundSchema))
    .optional(),
  redirect: z.nullable(z.lazy(() => GetFirewallConfigRedirect$inboundSchema))
    .optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type GetFirewallConfigMitigate$Outbound = {
  action: string;
  rateLimit?: GetFirewallConfigRateLimit$Outbound | null | undefined;
  redirect?: GetFirewallConfigRedirect$Outbound | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

/** @internal */
export const GetFirewallConfigMitigate$outboundSchema: z.ZodType<
  GetFirewallConfigMitigate$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigMitigate
> = z.object({
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema,
  rateLimit: z.nullable(z.lazy(() => GetFirewallConfigRateLimit$outboundSchema))
    .optional(),
  redirect: z.nullable(z.lazy(() => GetFirewallConfigRedirect$outboundSchema))
    .optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigMitigate$ {
  /** @deprecated use `GetFirewallConfigMitigate$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigMitigate$inboundSchema;
  /** @deprecated use `GetFirewallConfigMitigate$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigMitigate$outboundSchema;
  /** @deprecated use `GetFirewallConfigMitigate$Outbound` instead. */
  export type Outbound = GetFirewallConfigMitigate$Outbound;
}

export function getFirewallConfigMitigateToJSON(
  getFirewallConfigMitigate: GetFirewallConfigMitigate,
): string {
  return JSON.stringify(
    GetFirewallConfigMitigate$outboundSchema.parse(getFirewallConfigMitigate),
  );
}

export function getFirewallConfigMitigateFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigMitigate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigMitigate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigMitigate' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigAction$inboundSchema: z.ZodType<
  GetFirewallConfigAction,
  z.ZodTypeDef,
  unknown
> = z.object({
  mitigate: z.lazy(() => GetFirewallConfigMitigate$inboundSchema).optional(),
});

/** @internal */
export type GetFirewallConfigAction$Outbound = {
  mitigate?: GetFirewallConfigMitigate$Outbound | undefined;
};

/** @internal */
export const GetFirewallConfigAction$outboundSchema: z.ZodType<
  GetFirewallConfigAction$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigAction
> = z.object({
  mitigate: z.lazy(() => GetFirewallConfigMitigate$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigAction$ {
  /** @deprecated use `GetFirewallConfigAction$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigAction$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigAction$outboundSchema;
  /** @deprecated use `GetFirewallConfigAction$Outbound` instead. */
  export type Outbound = GetFirewallConfigAction$Outbound;
}

export function getFirewallConfigActionToJSON(
  getFirewallConfigAction: GetFirewallConfigAction,
): string {
  return JSON.stringify(
    GetFirewallConfigAction$outboundSchema.parse(getFirewallConfigAction),
  );
}

export function getFirewallConfigActionFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigAction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigAction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigAction' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigRules$inboundSchema: z.ZodType<
  GetFirewallConfigRules,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  description: z.string().optional(),
  active: z.boolean(),
  conditionGroup: z.array(
    z.lazy(() => GetFirewallConfigConditionGroup$inboundSchema),
  ),
  action: z.lazy(() => GetFirewallConfigAction$inboundSchema),
});

/** @internal */
export type GetFirewallConfigRules$Outbound = {
  id: string;
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<GetFirewallConfigConditionGroup$Outbound>;
  action: GetFirewallConfigAction$Outbound;
};

/** @internal */
export const GetFirewallConfigRules$outboundSchema: z.ZodType<
  GetFirewallConfigRules$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigRules
> = z.object({
  id: z.string(),
  name: z.string(),
  description: z.string().optional(),
  active: z.boolean(),
  conditionGroup: z.array(
    z.lazy(() => GetFirewallConfigConditionGroup$outboundSchema),
  ),
  action: z.lazy(() => GetFirewallConfigAction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigRules$ {
  /** @deprecated use `GetFirewallConfigRules$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigRules$inboundSchema;
  /** @deprecated use `GetFirewallConfigRules$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigRules$outboundSchema;
  /** @deprecated use `GetFirewallConfigRules$Outbound` instead. */
  export type Outbound = GetFirewallConfigRules$Outbound;
}

export function getFirewallConfigRulesToJSON(
  getFirewallConfigRules: GetFirewallConfigRules,
): string {
  return JSON.stringify(
    GetFirewallConfigRules$outboundSchema.parse(getFirewallConfigRules),
  );
}

export function getFirewallConfigRulesFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigRules, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigRules$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigRules' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityAction$inboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigSecurityAction
> = z.nativeEnum(GetFirewallConfigSecurityAction);

/** @internal */
export const GetFirewallConfigSecurityAction$outboundSchema: z.ZodNativeEnum<
  typeof GetFirewallConfigSecurityAction
> = GetFirewallConfigSecurityAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityAction$ {
  /** @deprecated use `GetFirewallConfigSecurityAction$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigSecurityAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityAction$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigSecurityAction$outboundSchema;
}

/** @internal */
export const GetFirewallConfigIps$inboundSchema: z.ZodType<
  GetFirewallConfigIps,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  hostname: z.string(),
  ip: z.string(),
  notes: z.string().optional(),
  action: GetFirewallConfigSecurityAction$inboundSchema,
});

/** @internal */
export type GetFirewallConfigIps$Outbound = {
  id: string;
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: string;
};

/** @internal */
export const GetFirewallConfigIps$outboundSchema: z.ZodType<
  GetFirewallConfigIps$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigIps
> = z.object({
  id: z.string(),
  hostname: z.string(),
  ip: z.string(),
  notes: z.string().optional(),
  action: GetFirewallConfigSecurityAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigIps$ {
  /** @deprecated use `GetFirewallConfigIps$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigIps$inboundSchema;
  /** @deprecated use `GetFirewallConfigIps$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigIps$outboundSchema;
  /** @deprecated use `GetFirewallConfigIps$Outbound` instead. */
  export type Outbound = GetFirewallConfigIps$Outbound;
}

export function getFirewallConfigIpsToJSON(
  getFirewallConfigIps: GetFirewallConfigIps,
): string {
  return JSON.stringify(
    GetFirewallConfigIps$outboundSchema.parse(getFirewallConfigIps),
  );
}

export function getFirewallConfigIpsFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigIps, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigIps$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigIps' from JSON`,
  );
}

/** @internal */
export const Changes$inboundSchema: z.ZodType<Changes, z.ZodTypeDef, unknown> =
  z.object({});

/** @internal */
export type Changes$Outbound = {};

/** @internal */
export const Changes$outboundSchema: z.ZodType<
  Changes$Outbound,
  z.ZodTypeDef,
  Changes
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Changes$ {
  /** @deprecated use `Changes$inboundSchema` instead. */
  export const inboundSchema = Changes$inboundSchema;
  /** @deprecated use `Changes$outboundSchema` instead. */
  export const outboundSchema = Changes$outboundSchema;
  /** @deprecated use `Changes$Outbound` instead. */
  export type Outbound = Changes$Outbound;
}

export function changesToJSON(changes: Changes): string {
  return JSON.stringify(Changes$outboundSchema.parse(changes));
}

export function changesFromJSON(
  jsonString: string,
): SafeParseResult<Changes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Changes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Changes' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$outboundSchema;
}

/** @internal */
export const BotProtection$inboundSchema: z.ZodType<
  BotProtection,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$inboundSchema
      .optional(),
  updatedAt: z.string().optional(),
  userId: z.string().optional(),
  username: z.string().optional(),
});

/** @internal */
export type BotProtection$Outbound = {
  active: boolean;
  action?: string | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

/** @internal */
export const BotProtection$outboundSchema: z.ZodType<
  BotProtection$Outbound,
  z.ZodTypeDef,
  BotProtection
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAction$outboundSchema
      .optional(),
  updatedAt: z.string().optional(),
  userId: z.string().optional(),
  username: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BotProtection$ {
  /** @deprecated use `BotProtection$inboundSchema` instead. */
  export const inboundSchema = BotProtection$inboundSchema;
  /** @deprecated use `BotProtection$outboundSchema` instead. */
  export const outboundSchema = BotProtection$outboundSchema;
  /** @deprecated use `BotProtection$Outbound` instead. */
  export type Outbound = BotProtection$Outbound;
}

export function botProtectionToJSON(botProtection: BotProtection): string {
  return JSON.stringify(BotProtection$outboundSchema.parse(botProtection));
}

export function botProtectionFromJSON(
  jsonString: string,
): SafeParseResult<BotProtection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BotProtection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BotProtection' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$outboundSchema;
}

/** @internal */
export const AiBots$inboundSchema: z.ZodType<AiBots, z.ZodTypeDef, unknown> = z
  .object({
    active: z.boolean(),
    action:
      GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$inboundSchema
        .optional(),
    updatedAt: z.string().optional(),
    userId: z.string().optional(),
    username: z.string().optional(),
  });

/** @internal */
export type AiBots$Outbound = {
  active: boolean;
  action?: string | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

/** @internal */
export const AiBots$outboundSchema: z.ZodType<
  AiBots$Outbound,
  z.ZodTypeDef,
  AiBots
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesAiBotsAction$outboundSchema
      .optional(),
  updatedAt: z.string().optional(),
  userId: z.string().optional(),
  username: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AiBots$ {
  /** @deprecated use `AiBots$inboundSchema` instead. */
  export const inboundSchema = AiBots$inboundSchema;
  /** @deprecated use `AiBots$outboundSchema` instead. */
  export const outboundSchema = AiBots$outboundSchema;
  /** @deprecated use `AiBots$Outbound` instead. */
  export type Outbound = AiBots$Outbound;
}

export function aiBotsToJSON(aiBots: AiBots): string {
  return JSON.stringify(AiBots$outboundSchema.parse(aiBots));
}

export function aiBotsFromJSON(
  jsonString: string,
): SafeParseResult<AiBots, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AiBots$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AiBots' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$inboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction
  > = z.nativeEnum(
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction,
  );

/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$outboundSchema:
  z.ZodNativeEnum<
    typeof GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction
  > =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$ {
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$inboundSchema` instead. */
  export const inboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$inboundSchema;
  /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$outboundSchema` instead. */
  export const outboundSchema =
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$outboundSchema;
}

/** @internal */
export const Owasp$inboundSchema: z.ZodType<Owasp, z.ZodTypeDef, unknown> = z
  .object({
    active: z.boolean(),
    action:
      GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$inboundSchema
        .optional(),
    updatedAt: z.string().optional(),
    userId: z.string().optional(),
    username: z.string().optional(),
  });

/** @internal */
export type Owasp$Outbound = {
  active: boolean;
  action?: string | undefined;
  updatedAt?: string | undefined;
  userId?: string | undefined;
  username?: string | undefined;
};

/** @internal */
export const Owasp$outboundSchema: z.ZodType<
  Owasp$Outbound,
  z.ZodTypeDef,
  Owasp
> = z.object({
  active: z.boolean(),
  action:
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyManagedRulesOwaspAction$outboundSchema
      .optional(),
  updatedAt: z.string().optional(),
  userId: z.string().optional(),
  username: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Owasp$ {
  /** @deprecated use `Owasp$inboundSchema` instead. */
  export const inboundSchema = Owasp$inboundSchema;
  /** @deprecated use `Owasp$outboundSchema` instead. */
  export const outboundSchema = Owasp$outboundSchema;
  /** @deprecated use `Owasp$Outbound` instead. */
  export type Outbound = Owasp$Outbound;
}

export function owaspToJSON(owasp: Owasp): string {
  return JSON.stringify(Owasp$outboundSchema.parse(owasp));
}

export function owaspFromJSON(
  jsonString: string,
): SafeParseResult<Owasp, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Owasp$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Owasp' from JSON`,
  );
}

/** @internal */
export const ManagedRules$inboundSchema: z.ZodType<
  ManagedRules,
  z.ZodTypeDef,
  unknown
> = z.object({
  bot_protection: z.lazy(() => BotProtection$inboundSchema).optional(),
  ai_bots: z.lazy(() => AiBots$inboundSchema).optional(),
  owasp: z.lazy(() => Owasp$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "bot_protection": "botProtection",
    "ai_bots": "aiBots",
  });
});

/** @internal */
export type ManagedRules$Outbound = {
  bot_protection?: BotProtection$Outbound | undefined;
  ai_bots?: AiBots$Outbound | undefined;
  owasp?: Owasp$Outbound | undefined;
};

/** @internal */
export const ManagedRules$outboundSchema: z.ZodType<
  ManagedRules$Outbound,
  z.ZodTypeDef,
  ManagedRules
> = z.object({
  botProtection: z.lazy(() => BotProtection$outboundSchema).optional(),
  aiBots: z.lazy(() => AiBots$outboundSchema).optional(),
  owasp: z.lazy(() => Owasp$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    botProtection: "bot_protection",
    aiBots: "ai_bots",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ManagedRules$ {
  /** @deprecated use `ManagedRules$inboundSchema` instead. */
  export const inboundSchema = ManagedRules$inboundSchema;
  /** @deprecated use `ManagedRules$outboundSchema` instead. */
  export const outboundSchema = ManagedRules$outboundSchema;
  /** @deprecated use `ManagedRules$Outbound` instead. */
  export type Outbound = ManagedRules$Outbound;
}

export function managedRulesToJSON(managedRules: ManagedRules): string {
  return JSON.stringify(ManagedRules$outboundSchema.parse(managedRules));
}

export function managedRulesFromJSON(
  jsonString: string,
): SafeParseResult<ManagedRules, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ManagedRules$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ManagedRules' from JSON`,
  );
}

/** @internal */
export const GetFirewallConfigResponseBody$inboundSchema: z.ZodType<
  GetFirewallConfigResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  ownerId: z.string(),
  projectKey: z.string(),
  id: z.string(),
  version: z.number(),
  updatedAt: z.string(),
  firewallEnabled: z.boolean(),
  crs: z.lazy(() => GetFirewallConfigCrs$inboundSchema),
  rules: z.array(z.lazy(() => GetFirewallConfigRules$inboundSchema)),
  ips: z.array(z.lazy(() => GetFirewallConfigIps$inboundSchema)),
  changes: z.array(z.lazy(() => Changes$inboundSchema)),
  managedRules: z.lazy(() => ManagedRules$inboundSchema).optional(),
  botIdEnabled: z.boolean().optional(),
});

/** @internal */
export type GetFirewallConfigResponseBody$Outbound = {
  ownerId: string;
  projectKey: string;
  id: string;
  version: number;
  updatedAt: string;
  firewallEnabled: boolean;
  crs: GetFirewallConfigCrs$Outbound;
  rules: Array<GetFirewallConfigRules$Outbound>;
  ips: Array<GetFirewallConfigIps$Outbound>;
  changes: Array<Changes$Outbound>;
  managedRules?: ManagedRules$Outbound | undefined;
  botIdEnabled?: boolean | undefined;
};

/** @internal */
export const GetFirewallConfigResponseBody$outboundSchema: z.ZodType<
  GetFirewallConfigResponseBody$Outbound,
  z.ZodTypeDef,
  GetFirewallConfigResponseBody
> = z.object({
  ownerId: z.string(),
  projectKey: z.string(),
  id: z.string(),
  version: z.number(),
  updatedAt: z.string(),
  firewallEnabled: z.boolean(),
  crs: z.lazy(() => GetFirewallConfigCrs$outboundSchema),
  rules: z.array(z.lazy(() => GetFirewallConfigRules$outboundSchema)),
  ips: z.array(z.lazy(() => GetFirewallConfigIps$outboundSchema)),
  changes: z.array(z.lazy(() => Changes$outboundSchema)),
  managedRules: z.lazy(() => ManagedRules$outboundSchema).optional(),
  botIdEnabled: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFirewallConfigResponseBody$ {
  /** @deprecated use `GetFirewallConfigResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetFirewallConfigResponseBody$inboundSchema;
  /** @deprecated use `GetFirewallConfigResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetFirewallConfigResponseBody$outboundSchema;
  /** @deprecated use `GetFirewallConfigResponseBody$Outbound` instead. */
  export type Outbound = GetFirewallConfigResponseBody$Outbound;
}

export function getFirewallConfigResponseBodyToJSON(
  getFirewallConfigResponseBody: GetFirewallConfigResponseBody,
): string {
  return JSON.stringify(
    GetFirewallConfigResponseBody$outboundSchema.parse(
      getFirewallConfigResponseBody,
    ),
  );
}

export function getFirewallConfigResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetFirewallConfigResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFirewallConfigResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFirewallConfigResponseBody' from JSON`,
  );
}
