/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  RateLimitNotice,
  RateLimitNotice$inboundSchema,
  RateLimitNotice$Outbound,
  RateLimitNotice$outboundSchema,
} from "./ratelimitnotice.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import { VercelError } from "./vercelerror.js";

export type VercelRateLimitErrorError = {
  code: string;
  message: string;
  limit?: RateLimitNotice | undefined;
};

export type VercelRateLimitErrorData = {
  error: VercelRateLimitErrorError;
};

export class VercelRateLimitError extends VercelError {
  error: VercelRateLimitErrorError;

  /** The original data that was passed to this error instance. */
  data$: VercelRateLimitErrorData;

  constructor(
    err: VercelRateLimitErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.error?.message
      || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "VercelRateLimitError";
  }
}

/** @internal */
export const VercelRateLimitErrorError$inboundSchema: z.ZodType<
  VercelRateLimitErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
  limit: RateLimitNotice$inboundSchema.optional(),
});

/** @internal */
export type VercelRateLimitErrorError$Outbound = {
  code: string;
  message: string;
  limit?: RateLimitNotice$Outbound | undefined;
};

/** @internal */
export const VercelRateLimitErrorError$outboundSchema: z.ZodType<
  VercelRateLimitErrorError$Outbound,
  z.ZodTypeDef,
  VercelRateLimitErrorError
> = z.object({
  code: z.string(),
  message: z.string(),
  limit: RateLimitNotice$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VercelRateLimitErrorError$ {
  /** @deprecated use `VercelRateLimitErrorError$inboundSchema` instead. */
  export const inboundSchema = VercelRateLimitErrorError$inboundSchema;
  /** @deprecated use `VercelRateLimitErrorError$outboundSchema` instead. */
  export const outboundSchema = VercelRateLimitErrorError$outboundSchema;
  /** @deprecated use `VercelRateLimitErrorError$Outbound` instead. */
  export type Outbound = VercelRateLimitErrorError$Outbound;
}

export function vercelRateLimitErrorErrorToJSON(
  vercelRateLimitErrorError: VercelRateLimitErrorError,
): string {
  return JSON.stringify(
    VercelRateLimitErrorError$outboundSchema.parse(vercelRateLimitErrorError),
  );
}

export function vercelRateLimitErrorErrorFromJSON(
  jsonString: string,
): SafeParseResult<VercelRateLimitErrorError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VercelRateLimitErrorError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VercelRateLimitErrorError' from JSON`,
  );
}

/** @internal */
export const VercelRateLimitError$inboundSchema: z.ZodType<
  VercelRateLimitError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => VercelRateLimitErrorError$inboundSchema),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new VercelRateLimitError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type VercelRateLimitError$Outbound = {
  error: VercelRateLimitErrorError$Outbound;
};

/** @internal */
export const VercelRateLimitError$outboundSchema: z.ZodType<
  VercelRateLimitError$Outbound,
  z.ZodTypeDef,
  VercelRateLimitError
> = z.instanceof(VercelRateLimitError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() => VercelRateLimitErrorError$outboundSchema),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VercelRateLimitError$ {
  /** @deprecated use `VercelRateLimitError$inboundSchema` instead. */
  export const inboundSchema = VercelRateLimitError$inboundSchema;
  /** @deprecated use `VercelRateLimitError$outboundSchema` instead. */
  export const outboundSchema = VercelRateLimitError$outboundSchema;
  /** @deprecated use `VercelRateLimitError$Outbound` instead. */
  export type Outbound = VercelRateLimitError$Outbound;
}
