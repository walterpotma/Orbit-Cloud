/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type RemoveTeamMemberRequest = {
  /**
   * The user ID of the member.
   */
  uid: string;
  /**
   * The ID of the team to set as the new default team for the Northstar user.
   */
  newDefaultTeamId?: string | undefined;
  teamId: string;
};

/**
 * Successfully removed a member of the team.
 */
export type RemoveTeamMemberResponseBody = {
  /**
   * ID of the team.
   */
  id: string;
};

/** @internal */
export const RemoveTeamMemberRequest$inboundSchema: z.ZodType<
  RemoveTeamMemberRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uid: z.string(),
  newDefaultTeamId: z.string().optional(),
  teamId: z.string(),
});

/** @internal */
export type RemoveTeamMemberRequest$Outbound = {
  uid: string;
  newDefaultTeamId?: string | undefined;
  teamId: string;
};

/** @internal */
export const RemoveTeamMemberRequest$outboundSchema: z.ZodType<
  RemoveTeamMemberRequest$Outbound,
  z.ZodTypeDef,
  RemoveTeamMemberRequest
> = z.object({
  uid: z.string(),
  newDefaultTeamId: z.string().optional(),
  teamId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveTeamMemberRequest$ {
  /** @deprecated use `RemoveTeamMemberRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveTeamMemberRequest$inboundSchema;
  /** @deprecated use `RemoveTeamMemberRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveTeamMemberRequest$outboundSchema;
  /** @deprecated use `RemoveTeamMemberRequest$Outbound` instead. */
  export type Outbound = RemoveTeamMemberRequest$Outbound;
}

export function removeTeamMemberRequestToJSON(
  removeTeamMemberRequest: RemoveTeamMemberRequest,
): string {
  return JSON.stringify(
    RemoveTeamMemberRequest$outboundSchema.parse(removeTeamMemberRequest),
  );
}

export function removeTeamMemberRequestFromJSON(
  jsonString: string,
): SafeParseResult<RemoveTeamMemberRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveTeamMemberRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveTeamMemberRequest' from JSON`,
  );
}

/** @internal */
export const RemoveTeamMemberResponseBody$inboundSchema: z.ZodType<
  RemoveTeamMemberResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type RemoveTeamMemberResponseBody$Outbound = {
  id: string;
};

/** @internal */
export const RemoveTeamMemberResponseBody$outboundSchema: z.ZodType<
  RemoveTeamMemberResponseBody$Outbound,
  z.ZodTypeDef,
  RemoveTeamMemberResponseBody
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveTeamMemberResponseBody$ {
  /** @deprecated use `RemoveTeamMemberResponseBody$inboundSchema` instead. */
  export const inboundSchema = RemoveTeamMemberResponseBody$inboundSchema;
  /** @deprecated use `RemoveTeamMemberResponseBody$outboundSchema` instead. */
  export const outboundSchema = RemoveTeamMemberResponseBody$outboundSchema;
  /** @deprecated use `RemoveTeamMemberResponseBody$Outbound` instead. */
  export type Outbound = RemoveTeamMemberResponseBody$Outbound;
}

export function removeTeamMemberResponseBodyToJSON(
  removeTeamMemberResponseBody: RemoveTeamMemberResponseBody,
): string {
  return JSON.stringify(
    RemoveTeamMemberResponseBody$outboundSchema.parse(
      removeTeamMemberResponseBody,
    ),
  );
}

export function removeTeamMemberResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<RemoveTeamMemberResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveTeamMemberResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveTeamMemberResponseBody' from JSON`,
  );
}
