/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory =
  {
    Experiment: "experiment",
    Flag: "flag",
  } as const;
export type PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory =
  ClosedEnum<
    typeof PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory
  >;

export type PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody =
  {
    slug: string;
    origin: string;
    name?: string | undefined;
    category?:
      | PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory
      | undefined;
    description?: string | undefined;
    isArchived?: boolean | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
  };

export type PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest =
  {
    integrationConfigurationId: string;
    resourceId: string;
    itemId: string;
    requestBody?:
      | PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody
      | undefined;
  };

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory
  > = z.nativeEnum(
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory,
  );

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory
  > =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$ {
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$inboundSchema;
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$outboundSchema;
}

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$inboundSchema:
  z.ZodType<
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    slug: z.string(),
    origin: z.string(),
    name: z.string().optional(),
    category:
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$inboundSchema
        .optional(),
    description: z.string().optional(),
    isArchived: z.boolean().optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
  });

/** @internal */
export type PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$Outbound =
  {
    slug: string;
    origin: string;
    name?: string | undefined;
    category?: string | undefined;
    description?: string | undefined;
    isArchived?: boolean | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
  };

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$outboundSchema:
  z.ZodType<
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$Outbound,
    z.ZodTypeDef,
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody
  > = z.object({
    slug: z.string(),
    origin: z.string(),
    name: z.string().optional(),
    category:
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdCategory$outboundSchema
        .optional(),
    description: z.string().optional(),
    isArchived: z.boolean().optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$ {
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$inboundSchema;
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$outboundSchema;
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$Outbound` instead. */
  export type Outbound =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$Outbound;
}

export function patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBodyToJSON(
  patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody:
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody,
): string {
  return JSON.stringify(
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$outboundSchema
      .parse(
        patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody,
      ),
  );
}

export function patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$inboundSchema:
  z.ZodType<
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    itemId: z.string(),
    RequestBody: z.lazy(() =>
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$Outbound =
  {
    integrationConfigurationId: string;
    resourceId: string;
    itemId: string;
    RequestBody?:
      | PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$Outbound
      | undefined;
  };

/** @internal */
export const PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$outboundSchema:
  z.ZodType<
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$Outbound,
    z.ZodTypeDef,
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest
  > = z.object({
    integrationConfigurationId: z.string(),
    resourceId: z.string(),
    itemId: z.string(),
    requestBody: z.lazy(() =>
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestBody$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$ {
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$inboundSchema;
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$outboundSchema;
  /** @deprecated use `PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$Outbound` instead. */
  export type Outbound =
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$Outbound;
}

export function patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestToJSON(
  patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest:
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest,
): string {
  return JSON.stringify(
    PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$outboundSchema
      .parse(
        patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest,
      ),
  );
}

export function patchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1InstallationsIntegrationConfigurationIdResourcesResourceIdExperimentationItemsItemIdRequest' from JSON`,
  );
}
