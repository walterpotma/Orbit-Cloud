/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetConfigurationProductsRequest = {
  /**
   * ID of the integration configuration
   */
  id: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

export const GetConfigurationProductsStatus = {
  Disabled: "disabled",
  Enabled: "enabled",
} as const;
export type GetConfigurationProductsStatus = ClosedEnum<
  typeof GetConfigurationProductsStatus
>;

export type GetConfigurationProductsRepl = {
  enabled: boolean;
  supportsReadOnlyMode: boolean;
  welcomeMessage?: string | undefined;
};

export type Storage = {
  status: GetConfigurationProductsStatus;
  repl?: GetConfigurationProductsRepl | undefined;
};

export const GetConfigurationProductsIntegrationsStatus = {
  Disabled: "disabled",
  Enabled: "enabled",
} as const;
export type GetConfigurationProductsIntegrationsStatus = ClosedEnum<
  typeof GetConfigurationProductsIntegrationsStatus
>;

export type GetConfigurationProductsExperimentation = {
  status: GetConfigurationProductsIntegrationsStatus;
  edgeConfigSyncingSupport?: boolean | undefined;
};

export const GetConfigurationProductsIntegrationsResponseStatus = {
  Disabled: "disabled",
  Enabled: "enabled",
} as const;
export type GetConfigurationProductsIntegrationsResponseStatus = ClosedEnum<
  typeof GetConfigurationProductsIntegrationsResponseStatus
>;

export type Ai = {
  status: GetConfigurationProductsIntegrationsResponseStatus;
};

export const GetConfigurationProductsIntegrationsResponse200Status = {
  Disabled: "disabled",
  Enabled: "enabled",
} as const;
export type GetConfigurationProductsIntegrationsResponse200Status = ClosedEnum<
  typeof GetConfigurationProductsIntegrationsResponse200Status
>;

export type Authentication = {
  status: GetConfigurationProductsIntegrationsResponse200Status;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus
  >;

export type Observability = {
  status: GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus
  >;

export type Video = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus
  >;

export type Workflow = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus
  >;

export type GetConfigurationProductsChecks = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus
  >;

export const Format = {
  Json: "json",
  Ndjson: "ndjson",
} as const;
export type Format = ClosedEnum<typeof Format>;

export type LogDrain = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus;
  endpoint: string;
  headers?: { [k: string]: string } | undefined;
  format: Format;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus
  >;

export const GetConfigurationProductsFormat = {
  Json: "json",
  Proto: "proto",
} as const;
export type GetConfigurationProductsFormat = ClosedEnum<
  typeof GetConfigurationProductsFormat
>;

export type TraceDrain = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus;
  endpoint: string;
  headers?: { [k: string]: string } | undefined;
  format: GetConfigurationProductsFormat;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus
  >;

export type Messaging = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus;
};

export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus =
  {
    Disabled: "disabled",
    Enabled: "enabled",
  } as const;
export type GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus =
  ClosedEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus
  >;

export type Other = {
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus;
};

export type Protocols = {
  storage?: Storage | undefined;
  experimentation?: GetConfigurationProductsExperimentation | undefined;
  ai?: Ai | undefined;
  authentication?: Authentication | undefined;
  observability?: Observability | undefined;
  video?: Video | undefined;
  workflow?: Workflow | undefined;
  checks?: GetConfigurationProductsChecks | undefined;
  logDrain?: LogDrain | undefined;
  traceDrain?: TraceDrain | undefined;
  messaging?: Messaging | undefined;
  other?: Other | undefined;
};

export const PrimaryProtocol = {
  Storage: "storage",
  Experimentation: "experimentation",
  Ai: "ai",
  Observability: "observability",
  Video: "video",
  Authentication: "authentication",
  Workflow: "workflow",
  Checks: "checks",
  LogDrain: "logDrain",
  TraceDrain: "traceDrain",
  Messaging: "messaging",
  Other: "other",
} as const;
export type PrimaryProtocol = ClosedEnum<typeof PrimaryProtocol>;

export const GetConfigurationProductsType = {
  Object: "object",
} as const;
export type GetConfigurationProductsType = ClosedEnum<
  typeof GetConfigurationProductsType
>;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349 =
  {};

export type PropertiesValue = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349;
};

export const GetConfigurationProductsDisabled3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsDisabled3 = ClosedEnum<
  typeof GetConfigurationProductsDisabled3
>;

export type GetConfigurationProductsDisabled2 = {
  expr: string;
};

export type PropertiesDisabled =
  | GetConfigurationProductsDisabled2
  | boolean
  | GetConfigurationProductsDisabled3;

export const GetConfigurationProductsHidden3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsHidden3 = ClosedEnum<
  typeof GetConfigurationProductsHidden3
>;

export type GetConfigurationProductsHidden2 = {
  expr: string;
};

export type PropertiesHidden =
  | GetConfigurationProductsHidden2
  | boolean
  | GetConfigurationProductsHidden3;

export type Properties9 = {
  value: PropertiesValue;
  disabled?:
    | GetConfigurationProductsDisabled2
    | boolean
    | GetConfigurationProductsDisabled3
    | undefined;
  hidden?:
    | GetConfigurationProductsHidden2
    | boolean
    | GetConfigurationProductsHidden3
    | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType =
  {
    Array: "array",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl =
  {
    MultiVercelRegion: "multi-vercel-region",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type =
  {
    String: "string",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type
  >;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsResponseMinLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsResponseMaxLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsResponsePattern = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsItems = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type;
  description?: string | undefined;
  minLength?:
    | GetConfigurationProductsPropertiesIntegrationsResponseMinLength
    | undefined;
  maxLength?:
    | GetConfigurationProductsPropertiesIntegrationsResponseMaxLength
    | undefined;
  pattern?:
    | GetConfigurationProductsPropertiesIntegrationsResponsePattern
    | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
};

export type GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349 =
  {};

export type GetConfigurationProductsUiOptionsValue = {
  atBRANDAt510349:
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349;
};

export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3 =
  ClosedEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3
  >;

export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsUiOptionsIntegrationsResponseDisabled =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2
  | boolean
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3;

export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3 =
  ClosedEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3
  >;

export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsUiOptionsIntegrationsResponseHidden =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2
  | boolean
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3;

export type GetConfigurationProductsUiOptions3 = {
  value: GetConfigurationProductsUiOptionsValue;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2
    | boolean
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2
    | boolean
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3
    | undefined;
};

export type GetConfigurationProductsUiOptionsAtBRANDAt510349 = {};

export type GetConfigurationProductsUiOptions2 = {
  atBRANDAt510349: GetConfigurationProductsUiOptionsAtBRANDAt510349;
};

export const GetConfigurationProductsDisabledIntegrationsResponse2003 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsDisabledIntegrationsResponse2003 =
  ClosedEnum<typeof GetConfigurationProductsDisabledIntegrationsResponse2003>;

export type GetConfigurationProductsDisabledIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsUiOptionsIntegrationsDisabled =
  | GetConfigurationProductsDisabledIntegrationsResponse2002
  | boolean
  | GetConfigurationProductsDisabledIntegrationsResponse2003;

export const GetConfigurationProductsHiddenIntegrationsResponse2003 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsHiddenIntegrationsResponse2003 = ClosedEnum<
  typeof GetConfigurationProductsHiddenIntegrationsResponse2003
>;

export type GetConfigurationProductsHiddenIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsUiOptionsIntegrationsHidden =
  | GetConfigurationProductsHiddenIntegrationsResponse2002
  | boolean
  | GetConfigurationProductsHiddenIntegrationsResponse2003;

export type GetConfigurationProductsUiOptions1 = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse2002
    | boolean
    | GetConfigurationProductsDisabledIntegrationsResponse2003
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse2002
    | boolean
    | GetConfigurationProductsHiddenIntegrationsResponse2003
    | undefined;
};

export type GetConfigurationProductsPropertiesIntegrationsUiOptions =
  | GetConfigurationProductsUiOptions1
  | GetConfigurationProductsUiOptions2
  | GetConfigurationProductsUiOptions3;

export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  >;

export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3;

export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  >;

export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | boolean
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3;

export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  >;

export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | boolean
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3;

export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | string;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349 =
  {};

export type Default = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349 =
  {};

export type Example = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349;
};

export type Properties8 = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType;
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl;
  items: GetConfigurationProductsPropertiesIntegrationsItems;
  uiOptions: Array<
    | GetConfigurationProductsUiOptions1
    | GetConfigurationProductsUiOptions2
    | GetConfigurationProductsUiOptions3
  >;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | boolean
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | boolean
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue
    | undefined;
  uiPlaceholder?: string | undefined;
  default?: Array<Default> | undefined;
  example?: Array<Example> | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType =
  {
    String: "string",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl =
  {
    VercelRegion: "vercel-region",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl
  >;

export type GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349 = {};

export type UiOptionsValue = {
  atBRANDAt510349: GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349;
};

export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  ClosedEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  >;

export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsUiOptionsDisabled =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | boolean
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3;

export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3 =
  ClosedEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  >;

export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2 =
  {
    expr: string;
  };

export type GetConfigurationProductsUiOptionsHidden =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  | boolean
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3;

export type UiOptions3 = {
  value: UiOptionsValue;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | boolean
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
    | boolean
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
    | undefined;
};

export type UiOptionsAtBRANDAt510349 = {};

export type UiOptions2 = {
  atBRANDAt510349: UiOptionsAtBRANDAt510349;
};

export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3 =
  ClosedEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  >;

export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type UiOptionsDisabled =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2
  | boolean
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3;

export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3 =
  ClosedEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  >;

export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type UiOptionsHidden =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2
  | boolean
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3;

export type UiOptions1 = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2
    | boolean
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2
    | boolean
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3
    | undefined;
};

export type GetConfigurationProductsPropertiesUiOptions =
  | UiOptions1
  | UiOptions2
  | UiOptions3;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesMinLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesMaxLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesPattern = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349;
};

export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3
  >;

export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3;

export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  >;

export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2
  | boolean
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3;

export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  >;

export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2
  | boolean
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3;

export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2
  | string;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue =
  {
    expr: string;
  };

export type Properties7 = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType;
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl;
  uiOptions: Array<UiOptions1 | UiOptions2 | UiOptions3>;
  description?: string | undefined;
  minLength?: GetConfigurationProductsPropertiesMinLength | undefined;
  maxLength?: GetConfigurationProductsPropertiesMaxLength | undefined;
  pattern?: GetConfigurationProductsPropertiesPattern | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2
    | boolean
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2
    | boolean
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue
    | undefined;
  uiPlaceholder?: string | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType =
  {
    Array: "array",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponse200UiControl =
  {
    MultiSelect: "multi-select",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiControl =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200UiControl
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type =
  {
    String: "string",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type
  >;

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsMinLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsMaxLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349 =
  {};

export type GetConfigurationProductsPropertiesIntegrationsPattern = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesItems = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type;
  description?: string | undefined;
  minLength?:
    | GetConfigurationProductsPropertiesIntegrationsMinLength
    | undefined;
  maxLength?:
    | GetConfigurationProductsPropertiesIntegrationsMaxLength
    | undefined;
  pattern?: GetConfigurationProductsPropertiesIntegrationsPattern | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
};

export const GetConfigurationProductsDisabledIntegrationsResponse3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsDisabledIntegrationsResponse3 = ClosedEnum<
  typeof GetConfigurationProductsDisabledIntegrationsResponse3
>;

export type GetConfigurationProductsDisabledIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsDisabled =
  | GetConfigurationProductsDisabledIntegrationsResponse2
  | boolean
  | GetConfigurationProductsDisabledIntegrationsResponse3;

export const GetConfigurationProductsHiddenIntegrationsResponse3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsHiddenIntegrationsResponse3 = ClosedEnum<
  typeof GetConfigurationProductsHiddenIntegrationsResponse3
>;

export type GetConfigurationProductsHiddenIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsHidden =
  | GetConfigurationProductsHiddenIntegrationsResponse2
  | boolean
  | GetConfigurationProductsHiddenIntegrationsResponse3;

export type PropertiesUiOptions = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse2
    | boolean
    | GetConfigurationProductsDisabledIntegrationsResponse3
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse2
    | boolean
    | GetConfigurationProductsHiddenIntegrationsResponse3
    | undefined;
};

export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3
  >;

export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3;

export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3
  >;

export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2
  | boolean
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3;

export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3 =
  {
    Update: "update",
    Create: "create",
  } as const;
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3 =
  ClosedEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3
  >;

export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2
  | boolean
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3;

export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2 =
  {
    expr: string;
  };

export type GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2
  | string;

export type GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue =
  {
    expr: string;
  };

export type Properties6 = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType;
  uiControl: GetConfigurationProductsPropertiesIntegrationsResponse200UiControl;
  items: GetConfigurationProductsPropertiesItems;
  uiOptions: Array<PropertiesUiOptions>;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2
    | boolean
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2
    | boolean
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue
    | undefined;
  uiPlaceholder?: string | undefined;
  default?: Array<string> | undefined;
  example?: Array<string> | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsResponse200Type = {
  String: "string",
} as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200Type =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200Type
  >;

export const GetConfigurationProductsPropertiesIntegrationsResponseUiControl = {
  Select: "select",
} as const;
export type GetConfigurationProductsPropertiesIntegrationsResponseUiControl =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponseUiControl
  >;

export const GetConfigurationProductsDisabledIntegrations3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsDisabledIntegrations3 = ClosedEnum<
  typeof GetConfigurationProductsDisabledIntegrations3
>;

export type GetConfigurationProductsDisabledIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesDisabled =
  | GetConfigurationProductsDisabledIntegrations2
  | boolean
  | GetConfigurationProductsDisabledIntegrations3;

export const GetConfigurationProductsHiddenIntegrations3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsHiddenIntegrations3 = ClosedEnum<
  typeof GetConfigurationProductsHiddenIntegrations3
>;

export type GetConfigurationProductsHiddenIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesHidden =
  | GetConfigurationProductsHiddenIntegrations2
  | boolean
  | GetConfigurationProductsHiddenIntegrations3;

export type UiOptions = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrations2
    | boolean
    | GetConfigurationProductsDisabledIntegrations3
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrations2
    | boolean
    | GetConfigurationProductsHiddenIntegrations3
    | undefined;
};

export type GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349 = {};

export type PropertiesMinLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349 =
  {};

export type PropertiesMaxLength = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349 =
  {};

export type PropertiesPattern = {
  atBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349;
};

export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2003 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse2003 =
  ClosedEnum<typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse2003>;

export type GetConfigurationProductsUiReadOnlyIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse2002
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse2003;

export const GetConfigurationProductsUiHiddenIntegrationsResponse2003 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiHiddenIntegrationsResponse2003 =
  ClosedEnum<typeof GetConfigurationProductsUiHiddenIntegrationsResponse2003>;

export type GetConfigurationProductsUiHiddenIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsResponseUiHidden =
  | GetConfigurationProductsUiHiddenIntegrationsResponse2002
  | boolean
  | GetConfigurationProductsUiHiddenIntegrationsResponse2003;

export const GetConfigurationProductsUiDisabledIntegrationsResponse2003 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiDisabledIntegrationsResponse2003 =
  ClosedEnum<typeof GetConfigurationProductsUiDisabledIntegrationsResponse2003>;

export type GetConfigurationProductsUiDisabledIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled =
  | GetConfigurationProductsUiDisabledIntegrationsResponse2002
  | boolean
  | GetConfigurationProductsUiDisabledIntegrationsResponse2003;

export type GetConfigurationProductsUiDescriptionIntegrationsResponse2002 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsResponseUiDescription =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse2002
  | string;

export type GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue =
  {
    expr: string;
  };

export type Properties5 = {
  type: GetConfigurationProductsPropertiesIntegrationsResponse200Type;
  uiControl: GetConfigurationProductsPropertiesIntegrationsResponseUiControl;
  uiOptions: Array<UiOptions>;
  description?: string | undefined;
  minLength?: PropertiesMinLength | undefined;
  maxLength?: PropertiesMaxLength | undefined;
  pattern?: PropertiesPattern | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse2002
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse2003
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse2002
    | boolean
    | GetConfigurationProductsUiHiddenIntegrationsResponse2003
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse2002
    | boolean
    | GetConfigurationProductsUiDisabledIntegrationsResponse2003
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse2002
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue
    | undefined;
  uiPlaceholder?: string | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsResponseType = {
  Array: "array",
} as const;
export type GetConfigurationProductsPropertiesIntegrationsResponseType =
  ClosedEnum<typeof GetConfigurationProductsPropertiesIntegrationsResponseType>;

export const GetConfigurationProductsPropertiesIntegrationsUiControl = {
  Slider: "slider",
} as const;
export type GetConfigurationProductsPropertiesIntegrationsUiControl =
  ClosedEnum<typeof GetConfigurationProductsPropertiesIntegrationsUiControl>;

export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType =
  {
    Number: "number",
  } as const;
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType =
  ClosedEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType
  >;

export type PropertiesItems = {
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType;
  description?: string | undefined;
  minimum?: number | undefined;
  exclusiveMinimum?: number | undefined;
  maximum?: number | undefined;
  exclusiveMaximum?: number | undefined;
  default?: number | undefined;
};

export const GetConfigurationProductsUiReadOnlyIntegrationsResponse3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse3 =
  ClosedEnum<typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse3>;

export type GetConfigurationProductsUiReadOnlyIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsUiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse2
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse3;

export const GetConfigurationProductsUiHiddenIntegrationsResponse3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiHiddenIntegrationsResponse3 = ClosedEnum<
  typeof GetConfigurationProductsUiHiddenIntegrationsResponse3
>;

export type GetConfigurationProductsUiHiddenIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsUiHidden =
  | GetConfigurationProductsUiHiddenIntegrationsResponse2
  | boolean
  | GetConfigurationProductsUiHiddenIntegrationsResponse3;

export const GetConfigurationProductsUiDisabledIntegrationsResponse3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiDisabledIntegrationsResponse3 =
  ClosedEnum<typeof GetConfigurationProductsUiDisabledIntegrationsResponse3>;

export type GetConfigurationProductsUiDisabledIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsUiDisabled =
  | GetConfigurationProductsUiDisabledIntegrationsResponse2
  | boolean
  | GetConfigurationProductsUiDisabledIntegrationsResponse3;

export type GetConfigurationProductsUiDescriptionIntegrationsResponse2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesIntegrationsUiDescription =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse2
  | string;

export type GetConfigurationProductsPropertiesIntegrationsUiFormattedValue = {
  expr: string;
};

export type Properties4 = {
  type: GetConfigurationProductsPropertiesIntegrationsResponseType;
  uiControl: GetConfigurationProductsPropertiesIntegrationsUiControl;
  uiSteps: Array<number>;
  items: PropertiesItems;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse2
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse2
    | boolean
    | GetConfigurationProductsUiHiddenIntegrationsResponse3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse2
    | boolean
    | GetConfigurationProductsUiDisabledIntegrationsResponse3
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse2
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesIntegrationsUiFormattedValue
    | undefined;
  default?: Array<number> | undefined;
};

export const GetConfigurationProductsPropertiesIntegrationsType = {
  Boolean: "boolean",
} as const;
export type GetConfigurationProductsPropertiesIntegrationsType = ClosedEnum<
  typeof GetConfigurationProductsPropertiesIntegrationsType
>;

export const GetConfigurationProductsPropertiesUiControl = {
  Toggle: "toggle",
} as const;
export type GetConfigurationProductsPropertiesUiControl = ClosedEnum<
  typeof GetConfigurationProductsPropertiesUiControl
>;

export const GetConfigurationProductsUiReadOnlyIntegrations3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiReadOnlyIntegrations3 = ClosedEnum<
  typeof GetConfigurationProductsUiReadOnlyIntegrations3
>;

export type GetConfigurationProductsUiReadOnlyIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesUiReadOnly =
  | GetConfigurationProductsUiReadOnlyIntegrations2
  | boolean
  | GetConfigurationProductsUiReadOnlyIntegrations3;

export const GetConfigurationProductsUiHiddenIntegrations3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiHiddenIntegrations3 = ClosedEnum<
  typeof GetConfigurationProductsUiHiddenIntegrations3
>;

export type GetConfigurationProductsUiHiddenIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesUiHidden =
  | GetConfigurationProductsUiHiddenIntegrations2
  | boolean
  | GetConfigurationProductsUiHiddenIntegrations3;

export const GetConfigurationProductsUiDisabledIntegrations3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiDisabledIntegrations3 = ClosedEnum<
  typeof GetConfigurationProductsUiDisabledIntegrations3
>;

export type GetConfigurationProductsUiDisabledIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesUiDisabled =
  | GetConfigurationProductsUiDisabledIntegrations2
  | boolean
  | GetConfigurationProductsUiDisabledIntegrations3;

export type GetConfigurationProductsUiDescriptionIntegrations2 = {
  expr: string;
};

export type GetConfigurationProductsPropertiesUiDescription =
  | GetConfigurationProductsUiDescriptionIntegrations2
  | string;

export type GetConfigurationProductsPropertiesUiFormattedValue = {
  expr: string;
};

export type Properties3 = {
  type: GetConfigurationProductsPropertiesIntegrationsType;
  uiControl: GetConfigurationProductsPropertiesUiControl;
  description?: string | undefined;
  default?: boolean | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnlyIntegrations2
    | boolean
    | GetConfigurationProductsUiReadOnlyIntegrations3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHiddenIntegrations2
    | boolean
    | GetConfigurationProductsUiHiddenIntegrations3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabledIntegrations2
    | boolean
    | GetConfigurationProductsUiDisabledIntegrations3
    | undefined;
  uiDescription?:
    | GetConfigurationProductsUiDescriptionIntegrations2
    | string
    | undefined;
  uiFormattedValue?:
    | GetConfigurationProductsPropertiesUiFormattedValue
    | undefined;
};

export const GetConfigurationProductsPropertiesType = {
  Number: "number",
} as const;
export type GetConfigurationProductsPropertiesType = ClosedEnum<
  typeof GetConfigurationProductsPropertiesType
>;

export const PropertiesUiControl = {
  Input: "input",
} as const;
export type PropertiesUiControl = ClosedEnum<typeof PropertiesUiControl>;

export const GetConfigurationProductsUiReadOnly3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiReadOnly3 = ClosedEnum<
  typeof GetConfigurationProductsUiReadOnly3
>;

export type GetConfigurationProductsUiReadOnly2 = {
  expr: string;
};

export type PropertiesUiReadOnly =
  | GetConfigurationProductsUiReadOnly2
  | boolean
  | GetConfigurationProductsUiReadOnly3;

export const GetConfigurationProductsUiHidden3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiHidden3 = ClosedEnum<
  typeof GetConfigurationProductsUiHidden3
>;

export type GetConfigurationProductsUiHidden2 = {
  expr: string;
};

export type PropertiesUiHidden =
  | GetConfigurationProductsUiHidden2
  | boolean
  | GetConfigurationProductsUiHidden3;

export const GetConfigurationProductsUiDisabled3 = {
  Update: "update",
  Create: "create",
} as const;
export type GetConfigurationProductsUiDisabled3 = ClosedEnum<
  typeof GetConfigurationProductsUiDisabled3
>;

export type GetConfigurationProductsUiDisabled2 = {
  expr: string;
};

export type PropertiesUiDisabled =
  | GetConfigurationProductsUiDisabled2
  | boolean
  | GetConfigurationProductsUiDisabled3;

export type GetConfigurationProductsUiDescription2 = {
  expr: string;
};

export type PropertiesUiDescription =
  | GetConfigurationProductsUiDescription2
  | string;

export type PropertiesUiFormattedValue = {
  expr: string;
};

export type Properties2 = {
  type: GetConfigurationProductsPropertiesType;
  uiControl: PropertiesUiControl;
  minimum?: number | undefined;
  maximum?: number | undefined;
  description?: string | undefined;
  default?: number | undefined;
  exclusiveMinimum?: number | undefined;
  exclusiveMaximum?: number | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?:
    | GetConfigurationProductsUiReadOnly2
    | boolean
    | GetConfigurationProductsUiReadOnly3
    | undefined;
  uiHidden?:
    | GetConfigurationProductsUiHidden2
    | boolean
    | GetConfigurationProductsUiHidden3
    | undefined;
  uiDisabled?:
    | GetConfigurationProductsUiDisabled2
    | boolean
    | GetConfigurationProductsUiDisabled3
    | undefined;
  uiDescription?: GetConfigurationProductsUiDescription2 | string | undefined;
  uiFormattedValue?: PropertiesUiFormattedValue | undefined;
  uiPlaceholder?: string | undefined;
};

export const PropertiesType = {
  String: "string",
} as const;
export type PropertiesType = ClosedEnum<typeof PropertiesType>;

export const UiControl = {
  Input: "input",
} as const;
export type UiControl = ClosedEnum<typeof UiControl>;

export type AtBRANDAt510349 = {};

export type MinLength = {
  atBRANDAt510349: AtBRANDAt510349;
};

export type PropertiesAtBRANDAt510349 = {};

export type MaxLength = {
  atBRANDAt510349: PropertiesAtBRANDAt510349;
};

export type GetConfigurationProductsPropertiesAtBRANDAt510349 = {};

export type Pattern = {
  atBRANDAt510349: GetConfigurationProductsPropertiesAtBRANDAt510349;
};

export const UiReadOnly3 = {
  Update: "update",
  Create: "create",
} as const;
export type UiReadOnly3 = ClosedEnum<typeof UiReadOnly3>;

export type UiReadOnly2 = {
  expr: string;
};

export type UiReadOnly = UiReadOnly2 | boolean | UiReadOnly3;

export const UiHidden3 = {
  Update: "update",
  Create: "create",
} as const;
export type UiHidden3 = ClosedEnum<typeof UiHidden3>;

export type UiHidden2 = {
  expr: string;
};

export type UiHidden = UiHidden2 | boolean | UiHidden3;

export const UiDisabled3 = {
  Update: "update",
  Create: "create",
} as const;
export type UiDisabled3 = ClosedEnum<typeof UiDisabled3>;

export type UiDisabled2 = {
  expr: string;
};

export type UiDisabled = UiDisabled2 | boolean | UiDisabled3;

export type UiDescription2 = {
  expr: string;
};

export type UiDescription = UiDescription2 | string;

export type UiFormattedValue = {
  expr: string;
};

export type Properties1 = {
  type: PropertiesType;
  uiControl: UiControl;
  description?: string | undefined;
  minLength?: MinLength | undefined;
  maxLength?: MaxLength | undefined;
  pattern?: Pattern | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  uiLabel?: string | undefined;
  uiReadOnly?: UiReadOnly2 | boolean | UiReadOnly3 | undefined;
  uiHidden?: UiHidden2 | boolean | UiHidden3 | undefined;
  uiDisabled?: UiDisabled2 | boolean | UiDisabled3 | undefined;
  uiDescription?: UiDescription2 | string | undefined;
  uiFormattedValue?: UiFormattedValue | undefined;
  uiPlaceholder?: string | undefined;
};

export type Properties =
  | Properties4
  | Properties6
  | Properties8
  | Properties5
  | Properties7
  | Properties1
  | Properties2
  | Properties3
  | Properties9;

export type MetadataSchema = {
  type: GetConfigurationProductsType;
  properties: {
    [k: string]:
      | Properties4
      | Properties6
      | Properties8
      | Properties5
      | Properties7
      | Properties1
      | Properties2
      | Properties3
      | Properties9;
  };
  required?: Array<string> | undefined;
};

export type Products = {
  id: string;
  slug: string;
  name: string;
  protocols: Protocols;
  primaryProtocol?: PrimaryProtocol | undefined;
  metadataSchema: MetadataSchema;
};

export type Integration = {
  id: string;
  slug: string;
  name: string;
};

export type GetConfigurationProductsConfiguration = {
  id: string;
};

/**
 * List of products available for this integration configuration
 */
export type GetConfigurationProductsResponseBody = {
  products: Array<Products>;
  integration: Integration;
  configuration: GetConfigurationProductsConfiguration;
};

/** @internal */
export const GetConfigurationProductsRequest$inboundSchema: z.ZodType<
  GetConfigurationProductsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type GetConfigurationProductsRequest$Outbound = {
  id: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const GetConfigurationProductsRequest$outboundSchema: z.ZodType<
  GetConfigurationProductsRequest$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsRequest
> = z.object({
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsRequest$ {
  /** @deprecated use `GetConfigurationProductsRequest$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsRequest$inboundSchema;
  /** @deprecated use `GetConfigurationProductsRequest$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsRequest$outboundSchema;
  /** @deprecated use `GetConfigurationProductsRequest$Outbound` instead. */
  export type Outbound = GetConfigurationProductsRequest$Outbound;
}

export function getConfigurationProductsRequestToJSON(
  getConfigurationProductsRequest: GetConfigurationProductsRequest,
): string {
  return JSON.stringify(
    GetConfigurationProductsRequest$outboundSchema.parse(
      getConfigurationProductsRequest,
    ),
  );
}

export function getConfigurationProductsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsRequest' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsStatus
> = z.nativeEnum(GetConfigurationProductsStatus);

/** @internal */
export const GetConfigurationProductsStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsStatus
> = GetConfigurationProductsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsStatus$ {
  /** @deprecated use `GetConfigurationProductsStatus$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsStatus$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsStatus$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsRepl$inboundSchema: z.ZodType<
  GetConfigurationProductsRepl,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  supportsReadOnlyMode: z.boolean(),
  welcomeMessage: z.string().optional(),
});

/** @internal */
export type GetConfigurationProductsRepl$Outbound = {
  enabled: boolean;
  supportsReadOnlyMode: boolean;
  welcomeMessage?: string | undefined;
};

/** @internal */
export const GetConfigurationProductsRepl$outboundSchema: z.ZodType<
  GetConfigurationProductsRepl$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsRepl
> = z.object({
  enabled: z.boolean(),
  supportsReadOnlyMode: z.boolean(),
  welcomeMessage: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsRepl$ {
  /** @deprecated use `GetConfigurationProductsRepl$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsRepl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsRepl$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsRepl$outboundSchema;
  /** @deprecated use `GetConfigurationProductsRepl$Outbound` instead. */
  export type Outbound = GetConfigurationProductsRepl$Outbound;
}

export function getConfigurationProductsReplToJSON(
  getConfigurationProductsRepl: GetConfigurationProductsRepl,
): string {
  return JSON.stringify(
    GetConfigurationProductsRepl$outboundSchema.parse(
      getConfigurationProductsRepl,
    ),
  );
}

export function getConfigurationProductsReplFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsRepl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsRepl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsRepl' from JSON`,
  );
}

/** @internal */
export const Storage$inboundSchema: z.ZodType<Storage, z.ZodTypeDef, unknown> =
  z.object({
    status: GetConfigurationProductsStatus$inboundSchema,
    repl: z.lazy(() => GetConfigurationProductsRepl$inboundSchema).optional(),
  });

/** @internal */
export type Storage$Outbound = {
  status: string;
  repl?: GetConfigurationProductsRepl$Outbound | undefined;
};

/** @internal */
export const Storage$outboundSchema: z.ZodType<
  Storage$Outbound,
  z.ZodTypeDef,
  Storage
> = z.object({
  status: GetConfigurationProductsStatus$outboundSchema,
  repl: z.lazy(() => GetConfigurationProductsRepl$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Storage$ {
  /** @deprecated use `Storage$inboundSchema` instead. */
  export const inboundSchema = Storage$inboundSchema;
  /** @deprecated use `Storage$outboundSchema` instead. */
  export const outboundSchema = Storage$outboundSchema;
  /** @deprecated use `Storage$Outbound` instead. */
  export type Outbound = Storage$Outbound;
}

export function storageToJSON(storage: Storage): string {
  return JSON.stringify(Storage$outboundSchema.parse(storage));
}

export function storageFromJSON(
  jsonString: string,
): SafeParseResult<Storage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Storage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Storage' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsIntegrationsStatus> = z
    .nativeEnum(GetConfigurationProductsIntegrationsStatus);

/** @internal */
export const GetConfigurationProductsIntegrationsStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsIntegrationsStatus> =
    GetConfigurationProductsIntegrationsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsStatus$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsExperimentation$inboundSchema: z.ZodType<
  GetConfigurationProductsExperimentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: GetConfigurationProductsIntegrationsStatus$inboundSchema,
  edgeConfigSyncingSupport: z.boolean().optional(),
});

/** @internal */
export type GetConfigurationProductsExperimentation$Outbound = {
  status: string;
  edgeConfigSyncingSupport?: boolean | undefined;
};

/** @internal */
export const GetConfigurationProductsExperimentation$outboundSchema: z.ZodType<
  GetConfigurationProductsExperimentation$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsExperimentation
> = z.object({
  status: GetConfigurationProductsIntegrationsStatus$outboundSchema,
  edgeConfigSyncingSupport: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsExperimentation$ {
  /** @deprecated use `GetConfigurationProductsExperimentation$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsExperimentation$inboundSchema;
  /** @deprecated use `GetConfigurationProductsExperimentation$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsExperimentation$outboundSchema;
  /** @deprecated use `GetConfigurationProductsExperimentation$Outbound` instead. */
  export type Outbound = GetConfigurationProductsExperimentation$Outbound;
}

export function getConfigurationProductsExperimentationToJSON(
  getConfigurationProductsExperimentation:
    GetConfigurationProductsExperimentation,
): string {
  return JSON.stringify(
    GetConfigurationProductsExperimentation$outboundSchema.parse(
      getConfigurationProductsExperimentation,
    ),
  );
}

export function getConfigurationProductsExperimentationFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsExperimentation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsExperimentation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsExperimentation' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponseStatus$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsIntegrationsResponseStatus> = z
    .nativeEnum(GetConfigurationProductsIntegrationsResponseStatus);

/** @internal */
export const GetConfigurationProductsIntegrationsResponseStatus$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsIntegrationsResponseStatus> =
    GetConfigurationProductsIntegrationsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponseStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponseStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponseStatus$outboundSchema;
}

/** @internal */
export const Ai$inboundSchema: z.ZodType<Ai, z.ZodTypeDef, unknown> = z.object({
  status: GetConfigurationProductsIntegrationsResponseStatus$inboundSchema,
});

/** @internal */
export type Ai$Outbound = {
  status: string;
};

/** @internal */
export const Ai$outboundSchema: z.ZodType<Ai$Outbound, z.ZodTypeDef, Ai> = z
  .object({
    status: GetConfigurationProductsIntegrationsResponseStatus$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ai$ {
  /** @deprecated use `Ai$inboundSchema` instead. */
  export const inboundSchema = Ai$inboundSchema;
  /** @deprecated use `Ai$outboundSchema` instead. */
  export const outboundSchema = Ai$outboundSchema;
  /** @deprecated use `Ai$Outbound` instead. */
  export type Outbound = Ai$Outbound;
}

export function aiToJSON(ai: Ai): string {
  return JSON.stringify(Ai$outboundSchema.parse(ai));
}

export function aiFromJSON(
  jsonString: string,
): SafeParseResult<Ai, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ai$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ai' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200Status$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200Status
  > = z.nativeEnum(GetConfigurationProductsIntegrationsResponse200Status);

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200Status$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200Status
  > = GetConfigurationProductsIntegrationsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200Status$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200Status$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200Status$outboundSchema;
}

/** @internal */
export const Authentication$inboundSchema: z.ZodType<
  Authentication,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: GetConfigurationProductsIntegrationsResponse200Status$inboundSchema,
});

/** @internal */
export type Authentication$Outbound = {
  status: string;
};

/** @internal */
export const Authentication$outboundSchema: z.ZodType<
  Authentication$Outbound,
  z.ZodTypeDef,
  Authentication
> = z.object({
  status: GetConfigurationProductsIntegrationsResponse200Status$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Authentication$ {
  /** @deprecated use `Authentication$inboundSchema` instead. */
  export const inboundSchema = Authentication$inboundSchema;
  /** @deprecated use `Authentication$outboundSchema` instead. */
  export const outboundSchema = Authentication$outboundSchema;
  /** @deprecated use `Authentication$Outbound` instead. */
  export type Outbound = Authentication$Outbound;
}

export function authenticationToJSON(authentication: Authentication): string {
  return JSON.stringify(Authentication$outboundSchema.parse(authentication));
}

export function authenticationFromJSON(
  jsonString: string,
): SafeParseResult<Authentication, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Authentication$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Authentication' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const Observability$inboundSchema: z.ZodType<
  Observability,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$inboundSchema,
});

/** @internal */
export type Observability$Outbound = {
  status: string;
};

/** @internal */
export const Observability$outboundSchema: z.ZodType<
  Observability$Outbound,
  z.ZodTypeDef,
  Observability
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Observability$ {
  /** @deprecated use `Observability$inboundSchema` instead. */
  export const inboundSchema = Observability$inboundSchema;
  /** @deprecated use `Observability$outboundSchema` instead. */
  export const outboundSchema = Observability$outboundSchema;
  /** @deprecated use `Observability$Outbound` instead. */
  export type Outbound = Observability$Outbound;
}

export function observabilityToJSON(observability: Observability): string {
  return JSON.stringify(Observability$outboundSchema.parse(observability));
}

export function observabilityFromJSON(
  jsonString: string,
): SafeParseResult<Observability, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Observability$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Observability' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const Video$inboundSchema: z.ZodType<Video, z.ZodTypeDef, unknown> = z
  .object({
    status:
      GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$inboundSchema,
  });

/** @internal */
export type Video$Outbound = {
  status: string;
};

/** @internal */
export const Video$outboundSchema: z.ZodType<
  Video$Outbound,
  z.ZodTypeDef,
  Video
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Video$ {
  /** @deprecated use `Video$inboundSchema` instead. */
  export const inboundSchema = Video$inboundSchema;
  /** @deprecated use `Video$outboundSchema` instead. */
  export const outboundSchema = Video$outboundSchema;
  /** @deprecated use `Video$Outbound` instead. */
  export type Outbound = Video$Outbound;
}

export function videoToJSON(video: Video): string {
  return JSON.stringify(Video$outboundSchema.parse(video));
}

export function videoFromJSON(
  jsonString: string,
): SafeParseResult<Video, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Video$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Video' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$outboundSchema;
}

/** @internal */
export const Workflow$inboundSchema: z.ZodType<
  Workflow,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$inboundSchema,
});

/** @internal */
export type Workflow$Outbound = {
  status: string;
};

/** @internal */
export const Workflow$outboundSchema: z.ZodType<
  Workflow$Outbound,
  z.ZodTypeDef,
  Workflow
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Workflow$ {
  /** @deprecated use `Workflow$inboundSchema` instead. */
  export const inboundSchema = Workflow$inboundSchema;
  /** @deprecated use `Workflow$outboundSchema` instead. */
  export const outboundSchema = Workflow$outboundSchema;
  /** @deprecated use `Workflow$Outbound` instead. */
  export type Outbound = Workflow$Outbound;
}

export function workflowToJSON(workflow: Workflow): string {
  return JSON.stringify(Workflow$outboundSchema.parse(workflow));
}

export function workflowFromJSON(
  jsonString: string,
): SafeParseResult<Workflow, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Workflow$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Workflow' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsChecks$inboundSchema: z.ZodType<
  GetConfigurationProductsChecks,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$inboundSchema,
});

/** @internal */
export type GetConfigurationProductsChecks$Outbound = {
  status: string;
};

/** @internal */
export const GetConfigurationProductsChecks$outboundSchema: z.ZodType<
  GetConfigurationProductsChecks$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsChecks
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsChecks$ {
  /** @deprecated use `GetConfigurationProductsChecks$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsChecks$inboundSchema;
  /** @deprecated use `GetConfigurationProductsChecks$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsChecks$outboundSchema;
  /** @deprecated use `GetConfigurationProductsChecks$Outbound` instead. */
  export type Outbound = GetConfigurationProductsChecks$Outbound;
}

export function getConfigurationProductsChecksToJSON(
  getConfigurationProductsChecks: GetConfigurationProductsChecks,
): string {
  return JSON.stringify(
    GetConfigurationProductsChecks$outboundSchema.parse(
      getConfigurationProductsChecks,
    ),
  );
}

export function getConfigurationProductsChecksFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsChecks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsChecks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsChecks' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$outboundSchema;
}

/** @internal */
export const Format$inboundSchema: z.ZodNativeEnum<typeof Format> = z
  .nativeEnum(Format);

/** @internal */
export const Format$outboundSchema: z.ZodNativeEnum<typeof Format> =
  Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Format$ {
  /** @deprecated use `Format$inboundSchema` instead. */
  export const inboundSchema = Format$inboundSchema;
  /** @deprecated use `Format$outboundSchema` instead. */
  export const outboundSchema = Format$outboundSchema;
}

/** @internal */
export const LogDrain$inboundSchema: z.ZodType<
  LogDrain,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$inboundSchema,
  endpoint: z.string(),
  headers: z.record(z.string()).optional(),
  format: Format$inboundSchema,
});

/** @internal */
export type LogDrain$Outbound = {
  status: string;
  endpoint: string;
  headers?: { [k: string]: string } | undefined;
  format: string;
};

/** @internal */
export const LogDrain$outboundSchema: z.ZodType<
  LogDrain$Outbound,
  z.ZodTypeDef,
  LogDrain
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsLogDrainStatus$outboundSchema,
  endpoint: z.string(),
  headers: z.record(z.string()).optional(),
  format: Format$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LogDrain$ {
  /** @deprecated use `LogDrain$inboundSchema` instead. */
  export const inboundSchema = LogDrain$inboundSchema;
  /** @deprecated use `LogDrain$outboundSchema` instead. */
  export const outboundSchema = LogDrain$outboundSchema;
  /** @deprecated use `LogDrain$Outbound` instead. */
  export type Outbound = LogDrain$Outbound;
}

export function logDrainToJSON(logDrain: LogDrain): string {
  return JSON.stringify(LogDrain$outboundSchema.parse(logDrain));
}

export function logDrainFromJSON(
  jsonString: string,
): SafeParseResult<LogDrain, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LogDrain$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LogDrain' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsFormat$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsFormat
> = z.nativeEnum(GetConfigurationProductsFormat);

/** @internal */
export const GetConfigurationProductsFormat$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsFormat
> = GetConfigurationProductsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsFormat$ {
  /** @deprecated use `GetConfigurationProductsFormat$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsFormat$inboundSchema;
  /** @deprecated use `GetConfigurationProductsFormat$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsFormat$outboundSchema;
}

/** @internal */
export const TraceDrain$inboundSchema: z.ZodType<
  TraceDrain,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$inboundSchema,
  endpoint: z.string(),
  headers: z.record(z.string()).optional(),
  format: GetConfigurationProductsFormat$inboundSchema,
});

/** @internal */
export type TraceDrain$Outbound = {
  status: string;
  endpoint: string;
  headers?: { [k: string]: string } | undefined;
  format: string;
};

/** @internal */
export const TraceDrain$outboundSchema: z.ZodType<
  TraceDrain$Outbound,
  z.ZodTypeDef,
  TraceDrain
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsTraceDrainStatus$outboundSchema,
  endpoint: z.string(),
  headers: z.record(z.string()).optional(),
  format: GetConfigurationProductsFormat$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TraceDrain$ {
  /** @deprecated use `TraceDrain$inboundSchema` instead. */
  export const inboundSchema = TraceDrain$inboundSchema;
  /** @deprecated use `TraceDrain$outboundSchema` instead. */
  export const outboundSchema = TraceDrain$outboundSchema;
  /** @deprecated use `TraceDrain$Outbound` instead. */
  export type Outbound = TraceDrain$Outbound;
}

export function traceDrainToJSON(traceDrain: TraceDrain): string {
  return JSON.stringify(TraceDrain$outboundSchema.parse(traceDrain));
}

export function traceDrainFromJSON(
  jsonString: string,
): SafeParseResult<TraceDrain, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TraceDrain$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TraceDrain' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$outboundSchema;
}

/** @internal */
export const Messaging$inboundSchema: z.ZodType<
  Messaging,
  z.ZodTypeDef,
  unknown
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$inboundSchema,
});

/** @internal */
export type Messaging$Outbound = {
  status: string;
};

/** @internal */
export const Messaging$outboundSchema: z.ZodType<
  Messaging$Outbound,
  z.ZodTypeDef,
  Messaging
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsMessagingStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Messaging$ {
  /** @deprecated use `Messaging$inboundSchema` instead. */
  export const inboundSchema = Messaging$inboundSchema;
  /** @deprecated use `Messaging$outboundSchema` instead. */
  export const outboundSchema = Messaging$outboundSchema;
  /** @deprecated use `Messaging$Outbound` instead. */
  export type Outbound = Messaging$Outbound;
}

export function messagingToJSON(messaging: Messaging): string {
  return JSON.stringify(Messaging$outboundSchema.parse(messaging));
}

export function messagingFromJSON(
  jsonString: string,
): SafeParseResult<Messaging, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Messaging$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Messaging' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus
  > = z.nativeEnum(
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus,
  );

/** @internal */
export const GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus
  > =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$ {
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$inboundSchema;
  /** @deprecated use `GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$outboundSchema;
}

/** @internal */
export const Other$inboundSchema: z.ZodType<Other, z.ZodTypeDef, unknown> = z
  .object({
    status:
      GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$inboundSchema,
  });

/** @internal */
export type Other$Outbound = {
  status: string;
};

/** @internal */
export const Other$outboundSchema: z.ZodType<
  Other$Outbound,
  z.ZodTypeDef,
  Other
> = z.object({
  status:
    GetConfigurationProductsIntegrationsResponse200ApplicationJSONResponseBodyProductsProtocolsOtherStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Other$ {
  /** @deprecated use `Other$inboundSchema` instead. */
  export const inboundSchema = Other$inboundSchema;
  /** @deprecated use `Other$outboundSchema` instead. */
  export const outboundSchema = Other$outboundSchema;
  /** @deprecated use `Other$Outbound` instead. */
  export type Outbound = Other$Outbound;
}

export function otherToJSON(other: Other): string {
  return JSON.stringify(Other$outboundSchema.parse(other));
}

export function otherFromJSON(
  jsonString: string,
): SafeParseResult<Other, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Other$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Other' from JSON`,
  );
}

/** @internal */
export const Protocols$inboundSchema: z.ZodType<
  Protocols,
  z.ZodTypeDef,
  unknown
> = z.object({
  storage: z.lazy(() => Storage$inboundSchema).optional(),
  experimentation: z.lazy(() =>
    GetConfigurationProductsExperimentation$inboundSchema
  ).optional(),
  ai: z.lazy(() => Ai$inboundSchema).optional(),
  authentication: z.lazy(() => Authentication$inboundSchema).optional(),
  observability: z.lazy(() => Observability$inboundSchema).optional(),
  video: z.lazy(() => Video$inboundSchema).optional(),
  workflow: z.lazy(() => Workflow$inboundSchema).optional(),
  checks: z.lazy(() => GetConfigurationProductsChecks$inboundSchema).optional(),
  logDrain: z.lazy(() => LogDrain$inboundSchema).optional(),
  traceDrain: z.lazy(() => TraceDrain$inboundSchema).optional(),
  messaging: z.lazy(() => Messaging$inboundSchema).optional(),
  other: z.lazy(() => Other$inboundSchema).optional(),
});

/** @internal */
export type Protocols$Outbound = {
  storage?: Storage$Outbound | undefined;
  experimentation?:
    | GetConfigurationProductsExperimentation$Outbound
    | undefined;
  ai?: Ai$Outbound | undefined;
  authentication?: Authentication$Outbound | undefined;
  observability?: Observability$Outbound | undefined;
  video?: Video$Outbound | undefined;
  workflow?: Workflow$Outbound | undefined;
  checks?: GetConfigurationProductsChecks$Outbound | undefined;
  logDrain?: LogDrain$Outbound | undefined;
  traceDrain?: TraceDrain$Outbound | undefined;
  messaging?: Messaging$Outbound | undefined;
  other?: Other$Outbound | undefined;
};

/** @internal */
export const Protocols$outboundSchema: z.ZodType<
  Protocols$Outbound,
  z.ZodTypeDef,
  Protocols
> = z.object({
  storage: z.lazy(() => Storage$outboundSchema).optional(),
  experimentation: z.lazy(() =>
    GetConfigurationProductsExperimentation$outboundSchema
  ).optional(),
  ai: z.lazy(() => Ai$outboundSchema).optional(),
  authentication: z.lazy(() => Authentication$outboundSchema).optional(),
  observability: z.lazy(() => Observability$outboundSchema).optional(),
  video: z.lazy(() => Video$outboundSchema).optional(),
  workflow: z.lazy(() => Workflow$outboundSchema).optional(),
  checks: z.lazy(() => GetConfigurationProductsChecks$outboundSchema)
    .optional(),
  logDrain: z.lazy(() => LogDrain$outboundSchema).optional(),
  traceDrain: z.lazy(() => TraceDrain$outboundSchema).optional(),
  messaging: z.lazy(() => Messaging$outboundSchema).optional(),
  other: z.lazy(() => Other$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Protocols$ {
  /** @deprecated use `Protocols$inboundSchema` instead. */
  export const inboundSchema = Protocols$inboundSchema;
  /** @deprecated use `Protocols$outboundSchema` instead. */
  export const outboundSchema = Protocols$outboundSchema;
  /** @deprecated use `Protocols$Outbound` instead. */
  export type Outbound = Protocols$Outbound;
}

export function protocolsToJSON(protocols: Protocols): string {
  return JSON.stringify(Protocols$outboundSchema.parse(protocols));
}

export function protocolsFromJSON(
  jsonString: string,
): SafeParseResult<Protocols, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Protocols$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Protocols' from JSON`,
  );
}

/** @internal */
export const PrimaryProtocol$inboundSchema: z.ZodNativeEnum<
  typeof PrimaryProtocol
> = z.nativeEnum(PrimaryProtocol);

/** @internal */
export const PrimaryProtocol$outboundSchema: z.ZodNativeEnum<
  typeof PrimaryProtocol
> = PrimaryProtocol$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimaryProtocol$ {
  /** @deprecated use `PrimaryProtocol$inboundSchema` instead. */
  export const inboundSchema = PrimaryProtocol$inboundSchema;
  /** @deprecated use `PrimaryProtocol$outboundSchema` instead. */
  export const outboundSchema = PrimaryProtocol$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsType$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsType
> = z.nativeEnum(GetConfigurationProductsType);

/** @internal */
export const GetConfigurationProductsType$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsType
> = GetConfigurationProductsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsType$ {
  /** @deprecated use `GetConfigurationProductsType$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsType$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const PropertiesValue$inboundSchema: z.ZodType<
  PropertiesValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type PropertiesValue$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$Outbound;
};

/** @internal */
export const PropertiesValue$outboundSchema: z.ZodType<
  PropertiesValue$Outbound,
  z.ZodTypeDef,
  PropertiesValue
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema9AtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesValue$ {
  /** @deprecated use `PropertiesValue$inboundSchema` instead. */
  export const inboundSchema = PropertiesValue$inboundSchema;
  /** @deprecated use `PropertiesValue$outboundSchema` instead. */
  export const outboundSchema = PropertiesValue$outboundSchema;
  /** @deprecated use `PropertiesValue$Outbound` instead. */
  export type Outbound = PropertiesValue$Outbound;
}

export function propertiesValueToJSON(
  propertiesValue: PropertiesValue,
): string {
  return JSON.stringify(PropertiesValue$outboundSchema.parse(propertiesValue));
}

export function propertiesValueFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesValue' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabled3$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsDisabled3
> = z.nativeEnum(GetConfigurationProductsDisabled3);

/** @internal */
export const GetConfigurationProductsDisabled3$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsDisabled3
> = GetConfigurationProductsDisabled3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabled3$ {
  /** @deprecated use `GetConfigurationProductsDisabled3$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsDisabled3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabled3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabled3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabled2$inboundSchema: z.ZodType<
  GetConfigurationProductsDisabled2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsDisabled2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsDisabled2$outboundSchema: z.ZodType<
  GetConfigurationProductsDisabled2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsDisabled2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabled2$ {
  /** @deprecated use `GetConfigurationProductsDisabled2$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsDisabled2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabled2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabled2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabled2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsDisabled2$Outbound;
}

export function getConfigurationProductsDisabled2ToJSON(
  getConfigurationProductsDisabled2: GetConfigurationProductsDisabled2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabled2$outboundSchema.parse(
      getConfigurationProductsDisabled2,
    ),
  );
}

export function getConfigurationProductsDisabled2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsDisabled2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsDisabled2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsDisabled2' from JSON`,
  );
}

/** @internal */
export const PropertiesDisabled$inboundSchema: z.ZodType<
  PropertiesDisabled,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsDisabled2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsDisabled3$inboundSchema,
]);

/** @internal */
export type PropertiesDisabled$Outbound =
  | GetConfigurationProductsDisabled2$Outbound
  | boolean
  | string;

/** @internal */
export const PropertiesDisabled$outboundSchema: z.ZodType<
  PropertiesDisabled$Outbound,
  z.ZodTypeDef,
  PropertiesDisabled
> = z.union([
  z.lazy(() => GetConfigurationProductsDisabled2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsDisabled3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesDisabled$ {
  /** @deprecated use `PropertiesDisabled$inboundSchema` instead. */
  export const inboundSchema = PropertiesDisabled$inboundSchema;
  /** @deprecated use `PropertiesDisabled$outboundSchema` instead. */
  export const outboundSchema = PropertiesDisabled$outboundSchema;
  /** @deprecated use `PropertiesDisabled$Outbound` instead. */
  export type Outbound = PropertiesDisabled$Outbound;
}

export function propertiesDisabledToJSON(
  propertiesDisabled: PropertiesDisabled,
): string {
  return JSON.stringify(
    PropertiesDisabled$outboundSchema.parse(propertiesDisabled),
  );
}

export function propertiesDisabledFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesDisabled, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesDisabled$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHidden3$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsHidden3
> = z.nativeEnum(GetConfigurationProductsHidden3);

/** @internal */
export const GetConfigurationProductsHidden3$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsHidden3
> = GetConfigurationProductsHidden3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHidden3$ {
  /** @deprecated use `GetConfigurationProductsHidden3$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsHidden3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHidden3$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsHidden3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHidden2$inboundSchema: z.ZodType<
  GetConfigurationProductsHidden2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsHidden2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsHidden2$outboundSchema: z.ZodType<
  GetConfigurationProductsHidden2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsHidden2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHidden2$ {
  /** @deprecated use `GetConfigurationProductsHidden2$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsHidden2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHidden2$outboundSchema` instead. */
  export const outboundSchema = GetConfigurationProductsHidden2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHidden2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsHidden2$Outbound;
}

export function getConfigurationProductsHidden2ToJSON(
  getConfigurationProductsHidden2: GetConfigurationProductsHidden2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHidden2$outboundSchema.parse(
      getConfigurationProductsHidden2,
    ),
  );
}

export function getConfigurationProductsHidden2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsHidden2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsHidden2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsHidden2' from JSON`,
  );
}

/** @internal */
export const PropertiesHidden$inboundSchema: z.ZodType<
  PropertiesHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsHidden2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsHidden3$inboundSchema,
]);

/** @internal */
export type PropertiesHidden$Outbound =
  | GetConfigurationProductsHidden2$Outbound
  | boolean
  | string;

/** @internal */
export const PropertiesHidden$outboundSchema: z.ZodType<
  PropertiesHidden$Outbound,
  z.ZodTypeDef,
  PropertiesHidden
> = z.union([
  z.lazy(() => GetConfigurationProductsHidden2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsHidden3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesHidden$ {
  /** @deprecated use `PropertiesHidden$inboundSchema` instead. */
  export const inboundSchema = PropertiesHidden$inboundSchema;
  /** @deprecated use `PropertiesHidden$outboundSchema` instead. */
  export const outboundSchema = PropertiesHidden$outboundSchema;
  /** @deprecated use `PropertiesHidden$Outbound` instead. */
  export type Outbound = PropertiesHidden$Outbound;
}

export function propertiesHiddenToJSON(
  propertiesHidden: PropertiesHidden,
): string {
  return JSON.stringify(
    PropertiesHidden$outboundSchema.parse(propertiesHidden),
  );
}

export function propertiesHiddenFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesHidden, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesHidden$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesHidden' from JSON`,
  );
}

/** @internal */
export const Properties9$inboundSchema: z.ZodType<
  Properties9,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.lazy(() => PropertiesValue$inboundSchema),
  disabled: z.union([
    z.lazy(() => GetConfigurationProductsDisabled2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsDisabled3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() => GetConfigurationProductsHidden2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsHidden3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type Properties9$Outbound = {
  value: PropertiesValue$Outbound;
  disabled?:
    | GetConfigurationProductsDisabled2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHidden2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const Properties9$outboundSchema: z.ZodType<
  Properties9$Outbound,
  z.ZodTypeDef,
  Properties9
> = z.object({
  value: z.lazy(() => PropertiesValue$outboundSchema),
  disabled: z.union([
    z.lazy(() => GetConfigurationProductsDisabled2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsDisabled3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() => GetConfigurationProductsHidden2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsHidden3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties9$ {
  /** @deprecated use `Properties9$inboundSchema` instead. */
  export const inboundSchema = Properties9$inboundSchema;
  /** @deprecated use `Properties9$outboundSchema` instead. */
  export const outboundSchema = Properties9$outboundSchema;
  /** @deprecated use `Properties9$Outbound` instead. */
  export type Outbound = Properties9$Outbound;
}

export function properties9ToJSON(properties9: Properties9): string {
  return JSON.stringify(Properties9$outboundSchema.parse(properties9));
}

export function properties9FromJSON(
  jsonString: string,
): SafeParseResult<Properties9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties9' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseMinLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseMinLength$Outbound =
  {
    "__@BRAND@510349":
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$Outbound;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseMinLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsMinLengthAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseMinLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMinLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMinLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMinLength$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseMinLengthToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseMinLength:
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseMinLength$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponseMinLength),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseMinLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseMinLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseMinLength$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseMinLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$Outbound =
  {
    "__@BRAND@510349":
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$Outbound;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseMaxLengthToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseMaxLength:
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponseMaxLength),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseMaxLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseMaxLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseMaxLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponsePattern$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponsePattern,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponsePattern$Outbound =
  {
    "__@BRAND@510349":
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$Outbound;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponsePattern$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponsePattern$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponsePattern
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8ItemsPatternAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponsePattern$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponsePattern$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponsePattern$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponsePattern$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponsePattern$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponsePattern$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponsePattern$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponsePatternToJSON(
  getConfigurationProductsPropertiesIntegrationsResponsePattern:
    GetConfigurationProductsPropertiesIntegrationsResponsePattern,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponsePattern$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponsePattern),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponsePatternFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponsePattern,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponsePattern$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponsePattern' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsItems$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsItems,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$inboundSchema,
    description: z.string().optional(),
    minLength: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponseMinLength$inboundSchema
    ).optional(),
    maxLength: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$inboundSchema
    ).optional(),
    pattern: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponsePattern$inboundSchema
    ).optional(),
    default: z.string().optional(),
    enum: z.array(z.string()).optional(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsItems$Outbound = {
  type: string;
  description?: string | undefined;
  minLength?:
    | GetConfigurationProductsPropertiesIntegrationsResponseMinLength$Outbound
    | undefined;
  maxLength?:
    | GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$Outbound
    | undefined;
  pattern?:
    | GetConfigurationProductsPropertiesIntegrationsResponsePattern$Outbound
    | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsItems$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsItems$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsItems
  > = z.object({
    type:
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8Type$outboundSchema,
    description: z.string().optional(),
    minLength: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponseMinLength$outboundSchema
    ).optional(),
    maxLength: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponseMaxLength$outboundSchema
    ).optional(),
    pattern: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponsePattern$outboundSchema
    ).optional(),
    default: z.string().optional(),
    enum: z.array(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsItems$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsItems$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsItems$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsItems$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsItems$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsItems$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsItems$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsItemsToJSON(
  getConfigurationProductsPropertiesIntegrationsItems:
    GetConfigurationProductsPropertiesIntegrationsItems,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsItems$outboundSchema.parse(
      getConfigurationProductsPropertiesIntegrationsItems,
    ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsItemsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsItems,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsItems$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsItems' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349ToJSON(
  getConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349:
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsValue$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptionsValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type GetConfigurationProductsUiOptionsValue$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsUiOptionsValue$outboundSchema: z.ZodType<
  GetConfigurationProductsUiOptionsValue$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiOptionsValue
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsUiOptionsIntegrationsResponseAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsValue$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsValue$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptionsValue$Outbound;
}

export function getConfigurationProductsUiOptionsValueToJSON(
  getConfigurationProductsUiOptionsValue:
    GetConfigurationProductsUiOptionsValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsValue$outboundSchema.parse(
      getConfigurationProductsUiOptionsValue,
    ),
  );
}

export function getConfigurationProductsUiOptionsValueFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiOptionsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptionsValue' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3
  > = z.nativeEnum(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3,
  );

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3
  > =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsResponseDisabledToJSON(
  getConfigurationProductsUiOptionsIntegrationsResponseDisabled:
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$outboundSchema
      .parse(getConfigurationProductsUiOptionsIntegrationsResponseDisabled),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsResponseDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsResponseDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsResponseDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsResponseDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3
  > = z.nativeEnum(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3,
  );

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3
  > =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsResponseHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsResponseHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsResponseHidden$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsResponseHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsResponseHiddenToJSON(
  getConfigurationProductsUiOptionsIntegrationsResponseHidden:
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsResponseHidden$outboundSchema
      .parse(getConfigurationProductsUiOptionsIntegrationsResponseHidden),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsResponseHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsResponseHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsResponseHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsResponseHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptions3$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.lazy(() => GetConfigurationProductsUiOptionsValue$inboundSchema),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type GetConfigurationProductsUiOptions3$Outbound = {
  value: GetConfigurationProductsUiOptionsValue$Outbound;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const GetConfigurationProductsUiOptions3$outboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions3$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiOptions3
> = z.object({
  value: z.lazy(() => GetConfigurationProductsUiOptionsValue$outboundSchema),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptions3$ {
  /** @deprecated use `GetConfigurationProductsUiOptions3$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsUiOptions3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptions3$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions3$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptions3$Outbound;
}

export function getConfigurationProductsUiOptions3ToJSON(
  getConfigurationProductsUiOptions3: GetConfigurationProductsUiOptions3,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptions3$outboundSchema.parse(
      getConfigurationProductsUiOptions3,
    ),
  );
}

export function getConfigurationProductsUiOptions3FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiOptions3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptions3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptions3' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsUiOptionsAtBRANDAt510349$Outbound = {};

/** @internal */
export const GetConfigurationProductsUiOptionsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsUiOptionsAtBRANDAt510349ToJSON(
  getConfigurationProductsUiOptionsAtBRANDAt510349:
    GetConfigurationProductsUiOptionsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsAtBRANDAt510349$outboundSchema.parse(
      getConfigurationProductsUiOptionsAtBRANDAt510349,
    ),
  );
}

export function getConfigurationProductsUiOptionsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsAtBRANDAt510349$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiOptionsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptions2$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions2,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsUiOptionsAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type GetConfigurationProductsUiOptions2$Outbound = {
  "__@BRAND@510349": GetConfigurationProductsUiOptionsAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsUiOptions2$outboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiOptions2
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsUiOptionsAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptions2$ {
  /** @deprecated use `GetConfigurationProductsUiOptions2$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsUiOptions2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptions2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptions2$Outbound;
}

export function getConfigurationProductsUiOptions2ToJSON(
  getConfigurationProductsUiOptions2: GetConfigurationProductsUiOptions2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptions2$outboundSchema.parse(
      getConfigurationProductsUiOptions2,
    ),
  );
}

export function getConfigurationProductsUiOptions2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiOptions2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptions2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptions2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse2003
  > = z.nativeEnum(GetConfigurationProductsDisabledIntegrationsResponse2003);

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2003$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse2003
  > = GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse2003$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2003$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsDisabledIntegrationsResponse2002ToJSON(
  getConfigurationProductsDisabledIntegrationsResponse2002:
    GetConfigurationProductsDisabledIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema
      .parse(getConfigurationProductsDisabledIntegrationsResponse2002),
  );
}

export function getConfigurationProductsDisabledIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse2003$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsDisabled$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsDisabled$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsDisabledToJSON(
  getConfigurationProductsUiOptionsIntegrationsDisabled:
    GetConfigurationProductsUiOptionsIntegrationsDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsDisabled$outboundSchema.parse(
      getConfigurationProductsUiOptionsIntegrationsDisabled,
    ),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsDisabled$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse2003
  > = z.nativeEnum(GetConfigurationProductsHiddenIntegrationsResponse2003);

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2003$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse2003
  > = GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse2003$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2003$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsHiddenIntegrationsResponse2002ToJSON(
  getConfigurationProductsHiddenIntegrationsResponse2002:
    GetConfigurationProductsHiddenIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema.parse(
      getConfigurationProductsHiddenIntegrationsResponse2002,
    ),
  );
}

export function getConfigurationProductsHiddenIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse2003$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsHidden$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsHidden$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsHiddenToJSON(
  getConfigurationProductsUiOptionsIntegrationsHidden:
    GetConfigurationProductsUiOptionsIntegrationsHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsHidden$outboundSchema.parse(
      getConfigurationProductsUiOptionsIntegrationsHidden,
    ),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsHidden$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptions1$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions1,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse2003$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse2003$inboundSchema,
  ]).optional(),
});

/** @internal */
export type GetConfigurationProductsUiOptions1$Outbound = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse2002$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse2002$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const GetConfigurationProductsUiOptions1$outboundSchema: z.ZodType<
  GetConfigurationProductsUiOptions1$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiOptions1
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse2003$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse2003$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptions1$ {
  /** @deprecated use `GetConfigurationProductsUiOptions1$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsUiOptions1$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions1$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptions1$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptions1$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptions1$Outbound;
}

export function getConfigurationProductsUiOptions1ToJSON(
  getConfigurationProductsUiOptions1: GetConfigurationProductsUiOptions1,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptions1$outboundSchema.parse(
      getConfigurationProductsUiOptions1,
    ),
  );
}

export function getConfigurationProductsUiOptions1FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiOptions1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptions1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptions1' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiOptions$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiOptions,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetConfigurationProductsUiOptions1$inboundSchema),
    z.lazy(() => GetConfigurationProductsUiOptions2$inboundSchema),
    z.lazy(() => GetConfigurationProductsUiOptions3$inboundSchema),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiOptions$Outbound =
  | GetConfigurationProductsUiOptions1$Outbound
  | GetConfigurationProductsUiOptions2$Outbound
  | GetConfigurationProductsUiOptions3$Outbound;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiOptions$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiOptions$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiOptions
  > = z.union([
    z.lazy(() => GetConfigurationProductsUiOptions1$outboundSchema),
    z.lazy(() => GetConfigurationProductsUiOptions2$outboundSchema),
    z.lazy(() => GetConfigurationProductsUiOptions3$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiOptions$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiOptions$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiOptions$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiOptions$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiOptions$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiOptions$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiOptions$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiOptionsToJSON(
  getConfigurationProductsPropertiesIntegrationsUiOptions:
    GetConfigurationProductsPropertiesIntegrationsUiOptions,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiOptions$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsUiOptions),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiOptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiOptions' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > = z.nativeEnum(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3,
  );

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnlyToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > = z.nativeEnum(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3,
  );

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > = z.nativeEnum(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3,
  );

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescriptionToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValueToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const Default$inboundSchema: z.ZodType<Default, z.ZodTypeDef, unknown> =
  z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type Default$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$Outbound;
};

/** @internal */
export const Default$outboundSchema: z.ZodType<
  Default$Outbound,
  z.ZodTypeDef,
  Default
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Default$ {
  /** @deprecated use `Default$inboundSchema` instead. */
  export const inboundSchema = Default$inboundSchema;
  /** @deprecated use `Default$outboundSchema` instead. */
  export const outboundSchema = Default$outboundSchema;
  /** @deprecated use `Default$Outbound` instead. */
  export type Outbound = Default$Outbound;
}

export function defaultToJSON(value: Default): string {
  return JSON.stringify(Default$outboundSchema.parse(value));
}

export function defaultFromJSON(
  jsonString: string,
): SafeParseResult<Default, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Default$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Default' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const Example$inboundSchema: z.ZodType<Example, z.ZodTypeDef, unknown> =
  z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type Example$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$Outbound;
};

/** @internal */
export const Example$outboundSchema: z.ZodType<
  Example$Outbound,
  z.ZodTypeDef,
  Example
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema8AtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Example$ {
  /** @deprecated use `Example$inboundSchema` instead. */
  export const inboundSchema = Example$inboundSchema;
  /** @deprecated use `Example$outboundSchema` instead. */
  export const outboundSchema = Example$outboundSchema;
  /** @deprecated use `Example$Outbound` instead. */
  export type Outbound = Example$Outbound;
}

export function exampleToJSON(example: Example): string {
  return JSON.stringify(Example$outboundSchema.parse(example));
}

export function exampleFromJSON(
  jsonString: string,
): SafeParseResult<Example, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Example$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Example' from JSON`,
  );
}

/** @internal */
export const Properties8$inboundSchema: z.ZodType<
  Properties8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$inboundSchema,
  "ui:control":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$inboundSchema,
  items: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsItems$inboundSchema
  ),
  "ui:options": z.array(
    z.union([
      z.lazy(() => GetConfigurationProductsUiOptions1$inboundSchema),
      z.lazy(() => GetConfigurationProductsUiOptions2$inboundSchema),
      z.lazy(() => GetConfigurationProductsUiOptions3$inboundSchema),
    ]),
  ),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$inboundSchema
  ).optional(),
  "ui:placeholder": z.string().optional(),
  default: z.array(z.lazy(() => Default$inboundSchema)).optional(),
  example: z.array(z.lazy(() => Example$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:options": "uiOptions",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties8$Outbound = {
  type: string;
  "ui:control": string;
  items: GetConfigurationProductsPropertiesIntegrationsItems$Outbound;
  "ui:options": Array<
    | GetConfigurationProductsUiOptions1$Outbound
    | GetConfigurationProductsUiOptions2$Outbound
    | GetConfigurationProductsUiOptions3$Outbound
  >;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$Outbound
    | undefined;
  "ui:placeholder"?: string | undefined;
  default?: Array<Default$Outbound> | undefined;
  example?: Array<Example$Outbound> | undefined;
};

/** @internal */
export const Properties8$outboundSchema: z.ZodType<
  Properties8$Outbound,
  z.ZodTypeDef,
  Properties8
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsType$outboundSchema,
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiControl$outboundSchema,
  items: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsItems$outboundSchema
  ),
  uiOptions: z.array(
    z.union([
      z.lazy(() => GetConfigurationProductsUiOptions1$outboundSchema),
      z.lazy(() => GetConfigurationProductsUiOptions2$outboundSchema),
      z.lazy(() => GetConfigurationProductsUiOptions3$outboundSchema),
    ]),
  ),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyUiFormattedValue$outboundSchema
  ).optional(),
  uiPlaceholder: z.string().optional(),
  default: z.array(z.lazy(() => Default$outboundSchema)).optional(),
  example: z.array(z.lazy(() => Example$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiOptions: "ui:options",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties8$ {
  /** @deprecated use `Properties8$inboundSchema` instead. */
  export const inboundSchema = Properties8$inboundSchema;
  /** @deprecated use `Properties8$outboundSchema` instead. */
  export const outboundSchema = Properties8$outboundSchema;
  /** @deprecated use `Properties8$Outbound` instead. */
  export type Outbound = Properties8$Outbound;
}

export function properties8ToJSON(properties8: Properties8): string {
  return JSON.stringify(Properties8$outboundSchema.parse(properties8));
}

export function properties8FromJSON(
  jsonString: string,
): SafeParseResult<Properties8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties8' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349ToJSON(
  getConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349:
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$outboundSchema
      .parse(getConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349),
  );
}

export function getConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const UiOptionsValue$inboundSchema: z.ZodType<
  UiOptionsValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type UiOptionsValue$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$Outbound;
};

/** @internal */
export const UiOptionsValue$outboundSchema: z.ZodType<
  UiOptionsValue$Outbound,
  z.ZodTypeDef,
  UiOptionsValue
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsUiOptionsIntegrationsAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptionsValue$ {
  /** @deprecated use `UiOptionsValue$inboundSchema` instead. */
  export const inboundSchema = UiOptionsValue$inboundSchema;
  /** @deprecated use `UiOptionsValue$outboundSchema` instead. */
  export const outboundSchema = UiOptionsValue$outboundSchema;
  /** @deprecated use `UiOptionsValue$Outbound` instead. */
  export type Outbound = UiOptionsValue$Outbound;
}

export function uiOptionsValueToJSON(uiOptionsValue: UiOptionsValue): string {
  return JSON.stringify(UiOptionsValue$outboundSchema.parse(uiOptionsValue));
}

export function uiOptionsValueFromJSON(
  jsonString: string,
): SafeParseResult<UiOptionsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptionsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptionsValue' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > = z.nativeEnum(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3,
  );

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsDisabled$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptionsDisabled,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
]);

/** @internal */
export type GetConfigurationProductsUiOptionsDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiOptionsDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiOptionsDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsDisabled$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsDisabled$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptionsDisabled$Outbound;
}

export function getConfigurationProductsUiOptionsDisabledToJSON(
  getConfigurationProductsUiOptionsDisabled:
    GetConfigurationProductsUiOptionsDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsDisabled$outboundSchema.parse(
      getConfigurationProductsUiOptionsDisabled,
    ),
  );
}

export function getConfigurationProductsUiOptionsDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsDisabled$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiOptionsDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > = z.nativeEnum(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3,
  );

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3
  > =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound;
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2ToJSON(
  getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2:
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
      .parse(
        getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
      ),
  );
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiOptionsHidden$inboundSchema: z.ZodType<
  GetConfigurationProductsUiOptionsHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
]);

/** @internal */
export type GetConfigurationProductsUiOptionsHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsUiOptionsHidden$outboundSchema: z.ZodType<
  GetConfigurationProductsUiOptionsHidden$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiOptionsHidden
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiOptionsHidden$ {
  /** @deprecated use `GetConfigurationProductsUiOptionsHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiOptionsHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiOptionsHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiOptionsHidden$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiOptionsHidden$Outbound;
}

export function getConfigurationProductsUiOptionsHiddenToJSON(
  getConfigurationProductsUiOptionsHidden:
    GetConfigurationProductsUiOptionsHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiOptionsHidden$outboundSchema.parse(
      getConfigurationProductsUiOptionsHidden,
    ),
  );
}

export function getConfigurationProductsUiOptionsHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiOptionsHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiOptionsHidden$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiOptionsHidden' from JSON`,
  );
}

/** @internal */
export const UiOptions3$inboundSchema: z.ZodType<
  UiOptions3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.lazy(() => UiOptionsValue$inboundSchema),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type UiOptions3$Outbound = {
  value: UiOptionsValue$Outbound;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const UiOptions3$outboundSchema: z.ZodType<
  UiOptions3$Outbound,
  z.ZodTypeDef,
  UiOptions3
> = z.object({
  value: z.lazy(() => UiOptionsValue$outboundSchema),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBodyProducts3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptions3$ {
  /** @deprecated use `UiOptions3$inboundSchema` instead. */
  export const inboundSchema = UiOptions3$inboundSchema;
  /** @deprecated use `UiOptions3$outboundSchema` instead. */
  export const outboundSchema = UiOptions3$outboundSchema;
  /** @deprecated use `UiOptions3$Outbound` instead. */
  export type Outbound = UiOptions3$Outbound;
}

export function uiOptions3ToJSON(uiOptions3: UiOptions3): string {
  return JSON.stringify(UiOptions3$outboundSchema.parse(uiOptions3));
}

export function uiOptions3FromJSON(
  jsonString: string,
): SafeParseResult<UiOptions3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptions3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptions3' from JSON`,
  );
}

/** @internal */
export const UiOptionsAtBRANDAt510349$inboundSchema: z.ZodType<
  UiOptionsAtBRANDAt510349,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UiOptionsAtBRANDAt510349$Outbound = {};

/** @internal */
export const UiOptionsAtBRANDAt510349$outboundSchema: z.ZodType<
  UiOptionsAtBRANDAt510349$Outbound,
  z.ZodTypeDef,
  UiOptionsAtBRANDAt510349
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptionsAtBRANDAt510349$ {
  /** @deprecated use `UiOptionsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema = UiOptionsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `UiOptionsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema = UiOptionsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `UiOptionsAtBRANDAt510349$Outbound` instead. */
  export type Outbound = UiOptionsAtBRANDAt510349$Outbound;
}

export function uiOptionsAtBRANDAt510349ToJSON(
  uiOptionsAtBRANDAt510349: UiOptionsAtBRANDAt510349,
): string {
  return JSON.stringify(
    UiOptionsAtBRANDAt510349$outboundSchema.parse(uiOptionsAtBRANDAt510349),
  );
}

export function uiOptionsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<UiOptionsAtBRANDAt510349, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptionsAtBRANDAt510349$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptionsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const UiOptions2$inboundSchema: z.ZodType<
  UiOptions2,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() => UiOptionsAtBRANDAt510349$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type UiOptions2$Outbound = {
  "__@BRAND@510349": UiOptionsAtBRANDAt510349$Outbound;
};

/** @internal */
export const UiOptions2$outboundSchema: z.ZodType<
  UiOptions2$Outbound,
  z.ZodTypeDef,
  UiOptions2
> = z.object({
  atBRANDAt510349: z.lazy(() => UiOptionsAtBRANDAt510349$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptions2$ {
  /** @deprecated use `UiOptions2$inboundSchema` instead. */
  export const inboundSchema = UiOptions2$inboundSchema;
  /** @deprecated use `UiOptions2$outboundSchema` instead. */
  export const outboundSchema = UiOptions2$outboundSchema;
  /** @deprecated use `UiOptions2$Outbound` instead. */
  export type Outbound = UiOptions2$Outbound;
}

export function uiOptions2ToJSON(uiOptions2: UiOptions2): string {
  return JSON.stringify(UiOptions2$outboundSchema.parse(uiOptions2));
}

export function uiOptions2FromJSON(
  jsonString: string,
): SafeParseResult<UiOptions2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptions2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptions2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  > = z.nativeEnum(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3,
  );

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  > =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const UiOptionsDisabled$inboundSchema: z.ZodType<
  UiOptionsDisabled,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
]);

/** @internal */
export type UiOptionsDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | boolean
  | string;

/** @internal */
export const UiOptionsDisabled$outboundSchema: z.ZodType<
  UiOptionsDisabled$Outbound,
  z.ZodTypeDef,
  UiOptionsDisabled
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptionsDisabled$ {
  /** @deprecated use `UiOptionsDisabled$inboundSchema` instead. */
  export const inboundSchema = UiOptionsDisabled$inboundSchema;
  /** @deprecated use `UiOptionsDisabled$outboundSchema` instead. */
  export const outboundSchema = UiOptionsDisabled$outboundSchema;
  /** @deprecated use `UiOptionsDisabled$Outbound` instead. */
  export type Outbound = UiOptionsDisabled$Outbound;
}

export function uiOptionsDisabledToJSON(
  uiOptionsDisabled: UiOptionsDisabled,
): string {
  return JSON.stringify(
    UiOptionsDisabled$outboundSchema.parse(uiOptionsDisabled),
  );
}

export function uiOptionsDisabledFromJSON(
  jsonString: string,
): SafeParseResult<UiOptionsDisabled, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptionsDisabled$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptionsDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  > = z.nativeEnum(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3,
  );

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  > =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const UiOptionsHidden$inboundSchema: z.ZodType<
  UiOptionsHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
]);

/** @internal */
export type UiOptionsHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | boolean
  | string;

/** @internal */
export const UiOptionsHidden$outboundSchema: z.ZodType<
  UiOptionsHidden$Outbound,
  z.ZodTypeDef,
  UiOptionsHidden
> = z.union([
  z.lazy(() =>
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
  ),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptionsHidden$ {
  /** @deprecated use `UiOptionsHidden$inboundSchema` instead. */
  export const inboundSchema = UiOptionsHidden$inboundSchema;
  /** @deprecated use `UiOptionsHidden$outboundSchema` instead. */
  export const outboundSchema = UiOptionsHidden$outboundSchema;
  /** @deprecated use `UiOptionsHidden$Outbound` instead. */
  export type Outbound = UiOptionsHidden$Outbound;
}

export function uiOptionsHiddenToJSON(
  uiOptionsHidden: UiOptionsHidden,
): string {
  return JSON.stringify(UiOptionsHidden$outboundSchema.parse(uiOptionsHidden));
}

export function uiOptionsHiddenFromJSON(
  jsonString: string,
): SafeParseResult<UiOptionsHidden, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptionsHidden$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptionsHidden' from JSON`,
  );
}

/** @internal */
export const UiOptions1$inboundSchema: z.ZodType<
  UiOptions1,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type UiOptions1$Outbound = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const UiOptions1$outboundSchema: z.ZodType<
  UiOptions1$Outbound,
  z.ZodTypeDef,
  UiOptions1
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptions1$ {
  /** @deprecated use `UiOptions1$inboundSchema` instead. */
  export const inboundSchema = UiOptions1$inboundSchema;
  /** @deprecated use `UiOptions1$outboundSchema` instead. */
  export const outboundSchema = UiOptions1$outboundSchema;
  /** @deprecated use `UiOptions1$Outbound` instead. */
  export type Outbound = UiOptions1$Outbound;
}

export function uiOptions1ToJSON(uiOptions1: UiOptions1): string {
  return JSON.stringify(UiOptions1$outboundSchema.parse(uiOptions1));
}

export function uiOptions1FromJSON(
  jsonString: string,
): SafeParseResult<UiOptions1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptions1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptions1' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiOptions$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiOptions,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UiOptions1$inboundSchema),
    z.lazy(() => UiOptions2$inboundSchema),
    z.lazy(() => UiOptions3$inboundSchema),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesUiOptions$Outbound =
  | UiOptions1$Outbound
  | UiOptions2$Outbound
  | UiOptions3$Outbound;

/** @internal */
export const GetConfigurationProductsPropertiesUiOptions$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiOptions$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiOptions
  > = z.union([
    z.lazy(() => UiOptions1$outboundSchema),
    z.lazy(() => UiOptions2$outboundSchema),
    z.lazy(() => UiOptions3$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiOptions$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiOptions$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiOptions$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiOptions$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiOptions$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiOptions$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesUiOptions$Outbound;
}

export function getConfigurationProductsPropertiesUiOptionsToJSON(
  getConfigurationProductsPropertiesUiOptions:
    GetConfigurationProductsPropertiesUiOptions,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiOptions$outboundSchema.parse(
      getConfigurationProductsPropertiesUiOptions,
    ),
  );
}

export function getConfigurationProductsPropertiesUiOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiOptions' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesMinLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesMinLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesMinLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesMinLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesMinLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesMinLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesMinLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesMinLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesMinLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesMinLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesMinLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesMinLength$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesMinLength$Outbound;
}

export function getConfigurationProductsPropertiesMinLengthToJSON(
  getConfigurationProductsPropertiesMinLength:
    GetConfigurationProductsPropertiesMinLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesMinLength$outboundSchema.parse(
      getConfigurationProductsPropertiesMinLength,
    ),
  );
}

export function getConfigurationProductsPropertiesMinLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesMinLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesMinLength$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesMinLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesMaxLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesMaxLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesMaxLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesMaxLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesMaxLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesMaxLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesMaxLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesMaxLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesMaxLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesMaxLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesMaxLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesMaxLength$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesMaxLength$Outbound;
}

export function getConfigurationProductsPropertiesMaxLengthToJSON(
  getConfigurationProductsPropertiesMaxLength:
    GetConfigurationProductsPropertiesMaxLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesMaxLength$outboundSchema.parse(
      getConfigurationProductsPropertiesMaxLength,
    ),
  );
}

export function getConfigurationProductsPropertiesMaxLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesMaxLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesMaxLength$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesMaxLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesPattern$inboundSchema: z.ZodType<
  GetConfigurationProductsPropertiesPattern,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type GetConfigurationProductsPropertiesPattern$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesPattern$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesPattern$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesPattern
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesPattern$ {
  /** @deprecated use `GetConfigurationProductsPropertiesPattern$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesPattern$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesPattern$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesPattern$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesPattern$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesPattern$Outbound;
}

export function getConfigurationProductsPropertiesPatternToJSON(
  getConfigurationProductsPropertiesPattern:
    GetConfigurationProductsPropertiesPattern,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesPattern$outboundSchema.parse(
      getConfigurationProductsPropertiesPattern,
    ),
  );
}

export function getConfigurationProductsPropertiesPatternFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesPattern,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesPattern$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesPattern' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3
  > = z.nativeEnum(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3,
  );

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3
  > =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnlyToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  > = z.nativeEnum(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3,
  );

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3
  > =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  > = z.nativeEnum(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3,
  );

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3
  > =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2ToJSON(
  getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2:
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescriptionToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValueToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties7$inboundSchema: z.ZodType<
  Properties7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  "ui:control":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$inboundSchema,
  "ui:options": z.array(
    z.union([
      z.lazy(() => UiOptions1$inboundSchema),
      z.lazy(() => UiOptions2$inboundSchema),
      z.lazy(() => UiOptions3$inboundSchema),
    ]),
  ),
  description: z.string().optional(),
  minLength: z.lazy(() =>
    GetConfigurationProductsPropertiesMinLength$inboundSchema
  ).optional(),
  maxLength: z.lazy(() =>
    GetConfigurationProductsPropertiesMaxLength$inboundSchema
  ).optional(),
  pattern: z.lazy(() => GetConfigurationProductsPropertiesPattern$inboundSchema)
    .optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$inboundSchema
  ).optional(),
  "ui:placeholder": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:options": "uiOptions",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties7$Outbound = {
  type: string;
  "ui:control": string;
  "ui:options": Array<
    UiOptions1$Outbound | UiOptions2$Outbound | UiOptions3$Outbound
  >;
  description?: string | undefined;
  minLength?: GetConfigurationProductsPropertiesMinLength$Outbound | undefined;
  maxLength?: GetConfigurationProductsPropertiesMaxLength$Outbound | undefined;
  pattern?: GetConfigurationProductsPropertiesPattern$Outbound | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$Outbound
    | undefined;
  "ui:placeholder"?: string | undefined;
};

/** @internal */
export const Properties7$outboundSchema: z.ZodType<
  Properties7$Outbound,
  z.ZodTypeDef,
  Properties7
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiControl$outboundSchema,
  uiOptions: z.array(
    z.union([
      z.lazy(() => UiOptions1$outboundSchema),
      z.lazy(() => UiOptions2$outboundSchema),
      z.lazy(() => UiOptions3$outboundSchema),
    ]),
  ),
  description: z.string().optional(),
  minLength: z.lazy(() =>
    GetConfigurationProductsPropertiesMinLength$outboundSchema
  ).optional(),
  maxLength: z.lazy(() =>
    GetConfigurationProductsPropertiesMaxLength$outboundSchema
  ).optional(),
  pattern: z.lazy(() =>
    GetConfigurationProductsPropertiesPattern$outboundSchema
  ).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSONResponseBody3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONUiFormattedValue$outboundSchema
  ).optional(),
  uiPlaceholder: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiOptions: "ui:options",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties7$ {
  /** @deprecated use `Properties7$inboundSchema` instead. */
  export const inboundSchema = Properties7$inboundSchema;
  /** @deprecated use `Properties7$outboundSchema` instead. */
  export const outboundSchema = Properties7$outboundSchema;
  /** @deprecated use `Properties7$Outbound` instead. */
  export type Outbound = Properties7$Outbound;
}

export function properties7ToJSON(properties7: Properties7): string {
  return JSON.stringify(Properties7$outboundSchema.parse(properties7));
}

export function properties7FromJSON(
  jsonString: string,
): SafeParseResult<Properties7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties7' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200UiControl
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200UiControl
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsMinLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsMinLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsMinLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsMinLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsMinLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsMinLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsMinLengthAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsMinLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMinLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsMinLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMinLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsMinLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMinLength$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsMinLength$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsMinLengthToJSON(
  getConfigurationProductsPropertiesIntegrationsMinLength:
    GetConfigurationProductsPropertiesIntegrationsMinLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsMinLength$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsMinLength),
  );
}

export function getConfigurationProductsPropertiesIntegrationsMinLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsMinLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsMinLength$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsMinLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsMaxLength$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsMaxLength,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsMaxLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsMaxLength$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsMaxLength$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsMaxLength
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6AtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsMaxLength$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMaxLength$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsMaxLength$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMaxLength$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsMaxLength$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsMaxLength$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsMaxLength$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsMaxLengthToJSON(
  getConfigurationProductsPropertiesIntegrationsMaxLength:
    GetConfigurationProductsPropertiesIntegrationsMaxLength,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsMaxLength$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsMaxLength),
  );
}

export function getConfigurationProductsPropertiesIntegrationsMaxLengthFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsMaxLength,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsMaxLength$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsMaxLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsPattern$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsPattern,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsPattern$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$Outbound;
};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsPattern$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsPattern$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsPattern
  > = z.object({
    atBRANDAt510349: z.lazy(() =>
      GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6ItemsAtBRANDAt510349$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      atBRANDAt510349: "__@BRAND@510349",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsPattern$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsPattern$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsPattern$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsPattern$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsPattern$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsPattern$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsPattern$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsPatternToJSON(
  getConfigurationProductsPropertiesIntegrationsPattern:
    GetConfigurationProductsPropertiesIntegrationsPattern,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsPattern$outboundSchema.parse(
      getConfigurationProductsPropertiesIntegrationsPattern,
    ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsPatternFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsPattern,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsPattern$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsPattern' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesItems$inboundSchema: z.ZodType<
  GetConfigurationProductsPropertiesItems,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$inboundSchema,
  description: z.string().optional(),
  minLength: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsMinLength$inboundSchema
  ).optional(),
  maxLength: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsMaxLength$inboundSchema
  ).optional(),
  pattern: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsPattern$inboundSchema
  ).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
});

/** @internal */
export type GetConfigurationProductsPropertiesItems$Outbound = {
  type: string;
  description?: string | undefined;
  minLength?:
    | GetConfigurationProductsPropertiesIntegrationsMinLength$Outbound
    | undefined;
  maxLength?:
    | GetConfigurationProductsPropertiesIntegrationsMaxLength$Outbound
    | undefined;
  pattern?:
    | GetConfigurationProductsPropertiesIntegrationsPattern$Outbound
    | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
};

/** @internal */
export const GetConfigurationProductsPropertiesItems$outboundSchema: z.ZodType<
  GetConfigurationProductsPropertiesItems$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsPropertiesItems
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchema6Type$outboundSchema,
  description: z.string().optional(),
  minLength: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsMinLength$outboundSchema
  ).optional(),
  maxLength: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsMaxLength$outboundSchema
  ).optional(),
  pattern: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsPattern$outboundSchema
  ).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesItems$ {
  /** @deprecated use `GetConfigurationProductsPropertiesItems$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesItems$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesItems$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesItems$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesItems$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesItems$Outbound;
}

export function getConfigurationProductsPropertiesItemsToJSON(
  getConfigurationProductsPropertiesItems:
    GetConfigurationProductsPropertiesItems,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesItems$outboundSchema.parse(
      getConfigurationProductsPropertiesItems,
    ),
  );
}

export function getConfigurationProductsPropertiesItemsFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesItems,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesItems$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesItems' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse3
  > = z.nativeEnum(GetConfigurationProductsDisabledIntegrationsResponse3);

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsDisabledIntegrationsResponse3
  > = GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse3$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrationsResponse2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsDisabledIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsDisabledIntegrationsResponse2ToJSON(
  getConfigurationProductsDisabledIntegrationsResponse2:
    GetConfigurationProductsDisabledIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema.parse(
      getConfigurationProductsDisabledIntegrationsResponse2,
    ),
  );
}

export function getConfigurationProductsDisabledIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrationsResponse2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsDisabled:
    GetConfigurationProductsPropertiesIntegrationsDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsDisabled$outboundSchema.parse(
      getConfigurationProductsPropertiesIntegrationsDisabled,
    ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsHiddenIntegrationsResponse3> =
    z.nativeEnum(GetConfigurationProductsHiddenIntegrationsResponse3);

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsHiddenIntegrationsResponse3> =
    GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse3$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrationsResponse2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsHiddenIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsHiddenIntegrationsResponse2ToJSON(
  getConfigurationProductsHiddenIntegrationsResponse2:
    GetConfigurationProductsHiddenIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema.parse(
      getConfigurationProductsHiddenIntegrationsResponse2,
    ),
  );
}

export function getConfigurationProductsHiddenIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrationsResponse2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsHidden:
    GetConfigurationProductsPropertiesIntegrationsHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsHidden$outboundSchema.parse(
      getConfigurationProductsPropertiesIntegrationsHidden,
    ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsHidden$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsHidden' from JSON`,
  );
}

/** @internal */
export const PropertiesUiOptions$inboundSchema: z.ZodType<
  PropertiesUiOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type PropertiesUiOptions$Outbound = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrationsResponse2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrationsResponse2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const PropertiesUiOptions$outboundSchema: z.ZodType<
  PropertiesUiOptions$Outbound,
  z.ZodTypeDef,
  PropertiesUiOptions
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsDisabledIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrationsResponse3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsHiddenIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrationsResponse3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiOptions$ {
  /** @deprecated use `PropertiesUiOptions$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiOptions$inboundSchema;
  /** @deprecated use `PropertiesUiOptions$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiOptions$outboundSchema;
  /** @deprecated use `PropertiesUiOptions$Outbound` instead. */
  export type Outbound = PropertiesUiOptions$Outbound;
}

export function propertiesUiOptionsToJSON(
  propertiesUiOptions: PropertiesUiOptions,
): string {
  return JSON.stringify(
    PropertiesUiOptions$outboundSchema.parse(propertiesUiOptions),
  );
}

export function propertiesUiOptionsFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiOptions' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3
  > = z.nativeEnum(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3,
  );

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3
  > =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiReadOnlyToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200UiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3
  > = z.nativeEnum(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3,
  );

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3
  > =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200UiHidden:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponse200UiHidden),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200UiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3
  > = z.nativeEnum(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3,
  );

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3
  > =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200UiDisabled:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200UiDisabled,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200UiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSON2ToJSON(
  getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2:
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema
      .parse(
        getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2,
      ),
  );
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJSON2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiDescriptionToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200UiDescription:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200UiDescription,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200UiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValueToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties6$inboundSchema: z.ZodType<
  Properties6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$inboundSchema,
  "ui:control":
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$inboundSchema,
  items: z.lazy(() => GetConfigurationProductsPropertiesItems$inboundSchema),
  "ui:options": z.array(z.lazy(() => PropertiesUiOptions$inboundSchema)),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$inboundSchema
  ).optional(),
  "ui:placeholder": z.string().optional(),
  default: z.array(z.string()).optional(),
  example: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:options": "uiOptions",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties6$Outbound = {
  type: string;
  "ui:control": string;
  items: GetConfigurationProductsPropertiesItems$Outbound;
  "ui:options": Array<PropertiesUiOptions$Outbound>;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$Outbound
    | undefined;
  "ui:placeholder"?: string | undefined;
  default?: Array<string> | undefined;
  example?: Array<string> | undefined;
};

/** @internal */
export const Properties6$outboundSchema: z.ZodType<
  Properties6$Outbound,
  z.ZodTypeDef,
  Properties6
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONType$outboundSchema,
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponse200UiControl$outboundSchema,
  items: z.lazy(() => GetConfigurationProductsPropertiesItems$outboundSchema),
  uiOptions: z.array(z.lazy(() => PropertiesUiOptions$outboundSchema)),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse200ApplicationJson3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse200ApplicationJson2$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200UiFormattedValue$outboundSchema
  ).optional(),
  uiPlaceholder: z.string().optional(),
  default: z.array(z.string()).optional(),
  example: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiOptions: "ui:options",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties6$ {
  /** @deprecated use `Properties6$inboundSchema` instead. */
  export const inboundSchema = Properties6$inboundSchema;
  /** @deprecated use `Properties6$outboundSchema` instead. */
  export const outboundSchema = Properties6$outboundSchema;
  /** @deprecated use `Properties6$Outbound` instead. */
  export type Outbound = Properties6$Outbound;
}

export function properties6ToJSON(properties6: Properties6): string {
  return JSON.stringify(Properties6$outboundSchema.parse(properties6));
}

export function properties6FromJSON(
  jsonString: string,
): SafeParseResult<Properties6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties6' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200Type
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200Type,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200Type
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200Type$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200Type$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200Type$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiControl$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponseUiControl
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiControl$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponseUiControl
  > =
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrations3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsDisabledIntegrations3> = z
    .nativeEnum(GetConfigurationProductsDisabledIntegrations3);

/** @internal */
export const GetConfigurationProductsDisabledIntegrations3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsDisabledIntegrations3> =
    GetConfigurationProductsDisabledIntegrations3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrations3$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrations3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrations3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrations3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrations3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsDisabledIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsDisabledIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsDisabledIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsDisabledIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsDisabledIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsDisabledIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsDisabledIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsDisabledIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsDisabledIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsDisabledIntegrations2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsDisabledIntegrations2$Outbound;
}

export function getConfigurationProductsDisabledIntegrations2ToJSON(
  getConfigurationProductsDisabledIntegrations2:
    GetConfigurationProductsDisabledIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsDisabledIntegrations2$outboundSchema.parse(
      getConfigurationProductsDisabledIntegrations2,
    ),
  );
}

export function getConfigurationProductsDisabledIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsDisabledIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsDisabledIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsDisabledIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesDisabled$inboundSchema:
  z.ZodType<GetConfigurationProductsPropertiesDisabled, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => GetConfigurationProductsDisabledIntegrations2$inboundSchema),
      z.boolean(),
      GetConfigurationProductsDisabledIntegrations3$inboundSchema,
    ]);

/** @internal */
export type GetConfigurationProductsPropertiesDisabled$Outbound =
  | GetConfigurationProductsDisabledIntegrations2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesDisabled
  > = z.union([
    z.lazy(() => GetConfigurationProductsDisabledIntegrations2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrations3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesDisabled$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesDisabled$Outbound;
}

export function getConfigurationProductsPropertiesDisabledToJSON(
  getConfigurationProductsPropertiesDisabled:
    GetConfigurationProductsPropertiesDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesDisabled$outboundSchema.parse(
      getConfigurationProductsPropertiesDisabled,
    ),
  );
}

export function getConfigurationProductsPropertiesDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesDisabled$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrations3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsHiddenIntegrations3> = z
    .nativeEnum(GetConfigurationProductsHiddenIntegrations3);

/** @internal */
export const GetConfigurationProductsHiddenIntegrations3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsHiddenIntegrations3> =
    GetConfigurationProductsHiddenIntegrations3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrations3$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrations3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrations3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrations3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrations3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsHiddenIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsHiddenIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsHiddenIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsHiddenIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsHiddenIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsHiddenIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsHiddenIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsHiddenIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsHiddenIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsHiddenIntegrations2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsHiddenIntegrations2$Outbound;
}

export function getConfigurationProductsHiddenIntegrations2ToJSON(
  getConfigurationProductsHiddenIntegrations2:
    GetConfigurationProductsHiddenIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsHiddenIntegrations2$outboundSchema.parse(
      getConfigurationProductsHiddenIntegrations2,
    ),
  );
}

export function getConfigurationProductsHiddenIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsHiddenIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsHiddenIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsHiddenIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesHidden$inboundSchema: z.ZodType<
  GetConfigurationProductsPropertiesHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsHiddenIntegrations2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrations3$inboundSchema,
]);

/** @internal */
export type GetConfigurationProductsPropertiesHidden$Outbound =
  | GetConfigurationProductsHiddenIntegrations2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesHidden$outboundSchema: z.ZodType<
  GetConfigurationProductsPropertiesHidden$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsPropertiesHidden
> = z.union([
  z.lazy(() => GetConfigurationProductsHiddenIntegrations2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsHiddenIntegrations3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesHidden$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesHidden$Outbound;
}

export function getConfigurationProductsPropertiesHiddenToJSON(
  getConfigurationProductsPropertiesHidden:
    GetConfigurationProductsPropertiesHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesHidden$outboundSchema.parse(
      getConfigurationProductsPropertiesHidden,
    ),
  );
}

export function getConfigurationProductsPropertiesHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesHidden$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesHidden' from JSON`,
  );
}

/** @internal */
export const UiOptions$inboundSchema: z.ZodType<
  UiOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() => GetConfigurationProductsDisabledIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrations3$inboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() => GetConfigurationProductsHiddenIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrations3$inboundSchema,
  ]).optional(),
});

/** @internal */
export type UiOptions$Outbound = {
  value: string;
  label: string;
  disabled?:
    | GetConfigurationProductsDisabledIntegrations2$Outbound
    | boolean
    | string
    | undefined;
  hidden?:
    | GetConfigurationProductsHiddenIntegrations2$Outbound
    | boolean
    | string
    | undefined;
};

/** @internal */
export const UiOptions$outboundSchema: z.ZodType<
  UiOptions$Outbound,
  z.ZodTypeDef,
  UiOptions
> = z.object({
  value: z.string(),
  label: z.string(),
  disabled: z.union([
    z.lazy(() => GetConfigurationProductsDisabledIntegrations2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsDisabledIntegrations3$outboundSchema,
  ]).optional(),
  hidden: z.union([
    z.lazy(() => GetConfigurationProductsHiddenIntegrations2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsHiddenIntegrations3$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiOptions$ {
  /** @deprecated use `UiOptions$inboundSchema` instead. */
  export const inboundSchema = UiOptions$inboundSchema;
  /** @deprecated use `UiOptions$outboundSchema` instead. */
  export const outboundSchema = UiOptions$outboundSchema;
  /** @deprecated use `UiOptions$Outbound` instead. */
  export type Outbound = UiOptions$Outbound;
}

export function uiOptionsToJSON(uiOptions: UiOptions): string {
  return JSON.stringify(UiOptions$outboundSchema.parse(uiOptions));
}

export function uiOptionsFromJSON(
  jsonString: string,
): SafeParseResult<UiOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiOptions' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsAtBRANDAt510349),
  );
}

export function getConfigurationProductsPropertiesIntegrationsAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const PropertiesMinLength$inboundSchema: z.ZodType<
  PropertiesMinLength,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type PropertiesMinLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$Outbound;
};

/** @internal */
export const PropertiesMinLength$outboundSchema: z.ZodType<
  PropertiesMinLength$Outbound,
  z.ZodTypeDef,
  PropertiesMinLength
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesMinLength$ {
  /** @deprecated use `PropertiesMinLength$inboundSchema` instead. */
  export const inboundSchema = PropertiesMinLength$inboundSchema;
  /** @deprecated use `PropertiesMinLength$outboundSchema` instead. */
  export const outboundSchema = PropertiesMinLength$outboundSchema;
  /** @deprecated use `PropertiesMinLength$Outbound` instead. */
  export type Outbound = PropertiesMinLength$Outbound;
}

export function propertiesMinLengthToJSON(
  propertiesMinLength: PropertiesMinLength,
): string {
  return JSON.stringify(
    PropertiesMinLength$outboundSchema.parse(propertiesMinLength),
  );
}

export function propertiesMinLengthFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesMinLength, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesMinLength$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesMinLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const PropertiesMaxLength$inboundSchema: z.ZodType<
  PropertiesMaxLength,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type PropertiesMaxLength$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$Outbound;
};

/** @internal */
export const PropertiesMaxLength$outboundSchema: z.ZodType<
  PropertiesMaxLength$Outbound,
  z.ZodTypeDef,
  PropertiesMaxLength
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponseAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesMaxLength$ {
  /** @deprecated use `PropertiesMaxLength$inboundSchema` instead. */
  export const inboundSchema = PropertiesMaxLength$inboundSchema;
  /** @deprecated use `PropertiesMaxLength$outboundSchema` instead. */
  export const outboundSchema = PropertiesMaxLength$outboundSchema;
  /** @deprecated use `PropertiesMaxLength$Outbound` instead. */
  export type Outbound = PropertiesMaxLength$Outbound;
}

export function propertiesMaxLengthToJSON(
  propertiesMaxLength: PropertiesMaxLength,
): string {
  return JSON.stringify(
    PropertiesMaxLength$outboundSchema.parse(propertiesMaxLength),
  );
}

export function propertiesMaxLengthFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesMaxLength, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesMaxLength$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesMaxLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$Outbound =
  {};

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349:
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const PropertiesPattern$inboundSchema: z.ZodType<
  PropertiesPattern,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type PropertiesPattern$Outbound = {
  "__@BRAND@510349":
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$Outbound;
};

/** @internal */
export const PropertiesPattern$outboundSchema: z.ZodType<
  PropertiesPattern$Outbound,
  z.ZodTypeDef,
  PropertiesPattern
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponse200AtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesPattern$ {
  /** @deprecated use `PropertiesPattern$inboundSchema` instead. */
  export const inboundSchema = PropertiesPattern$inboundSchema;
  /** @deprecated use `PropertiesPattern$outboundSchema` instead. */
  export const outboundSchema = PropertiesPattern$outboundSchema;
  /** @deprecated use `PropertiesPattern$Outbound` instead. */
  export type Outbound = PropertiesPattern$Outbound;
}

export function propertiesPatternToJSON(
  propertiesPattern: PropertiesPattern,
): string {
  return JSON.stringify(
    PropertiesPattern$outboundSchema.parse(propertiesPattern),
  );
}

export function propertiesPatternFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesPattern, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesPattern$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesPattern' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse2003
  > = z.nativeEnum(GetConfigurationProductsUiReadOnlyIntegrationsResponse2003);

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse2003
  > = GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse2002ToJSON(
  getConfigurationProductsUiReadOnlyIntegrationsResponse2002:
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema
      .parse(getConfigurationProductsUiReadOnlyIntegrationsResponse2002),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiReadOnlyToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseUiReadOnly:
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponseUiReadOnly),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse2003
  > = z.nativeEnum(GetConfigurationProductsUiHiddenIntegrationsResponse2003);

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2003$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse2003
  > = GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse2003$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrationsResponse2002ToJSON(
  getConfigurationProductsUiHiddenIntegrationsResponse2002:
    GetConfigurationProductsUiHiddenIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema
      .parse(getConfigurationProductsUiHiddenIntegrationsResponse2002),
  );
}

export function getConfigurationProductsUiHiddenIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseUiHidden:
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponseUiHidden),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseUiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseUiHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse2003
  > = z.nativeEnum(GetConfigurationProductsUiDisabledIntegrationsResponse2003);

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2003$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse2003
  > = GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse2003$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrationsResponse2002ToJSON(
  getConfigurationProductsUiDisabledIntegrationsResponse2002:
    GetConfigurationProductsUiDisabledIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema
      .parse(getConfigurationProductsUiDisabledIntegrationsResponse2002),
  );
}

export function getConfigurationProductsUiDisabledIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseUiDisabled:
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsResponseUiDisabled),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrationsResponse2002$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse2002ToJSON(
  getConfigurationProductsUiDescriptionIntegrationsResponse2002:
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema
      .parse(getConfigurationProductsUiDescriptionIntegrationsResponse2002),
  );
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrationsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrationsResponse2002' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiDescriptionToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseUiDescription:
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponseUiDescription,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseUiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseUiDescription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseUiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiFormattedValueToJSON(
  getConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue:
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$outboundSchema
      .parse(
        getConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue,
      ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsResponseUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties5$inboundSchema: z.ZodType<
  Properties5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200Type$inboundSchema,
  "ui:control":
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl$inboundSchema,
  "ui:options": z.array(z.lazy(() => UiOptions$inboundSchema)),
  description: z.string().optional(),
  minLength: z.lazy(() => PropertiesMinLength$inboundSchema).optional(),
  maxLength: z.lazy(() => PropertiesMaxLength$inboundSchema).optional(),
  pattern: z.lazy(() => PropertiesPattern$inboundSchema).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2002$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2002$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$inboundSchema
  ).optional(),
  "ui:placeholder": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:options": "uiOptions",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties5$Outbound = {
  type: string;
  "ui:control": string;
  "ui:options": Array<UiOptions$Outbound>;
  description?: string | undefined;
  minLength?: PropertiesMinLength$Outbound | undefined;
  maxLength?: PropertiesMaxLength$Outbound | undefined;
  pattern?: PropertiesPattern$Outbound | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse2002$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse2002$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse2002$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$Outbound
    | undefined;
  "ui:placeholder"?: string | undefined;
};

/** @internal */
export const Properties5$outboundSchema: z.ZodType<
  Properties5$Outbound,
  z.ZodTypeDef,
  Properties5
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200Type$outboundSchema,
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsResponseUiControl$outboundSchema,
  uiOptions: z.array(z.lazy(() => UiOptions$outboundSchema)),
  description: z.string().optional(),
  minLength: z.lazy(() => PropertiesMinLength$outboundSchema).optional(),
  maxLength: z.lazy(() => PropertiesMaxLength$outboundSchema).optional(),
  pattern: z.lazy(() => PropertiesPattern$outboundSchema).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2003$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse2003$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2002$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse2003$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2002$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsResponseUiFormattedValue$outboundSchema
  ).optional(),
  uiPlaceholder: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiOptions: "ui:options",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties5$ {
  /** @deprecated use `Properties5$inboundSchema` instead. */
  export const inboundSchema = Properties5$inboundSchema;
  /** @deprecated use `Properties5$outboundSchema` instead. */
  export const outboundSchema = Properties5$outboundSchema;
  /** @deprecated use `Properties5$Outbound` instead. */
  export type Outbound = Properties5$Outbound;
}

export function properties5ToJSON(properties5: Properties5): string {
  return JSON.stringify(Properties5$outboundSchema.parse(properties5));
}

export function properties5FromJSON(
  jsonString: string,
): SafeParseResult<Properties5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties5' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponseType
  > = z.nativeEnum(GetConfigurationProductsPropertiesIntegrationsResponseType);

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponseType
  > = GetConfigurationProductsPropertiesIntegrationsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponseType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponseType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiControl$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsUiControl
  > = z.nativeEnum(GetConfigurationProductsPropertiesIntegrationsUiControl);

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiControl$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsUiControl
  > = GetConfigurationProductsPropertiesIntegrationsUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType
  > = z.nativeEnum(
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType,
  );

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType
  > =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$outboundSchema;
}

/** @internal */
export const PropertiesItems$inboundSchema: z.ZodType<
  PropertiesItems,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$inboundSchema,
  description: z.string().optional(),
  minimum: z.number().optional(),
  exclusiveMinimum: z.number().optional(),
  maximum: z.number().optional(),
  exclusiveMaximum: z.number().optional(),
  default: z.number().optional(),
});

/** @internal */
export type PropertiesItems$Outbound = {
  type: string;
  description?: string | undefined;
  minimum?: number | undefined;
  exclusiveMinimum?: number | undefined;
  maximum?: number | undefined;
  exclusiveMaximum?: number | undefined;
  default?: number | undefined;
};

/** @internal */
export const PropertiesItems$outboundSchema: z.ZodType<
  PropertiesItems$Outbound,
  z.ZodTypeDef,
  PropertiesItems
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponse200ApplicationJSONResponseBodyProductsMetadataSchemaType$outboundSchema,
  description: z.string().optional(),
  minimum: z.number().optional(),
  exclusiveMinimum: z.number().optional(),
  maximum: z.number().optional(),
  exclusiveMaximum: z.number().optional(),
  default: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesItems$ {
  /** @deprecated use `PropertiesItems$inboundSchema` instead. */
  export const inboundSchema = PropertiesItems$inboundSchema;
  /** @deprecated use `PropertiesItems$outboundSchema` instead. */
  export const outboundSchema = PropertiesItems$outboundSchema;
  /** @deprecated use `PropertiesItems$Outbound` instead. */
  export type Outbound = PropertiesItems$Outbound;
}

export function propertiesItemsToJSON(
  propertiesItems: PropertiesItems,
): string {
  return JSON.stringify(PropertiesItems$outboundSchema.parse(propertiesItems));
}

export function propertiesItemsFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesItems, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesItems$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesItems' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse3
  > = z.nativeEnum(GetConfigurationProductsUiReadOnlyIntegrationsResponse3);

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiReadOnlyIntegrationsResponse3
  > = GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse2ToJSON(
  getConfigurationProductsUiReadOnlyIntegrationsResponse2:
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema
      .parse(getConfigurationProductsUiReadOnlyIntegrationsResponse2),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiReadOnly$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiReadOnlyToJSON(
  getConfigurationProductsPropertiesIntegrationsUiReadOnly:
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiReadOnly$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsUiReadOnly),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiReadOnly$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse3
  > = z.nativeEnum(GetConfigurationProductsUiHiddenIntegrationsResponse3);

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiHiddenIntegrationsResponse3
  > = GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse3$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrationsResponse2ToJSON(
  getConfigurationProductsUiHiddenIntegrationsResponse2:
    GetConfigurationProductsUiHiddenIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema.parse(
      getConfigurationProductsUiHiddenIntegrationsResponse2,
    ),
  );
}

export function getConfigurationProductsUiHiddenIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiHidden$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiHidden,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiHidden
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiHidden$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiHidden$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiHiddenToJSON(
  getConfigurationProductsPropertiesIntegrationsUiHidden:
    GetConfigurationProductsPropertiesIntegrationsUiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiHidden$outboundSchema.parse(
      getConfigurationProductsPropertiesIntegrationsUiHidden,
    ),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiHidden$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse3
  > = z.nativeEnum(GetConfigurationProductsUiDisabledIntegrationsResponse3);

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse3$outboundSchema:
  z.ZodNativeEnum<
    typeof GetConfigurationProductsUiDisabledIntegrationsResponse3
  > = GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrationsResponse2ToJSON(
  getConfigurationProductsUiDisabledIntegrationsResponse2:
    GetConfigurationProductsUiDisabledIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema
      .parse(getConfigurationProductsUiDisabledIntegrationsResponse2),
  );
}

export function getConfigurationProductsUiDisabledIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDisabled$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiDisabledToJSON(
  getConfigurationProductsPropertiesIntegrationsUiDisabled:
    GetConfigurationProductsPropertiesIntegrationsUiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiDisabled$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsUiDisabled),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiDisabled$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrationsResponse2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrationsResponse2$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse2ToJSON(
  getConfigurationProductsUiDescriptionIntegrationsResponse2:
    GetConfigurationProductsUiDescriptionIntegrationsResponse2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema
      .parse(getConfigurationProductsUiDescriptionIntegrationsResponse2),
  );
}

export function getConfigurationProductsUiDescriptionIntegrationsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrationsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrationsResponse2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiDescription$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiDescriptionToJSON(
  getConfigurationProductsPropertiesIntegrationsUiDescription:
    GetConfigurationProductsPropertiesIntegrationsUiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiDescription$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsUiDescription),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiDescription$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$Outbound =
  {
    expr: string;
  };

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesIntegrationsUiFormattedValueToJSON(
  getConfigurationProductsPropertiesIntegrationsUiFormattedValue:
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$outboundSchema
      .parse(getConfigurationProductsPropertiesIntegrationsUiFormattedValue),
  );
}

export function getConfigurationProductsPropertiesIntegrationsUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesIntegrationsUiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsPropertiesIntegrationsUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties4$inboundSchema: z.ZodType<
  Properties4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponseType$inboundSchema,
  "ui:control":
    GetConfigurationProductsPropertiesIntegrationsUiControl$inboundSchema,
  "ui:steps": z.array(z.number()),
  items: z.lazy(() => PropertiesItems$inboundSchema),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2$inboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$inboundSchema
  ).optional(),
  default: z.array(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:steps": "uiSteps",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
  });
});

/** @internal */
export type Properties4$Outbound = {
  type: string;
  "ui:control": string;
  "ui:steps": Array<number>;
  items: PropertiesItems$Outbound;
  description?: string | undefined;
  minItems?: number | undefined;
  maxItems?: number | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrationsResponse2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrationsResponse2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrationsResponse2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrationsResponse2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$Outbound
    | undefined;
  default?: Array<number> | undefined;
};

/** @internal */
export const Properties4$outboundSchema: z.ZodType<
  Properties4$Outbound,
  z.ZodTypeDef,
  Properties4
> = z.object({
  type:
    GetConfigurationProductsPropertiesIntegrationsResponseType$outboundSchema,
  uiControl:
    GetConfigurationProductsPropertiesIntegrationsUiControl$outboundSchema,
  uiSteps: z.array(z.number()),
  items: z.lazy(() => PropertiesItems$outboundSchema),
  description: z.string().optional(),
  minItems: z.number().optional(),
  maxItems: z.number().optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrationsResponse3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiHiddenIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrationsResponse3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrationsResponse2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrationsResponse3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrationsResponse2$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesIntegrationsUiFormattedValue$outboundSchema
  ).optional(),
  default: z.array(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiSteps: "ui:steps",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties4$ {
  /** @deprecated use `Properties4$inboundSchema` instead. */
  export const inboundSchema = Properties4$inboundSchema;
  /** @deprecated use `Properties4$outboundSchema` instead. */
  export const outboundSchema = Properties4$outboundSchema;
  /** @deprecated use `Properties4$Outbound` instead. */
  export type Outbound = Properties4$Outbound;
}

export function properties4ToJSON(properties4: Properties4): string {
  return JSON.stringify(Properties4$outboundSchema.parse(properties4));
}

export function properties4FromJSON(
  jsonString: string,
): SafeParseResult<Properties4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties4' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsType$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesIntegrationsType> = z
    .nativeEnum(GetConfigurationProductsPropertiesIntegrationsType);

/** @internal */
export const GetConfigurationProductsPropertiesIntegrationsType$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesIntegrationsType> =
    GetConfigurationProductsPropertiesIntegrationsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesIntegrationsType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesIntegrationsType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesIntegrationsType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesIntegrationsType$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsPropertiesUiControl$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesUiControl> = z
    .nativeEnum(GetConfigurationProductsPropertiesUiControl);

/** @internal */
export const GetConfigurationProductsPropertiesUiControl$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesUiControl> =
    GetConfigurationProductsPropertiesUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiControl$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiControl$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiControl$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiControl$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiReadOnlyIntegrations3> = z
    .nativeEnum(GetConfigurationProductsUiReadOnlyIntegrations3);

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrations3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiReadOnlyIntegrations3> =
    GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrations3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrations3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrations3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiReadOnlyIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiReadOnlyIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiReadOnlyIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnlyIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnlyIntegrations2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiReadOnlyIntegrations2$Outbound;
}

export function getConfigurationProductsUiReadOnlyIntegrations2ToJSON(
  getConfigurationProductsUiReadOnlyIntegrations2:
    GetConfigurationProductsUiReadOnlyIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema.parse(
      getConfigurationProductsUiReadOnlyIntegrations2,
    ),
  );
}

export function getConfigurationProductsUiReadOnlyIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiReadOnlyIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiReadOnlyIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiReadOnly$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiReadOnly,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnlyIntegrations2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesUiReadOnly$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiReadOnly$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiReadOnly
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrations3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiReadOnly$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiReadOnly$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiReadOnly$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiReadOnly$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiReadOnly$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiReadOnly$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesUiReadOnly$Outbound;
}

export function getConfigurationProductsPropertiesUiReadOnlyToJSON(
  getConfigurationProductsPropertiesUiReadOnly:
    GetConfigurationProductsPropertiesUiReadOnly,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiReadOnly$outboundSchema.parse(
      getConfigurationProductsPropertiesUiReadOnly,
    ),
  );
}

export function getConfigurationProductsPropertiesUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiReadOnly,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiReadOnly$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrations3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiHiddenIntegrations3> = z
    .nativeEnum(GetConfigurationProductsUiHiddenIntegrations3);

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrations3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiHiddenIntegrations3> =
    GetConfigurationProductsUiHiddenIntegrations3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrations3$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrations3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrations3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrations3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrations3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiHiddenIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiHiddenIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiHiddenIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiHiddenIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHiddenIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiHiddenIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHiddenIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHiddenIntegrations2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiHiddenIntegrations2$Outbound;
}

export function getConfigurationProductsUiHiddenIntegrations2ToJSON(
  getConfigurationProductsUiHiddenIntegrations2:
    GetConfigurationProductsUiHiddenIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHiddenIntegrations2$outboundSchema.parse(
      getConfigurationProductsUiHiddenIntegrations2,
    ),
  );
}

export function getConfigurationProductsUiHiddenIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiHiddenIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiHiddenIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiHiddenIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiHidden$inboundSchema:
  z.ZodType<GetConfigurationProductsPropertiesUiHidden, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => GetConfigurationProductsUiHiddenIntegrations2$inboundSchema),
      z.boolean(),
      GetConfigurationProductsUiHiddenIntegrations3$inboundSchema,
    ]);

/** @internal */
export type GetConfigurationProductsPropertiesUiHidden$Outbound =
  | GetConfigurationProductsUiHiddenIntegrations2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesUiHidden$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiHidden$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiHidden
  > = z.union([
    z.lazy(() => GetConfigurationProductsUiHiddenIntegrations2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrations3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiHidden$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiHidden$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiHidden$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiHidden$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiHidden$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiHidden$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesUiHidden$Outbound;
}

export function getConfigurationProductsPropertiesUiHiddenToJSON(
  getConfigurationProductsPropertiesUiHidden:
    GetConfigurationProductsPropertiesUiHidden,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiHidden$outboundSchema.parse(
      getConfigurationProductsPropertiesUiHidden,
    ),
  );
}

export function getConfigurationProductsPropertiesUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiHidden,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiHidden$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrations3$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiDisabledIntegrations3> = z
    .nativeEnum(GetConfigurationProductsUiDisabledIntegrations3);

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrations3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiDisabledIntegrations3> =
    GetConfigurationProductsUiDisabledIntegrations3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrations3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrations3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrations3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrations3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrations3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDisabledIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiDisabledIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDisabledIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDisabledIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabledIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabledIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabledIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabledIntegrations2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDisabledIntegrations2$Outbound;
}

export function getConfigurationProductsUiDisabledIntegrations2ToJSON(
  getConfigurationProductsUiDisabledIntegrations2:
    GetConfigurationProductsUiDisabledIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabledIntegrations2$outboundSchema.parse(
      getConfigurationProductsUiDisabledIntegrations2,
    ),
  );
}

export function getConfigurationProductsUiDisabledIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDisabledIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabledIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiDisabledIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiDisabled$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiDisabled,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetConfigurationProductsUiDisabledIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrations3$inboundSchema,
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabledIntegrations2$Outbound
  | boolean
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesUiDisabled$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiDisabled$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiDisabled
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrations2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrations3$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiDisabled$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiDisabled$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiDisabled$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiDisabled$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiDisabled$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiDisabled$Outbound` instead. */
  export type Outbound = GetConfigurationProductsPropertiesUiDisabled$Outbound;
}

export function getConfigurationProductsPropertiesUiDisabledToJSON(
  getConfigurationProductsPropertiesUiDisabled:
    GetConfigurationProductsPropertiesUiDisabled,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiDisabled$outboundSchema.parse(
      getConfigurationProductsPropertiesUiDisabled,
    ),
  );
}

export function getConfigurationProductsPropertiesUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiDisabled$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrations2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsUiDescriptionIntegrations2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema:
  z.ZodType<
    GetConfigurationProductsUiDescriptionIntegrations2$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsUiDescriptionIntegrations2
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescriptionIntegrations2$ {
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescriptionIntegrations2$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsUiDescriptionIntegrations2$Outbound;
}

export function getConfigurationProductsUiDescriptionIntegrations2ToJSON(
  getConfigurationProductsUiDescriptionIntegrations2:
    GetConfigurationProductsUiDescriptionIntegrations2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema.parse(
      getConfigurationProductsUiDescriptionIntegrations2,
    ),
  );
}

export function getConfigurationProductsUiDescriptionIntegrations2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsUiDescriptionIntegrations2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsUiDescriptionIntegrations2' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiDescription$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiDescription,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema
    ),
    z.string(),
  ]);

/** @internal */
export type GetConfigurationProductsPropertiesUiDescription$Outbound =
  | GetConfigurationProductsUiDescriptionIntegrations2$Outbound
  | string;

/** @internal */
export const GetConfigurationProductsPropertiesUiDescription$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiDescription$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiDescription
  > = z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema
    ),
    z.string(),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiDescription$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiDescription$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiDescription$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiDescription$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiDescription$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiDescription$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesUiDescription$Outbound;
}

export function getConfigurationProductsPropertiesUiDescriptionToJSON(
  getConfigurationProductsPropertiesUiDescription:
    GetConfigurationProductsPropertiesUiDescription,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiDescription$outboundSchema.parse(
      getConfigurationProductsPropertiesUiDescription,
    ),
  );
}

export function getConfigurationProductsPropertiesUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiDescription,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiDescription$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiDescription' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesUiFormattedValue$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiFormattedValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expr: z.string(),
  });

/** @internal */
export type GetConfigurationProductsPropertiesUiFormattedValue$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsPropertiesUiFormattedValue$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesUiFormattedValue$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesUiFormattedValue
  > = z.object({
    expr: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesUiFormattedValue$ {
  /** @deprecated use `GetConfigurationProductsPropertiesUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesUiFormattedValue$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesUiFormattedValue$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesUiFormattedValue$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesUiFormattedValue$Outbound;
}

export function getConfigurationProductsPropertiesUiFormattedValueToJSON(
  getConfigurationProductsPropertiesUiFormattedValue:
    GetConfigurationProductsPropertiesUiFormattedValue,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesUiFormattedValue$outboundSchema.parse(
      getConfigurationProductsPropertiesUiFormattedValue,
    ),
  );
}

export function getConfigurationProductsPropertiesUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesUiFormattedValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesUiFormattedValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties3$inboundSchema: z.ZodType<
  Properties3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetConfigurationProductsPropertiesIntegrationsType$inboundSchema,
  "ui:control": GetConfigurationProductsPropertiesUiControl$inboundSchema,
  description: z.string().optional(),
  default: z.boolean().optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() => GetConfigurationProductsUiReadOnlyIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrations3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() => GetConfigurationProductsUiHiddenIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrations3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() => GetConfigurationProductsUiDisabledIntegrations2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrations3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrations2$inboundSchema
    ),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() =>
    GetConfigurationProductsPropertiesUiFormattedValue$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
  });
});

/** @internal */
export type Properties3$Outbound = {
  type: string;
  "ui:control": string;
  description?: string | undefined;
  default?: boolean | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnlyIntegrations2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHiddenIntegrations2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabledIntegrations2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescriptionIntegrations2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?:
    | GetConfigurationProductsPropertiesUiFormattedValue$Outbound
    | undefined;
};

/** @internal */
export const Properties3$outboundSchema: z.ZodType<
  Properties3$Outbound,
  z.ZodTypeDef,
  Properties3
> = z.object({
  type: GetConfigurationProductsPropertiesIntegrationsType$outboundSchema,
  uiControl: GetConfigurationProductsPropertiesUiControl$outboundSchema,
  description: z.string().optional(),
  default: z.boolean().optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiReadOnlyIntegrations2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiReadOnlyIntegrations3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() => GetConfigurationProductsUiHiddenIntegrations2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsUiHiddenIntegrations3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDisabledIntegrations2$outboundSchema
    ),
    z.boolean(),
    GetConfigurationProductsUiDisabledIntegrations3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() =>
      GetConfigurationProductsUiDescriptionIntegrations2$outboundSchema
    ),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() =>
    GetConfigurationProductsPropertiesUiFormattedValue$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties3$ {
  /** @deprecated use `Properties3$inboundSchema` instead. */
  export const inboundSchema = Properties3$inboundSchema;
  /** @deprecated use `Properties3$outboundSchema` instead. */
  export const outboundSchema = Properties3$outboundSchema;
  /** @deprecated use `Properties3$Outbound` instead. */
  export type Outbound = Properties3$Outbound;
}

export function properties3ToJSON(properties3: Properties3): string {
  return JSON.stringify(Properties3$outboundSchema.parse(properties3));
}

export function properties3FromJSON(
  jsonString: string,
): SafeParseResult<Properties3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties3' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesType$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesType> = z.nativeEnum(
    GetConfigurationProductsPropertiesType,
  );

/** @internal */
export const GetConfigurationProductsPropertiesType$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsPropertiesType> =
    GetConfigurationProductsPropertiesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesType$ {
  /** @deprecated use `GetConfigurationProductsPropertiesType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesType$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesType$outboundSchema;
}

/** @internal */
export const PropertiesUiControl$inboundSchema: z.ZodNativeEnum<
  typeof PropertiesUiControl
> = z.nativeEnum(PropertiesUiControl);

/** @internal */
export const PropertiesUiControl$outboundSchema: z.ZodNativeEnum<
  typeof PropertiesUiControl
> = PropertiesUiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiControl$ {
  /** @deprecated use `PropertiesUiControl$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiControl$inboundSchema;
  /** @deprecated use `PropertiesUiControl$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiControl$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnly3$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsUiReadOnly3
> = z.nativeEnum(GetConfigurationProductsUiReadOnly3);

/** @internal */
export const GetConfigurationProductsUiReadOnly3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiReadOnly3> =
    GetConfigurationProductsUiReadOnly3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnly3$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnly3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnly3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnly3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnly3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiReadOnly2$inboundSchema: z.ZodType<
  GetConfigurationProductsUiReadOnly2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsUiReadOnly2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiReadOnly2$outboundSchema: z.ZodType<
  GetConfigurationProductsUiReadOnly2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiReadOnly2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiReadOnly2$ {
  /** @deprecated use `GetConfigurationProductsUiReadOnly2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiReadOnly2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnly2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiReadOnly2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiReadOnly2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiReadOnly2$Outbound;
}

export function getConfigurationProductsUiReadOnly2ToJSON(
  getConfigurationProductsUiReadOnly2: GetConfigurationProductsUiReadOnly2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiReadOnly2$outboundSchema.parse(
      getConfigurationProductsUiReadOnly2,
    ),
  );
}

export function getConfigurationProductsUiReadOnly2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiReadOnly2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiReadOnly2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiReadOnly2' from JSON`,
  );
}

/** @internal */
export const PropertiesUiReadOnly$inboundSchema: z.ZodType<
  PropertiesUiReadOnly,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsUiReadOnly2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsUiReadOnly3$inboundSchema,
]);

/** @internal */
export type PropertiesUiReadOnly$Outbound =
  | GetConfigurationProductsUiReadOnly2$Outbound
  | boolean
  | string;

/** @internal */
export const PropertiesUiReadOnly$outboundSchema: z.ZodType<
  PropertiesUiReadOnly$Outbound,
  z.ZodTypeDef,
  PropertiesUiReadOnly
> = z.union([
  z.lazy(() => GetConfigurationProductsUiReadOnly2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsUiReadOnly3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiReadOnly$ {
  /** @deprecated use `PropertiesUiReadOnly$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiReadOnly$inboundSchema;
  /** @deprecated use `PropertiesUiReadOnly$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiReadOnly$outboundSchema;
  /** @deprecated use `PropertiesUiReadOnly$Outbound` instead. */
  export type Outbound = PropertiesUiReadOnly$Outbound;
}

export function propertiesUiReadOnlyToJSON(
  propertiesUiReadOnly: PropertiesUiReadOnly,
): string {
  return JSON.stringify(
    PropertiesUiReadOnly$outboundSchema.parse(propertiesUiReadOnly),
  );
}

export function propertiesUiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiReadOnly, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiReadOnly$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiReadOnly' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiHidden3$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsUiHidden3
> = z.nativeEnum(GetConfigurationProductsUiHidden3);

/** @internal */
export const GetConfigurationProductsUiHidden3$outboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsUiHidden3
> = GetConfigurationProductsUiHidden3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHidden3$ {
  /** @deprecated use `GetConfigurationProductsUiHidden3$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsUiHidden3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHidden3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHidden3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiHidden2$inboundSchema: z.ZodType<
  GetConfigurationProductsUiHidden2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsUiHidden2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiHidden2$outboundSchema: z.ZodType<
  GetConfigurationProductsUiHidden2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiHidden2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiHidden2$ {
  /** @deprecated use `GetConfigurationProductsUiHidden2$inboundSchema` instead. */
  export const inboundSchema = GetConfigurationProductsUiHidden2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHidden2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiHidden2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiHidden2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiHidden2$Outbound;
}

export function getConfigurationProductsUiHidden2ToJSON(
  getConfigurationProductsUiHidden2: GetConfigurationProductsUiHidden2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiHidden2$outboundSchema.parse(
      getConfigurationProductsUiHidden2,
    ),
  );
}

export function getConfigurationProductsUiHidden2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiHidden2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetConfigurationProductsUiHidden2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiHidden2' from JSON`,
  );
}

/** @internal */
export const PropertiesUiHidden$inboundSchema: z.ZodType<
  PropertiesUiHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsUiHidden2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsUiHidden3$inboundSchema,
]);

/** @internal */
export type PropertiesUiHidden$Outbound =
  | GetConfigurationProductsUiHidden2$Outbound
  | boolean
  | string;

/** @internal */
export const PropertiesUiHidden$outboundSchema: z.ZodType<
  PropertiesUiHidden$Outbound,
  z.ZodTypeDef,
  PropertiesUiHidden
> = z.union([
  z.lazy(() => GetConfigurationProductsUiHidden2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsUiHidden3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiHidden$ {
  /** @deprecated use `PropertiesUiHidden$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiHidden$inboundSchema;
  /** @deprecated use `PropertiesUiHidden$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiHidden$outboundSchema;
  /** @deprecated use `PropertiesUiHidden$Outbound` instead. */
  export type Outbound = PropertiesUiHidden$Outbound;
}

export function propertiesUiHiddenToJSON(
  propertiesUiHidden: PropertiesUiHidden,
): string {
  return JSON.stringify(
    PropertiesUiHidden$outboundSchema.parse(propertiesUiHidden),
  );
}

export function propertiesUiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiHidden, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiHidden$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiHidden' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDisabled3$inboundSchema: z.ZodNativeEnum<
  typeof GetConfigurationProductsUiDisabled3
> = z.nativeEnum(GetConfigurationProductsUiDisabled3);

/** @internal */
export const GetConfigurationProductsUiDisabled3$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigurationProductsUiDisabled3> =
    GetConfigurationProductsUiDisabled3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabled3$ {
  /** @deprecated use `GetConfigurationProductsUiDisabled3$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabled3$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabled3$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabled3$outboundSchema;
}

/** @internal */
export const GetConfigurationProductsUiDisabled2$inboundSchema: z.ZodType<
  GetConfigurationProductsUiDisabled2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsUiDisabled2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiDisabled2$outboundSchema: z.ZodType<
  GetConfigurationProductsUiDisabled2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiDisabled2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDisabled2$ {
  /** @deprecated use `GetConfigurationProductsUiDisabled2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDisabled2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabled2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDisabled2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDisabled2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiDisabled2$Outbound;
}

export function getConfigurationProductsUiDisabled2ToJSON(
  getConfigurationProductsUiDisabled2: GetConfigurationProductsUiDisabled2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDisabled2$outboundSchema.parse(
      getConfigurationProductsUiDisabled2,
    ),
  );
}

export function getConfigurationProductsUiDisabled2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiDisabled2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDisabled2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDisabled2' from JSON`,
  );
}

/** @internal */
export const PropertiesUiDisabled$inboundSchema: z.ZodType<
  PropertiesUiDisabled,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsUiDisabled2$inboundSchema),
  z.boolean(),
  GetConfigurationProductsUiDisabled3$inboundSchema,
]);

/** @internal */
export type PropertiesUiDisabled$Outbound =
  | GetConfigurationProductsUiDisabled2$Outbound
  | boolean
  | string;

/** @internal */
export const PropertiesUiDisabled$outboundSchema: z.ZodType<
  PropertiesUiDisabled$Outbound,
  z.ZodTypeDef,
  PropertiesUiDisabled
> = z.union([
  z.lazy(() => GetConfigurationProductsUiDisabled2$outboundSchema),
  z.boolean(),
  GetConfigurationProductsUiDisabled3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiDisabled$ {
  /** @deprecated use `PropertiesUiDisabled$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiDisabled$inboundSchema;
  /** @deprecated use `PropertiesUiDisabled$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiDisabled$outboundSchema;
  /** @deprecated use `PropertiesUiDisabled$Outbound` instead. */
  export type Outbound = PropertiesUiDisabled$Outbound;
}

export function propertiesUiDisabledToJSON(
  propertiesUiDisabled: PropertiesUiDisabled,
): string {
  return JSON.stringify(
    PropertiesUiDisabled$outboundSchema.parse(propertiesUiDisabled),
  );
}

export function propertiesUiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiDisabled, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiDisabled$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiDisabled' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsUiDescription2$inboundSchema: z.ZodType<
  GetConfigurationProductsUiDescription2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type GetConfigurationProductsUiDescription2$Outbound = {
  expr: string;
};

/** @internal */
export const GetConfigurationProductsUiDescription2$outboundSchema: z.ZodType<
  GetConfigurationProductsUiDescription2$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsUiDescription2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsUiDescription2$ {
  /** @deprecated use `GetConfigurationProductsUiDescription2$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsUiDescription2$inboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescription2$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsUiDescription2$outboundSchema;
  /** @deprecated use `GetConfigurationProductsUiDescription2$Outbound` instead. */
  export type Outbound = GetConfigurationProductsUiDescription2$Outbound;
}

export function getConfigurationProductsUiDescription2ToJSON(
  getConfigurationProductsUiDescription2:
    GetConfigurationProductsUiDescription2,
): string {
  return JSON.stringify(
    GetConfigurationProductsUiDescription2$outboundSchema.parse(
      getConfigurationProductsUiDescription2,
    ),
  );
}

export function getConfigurationProductsUiDescription2FromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsUiDescription2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsUiDescription2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsUiDescription2' from JSON`,
  );
}

/** @internal */
export const PropertiesUiDescription$inboundSchema: z.ZodType<
  PropertiesUiDescription,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetConfigurationProductsUiDescription2$inboundSchema),
  z.string(),
]);

/** @internal */
export type PropertiesUiDescription$Outbound =
  | GetConfigurationProductsUiDescription2$Outbound
  | string;

/** @internal */
export const PropertiesUiDescription$outboundSchema: z.ZodType<
  PropertiesUiDescription$Outbound,
  z.ZodTypeDef,
  PropertiesUiDescription
> = z.union([
  z.lazy(() => GetConfigurationProductsUiDescription2$outboundSchema),
  z.string(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiDescription$ {
  /** @deprecated use `PropertiesUiDescription$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiDescription$inboundSchema;
  /** @deprecated use `PropertiesUiDescription$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiDescription$outboundSchema;
  /** @deprecated use `PropertiesUiDescription$Outbound` instead. */
  export type Outbound = PropertiesUiDescription$Outbound;
}

export function propertiesUiDescriptionToJSON(
  propertiesUiDescription: PropertiesUiDescription,
): string {
  return JSON.stringify(
    PropertiesUiDescription$outboundSchema.parse(propertiesUiDescription),
  );
}

export function propertiesUiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiDescription, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiDescription$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiDescription' from JSON`,
  );
}

/** @internal */
export const PropertiesUiFormattedValue$inboundSchema: z.ZodType<
  PropertiesUiFormattedValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type PropertiesUiFormattedValue$Outbound = {
  expr: string;
};

/** @internal */
export const PropertiesUiFormattedValue$outboundSchema: z.ZodType<
  PropertiesUiFormattedValue$Outbound,
  z.ZodTypeDef,
  PropertiesUiFormattedValue
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesUiFormattedValue$ {
  /** @deprecated use `PropertiesUiFormattedValue$inboundSchema` instead. */
  export const inboundSchema = PropertiesUiFormattedValue$inboundSchema;
  /** @deprecated use `PropertiesUiFormattedValue$outboundSchema` instead. */
  export const outboundSchema = PropertiesUiFormattedValue$outboundSchema;
  /** @deprecated use `PropertiesUiFormattedValue$Outbound` instead. */
  export type Outbound = PropertiesUiFormattedValue$Outbound;
}

export function propertiesUiFormattedValueToJSON(
  propertiesUiFormattedValue: PropertiesUiFormattedValue,
): string {
  return JSON.stringify(
    PropertiesUiFormattedValue$outboundSchema.parse(propertiesUiFormattedValue),
  );
}

export function propertiesUiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<PropertiesUiFormattedValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesUiFormattedValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesUiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties2$inboundSchema: z.ZodType<
  Properties2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetConfigurationProductsPropertiesType$inboundSchema,
  "ui:control": PropertiesUiControl$inboundSchema,
  minimum: z.number().optional(),
  maximum: z.number().optional(),
  description: z.string().optional(),
  default: z.number().optional(),
  exclusiveMinimum: z.number().optional(),
  exclusiveMaximum: z.number().optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() => GetConfigurationProductsUiReadOnly2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiReadOnly3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() => GetConfigurationProductsUiHidden2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiHidden3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() => GetConfigurationProductsUiDisabled2$inboundSchema),
    z.boolean(),
    GetConfigurationProductsUiDisabled3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() => GetConfigurationProductsUiDescription2$inboundSchema),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() => PropertiesUiFormattedValue$inboundSchema)
    .optional(),
  "ui:placeholder": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties2$Outbound = {
  type: string;
  "ui:control": string;
  minimum?: number | undefined;
  maximum?: number | undefined;
  description?: string | undefined;
  default?: number | undefined;
  exclusiveMinimum?: number | undefined;
  exclusiveMaximum?: number | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?:
    | GetConfigurationProductsUiReadOnly2$Outbound
    | boolean
    | string
    | undefined;
  "ui:hidden"?:
    | GetConfigurationProductsUiHidden2$Outbound
    | boolean
    | string
    | undefined;
  "ui:disabled"?:
    | GetConfigurationProductsUiDisabled2$Outbound
    | boolean
    | string
    | undefined;
  "ui:description"?:
    | GetConfigurationProductsUiDescription2$Outbound
    | string
    | undefined;
  "ui:formatted-value"?: PropertiesUiFormattedValue$Outbound | undefined;
  "ui:placeholder"?: string | undefined;
};

/** @internal */
export const Properties2$outboundSchema: z.ZodType<
  Properties2$Outbound,
  z.ZodTypeDef,
  Properties2
> = z.object({
  type: GetConfigurationProductsPropertiesType$outboundSchema,
  uiControl: PropertiesUiControl$outboundSchema,
  minimum: z.number().optional(),
  maximum: z.number().optional(),
  description: z.string().optional(),
  default: z.number().optional(),
  exclusiveMinimum: z.number().optional(),
  exclusiveMaximum: z.number().optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() => GetConfigurationProductsUiReadOnly2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsUiReadOnly3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() => GetConfigurationProductsUiHidden2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsUiHidden3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() => GetConfigurationProductsUiDisabled2$outboundSchema),
    z.boolean(),
    GetConfigurationProductsUiDisabled3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() => GetConfigurationProductsUiDescription2$outboundSchema),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() => PropertiesUiFormattedValue$outboundSchema)
    .optional(),
  uiPlaceholder: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties2$ {
  /** @deprecated use `Properties2$inboundSchema` instead. */
  export const inboundSchema = Properties2$inboundSchema;
  /** @deprecated use `Properties2$outboundSchema` instead. */
  export const outboundSchema = Properties2$outboundSchema;
  /** @deprecated use `Properties2$Outbound` instead. */
  export type Outbound = Properties2$Outbound;
}

export function properties2ToJSON(properties2: Properties2): string {
  return JSON.stringify(Properties2$outboundSchema.parse(properties2));
}

export function properties2FromJSON(
  jsonString: string,
): SafeParseResult<Properties2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties2' from JSON`,
  );
}

/** @internal */
export const PropertiesType$inboundSchema: z.ZodNativeEnum<
  typeof PropertiesType
> = z.nativeEnum(PropertiesType);

/** @internal */
export const PropertiesType$outboundSchema: z.ZodNativeEnum<
  typeof PropertiesType
> = PropertiesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesType$ {
  /** @deprecated use `PropertiesType$inboundSchema` instead. */
  export const inboundSchema = PropertiesType$inboundSchema;
  /** @deprecated use `PropertiesType$outboundSchema` instead. */
  export const outboundSchema = PropertiesType$outboundSchema;
}

/** @internal */
export const UiControl$inboundSchema: z.ZodNativeEnum<typeof UiControl> = z
  .nativeEnum(UiControl);

/** @internal */
export const UiControl$outboundSchema: z.ZodNativeEnum<typeof UiControl> =
  UiControl$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiControl$ {
  /** @deprecated use `UiControl$inboundSchema` instead. */
  export const inboundSchema = UiControl$inboundSchema;
  /** @deprecated use `UiControl$outboundSchema` instead. */
  export const outboundSchema = UiControl$outboundSchema;
}

/** @internal */
export const AtBRANDAt510349$inboundSchema: z.ZodType<
  AtBRANDAt510349,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtBRANDAt510349$Outbound = {};

/** @internal */
export const AtBRANDAt510349$outboundSchema: z.ZodType<
  AtBRANDAt510349$Outbound,
  z.ZodTypeDef,
  AtBRANDAt510349
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtBRANDAt510349$ {
  /** @deprecated use `AtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema = AtBRANDAt510349$inboundSchema;
  /** @deprecated use `AtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema = AtBRANDAt510349$outboundSchema;
  /** @deprecated use `AtBRANDAt510349$Outbound` instead. */
  export type Outbound = AtBRANDAt510349$Outbound;
}

export function atBRANDAt510349ToJSON(
  atBRANDAt510349: AtBRANDAt510349,
): string {
  return JSON.stringify(AtBRANDAt510349$outboundSchema.parse(atBRANDAt510349));
}

export function atBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<AtBRANDAt510349, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AtBRANDAt510349$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const MinLength$inboundSchema: z.ZodType<
  MinLength,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() => AtBRANDAt510349$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type MinLength$Outbound = {
  "__@BRAND@510349": AtBRANDAt510349$Outbound;
};

/** @internal */
export const MinLength$outboundSchema: z.ZodType<
  MinLength$Outbound,
  z.ZodTypeDef,
  MinLength
> = z.object({
  atBRANDAt510349: z.lazy(() => AtBRANDAt510349$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MinLength$ {
  /** @deprecated use `MinLength$inboundSchema` instead. */
  export const inboundSchema = MinLength$inboundSchema;
  /** @deprecated use `MinLength$outboundSchema` instead. */
  export const outboundSchema = MinLength$outboundSchema;
  /** @deprecated use `MinLength$Outbound` instead. */
  export type Outbound = MinLength$Outbound;
}

export function minLengthToJSON(minLength: MinLength): string {
  return JSON.stringify(MinLength$outboundSchema.parse(minLength));
}

export function minLengthFromJSON(
  jsonString: string,
): SafeParseResult<MinLength, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MinLength$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MinLength' from JSON`,
  );
}

/** @internal */
export const PropertiesAtBRANDAt510349$inboundSchema: z.ZodType<
  PropertiesAtBRANDAt510349,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PropertiesAtBRANDAt510349$Outbound = {};

/** @internal */
export const PropertiesAtBRANDAt510349$outboundSchema: z.ZodType<
  PropertiesAtBRANDAt510349$Outbound,
  z.ZodTypeDef,
  PropertiesAtBRANDAt510349
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertiesAtBRANDAt510349$ {
  /** @deprecated use `PropertiesAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema = PropertiesAtBRANDAt510349$inboundSchema;
  /** @deprecated use `PropertiesAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema = PropertiesAtBRANDAt510349$outboundSchema;
  /** @deprecated use `PropertiesAtBRANDAt510349$Outbound` instead. */
  export type Outbound = PropertiesAtBRANDAt510349$Outbound;
}

export function propertiesAtBRANDAt510349ToJSON(
  propertiesAtBRANDAt510349: PropertiesAtBRANDAt510349,
): string {
  return JSON.stringify(
    PropertiesAtBRANDAt510349$outboundSchema.parse(propertiesAtBRANDAt510349),
  );
}

export function propertiesAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<PropertiesAtBRANDAt510349, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertiesAtBRANDAt510349$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertiesAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const MaxLength$inboundSchema: z.ZodType<
  MaxLength,
  z.ZodTypeDef,
  unknown
> = z.object({
  "__@BRAND@510349": z.lazy(() => PropertiesAtBRANDAt510349$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "__@BRAND@510349": "atBRANDAt510349",
  });
});

/** @internal */
export type MaxLength$Outbound = {
  "__@BRAND@510349": PropertiesAtBRANDAt510349$Outbound;
};

/** @internal */
export const MaxLength$outboundSchema: z.ZodType<
  MaxLength$Outbound,
  z.ZodTypeDef,
  MaxLength
> = z.object({
  atBRANDAt510349: z.lazy(() => PropertiesAtBRANDAt510349$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MaxLength$ {
  /** @deprecated use `MaxLength$inboundSchema` instead. */
  export const inboundSchema = MaxLength$inboundSchema;
  /** @deprecated use `MaxLength$outboundSchema` instead. */
  export const outboundSchema = MaxLength$outboundSchema;
  /** @deprecated use `MaxLength$Outbound` instead. */
  export type Outbound = MaxLength$Outbound;
}

export function maxLengthToJSON(maxLength: MaxLength): string {
  return JSON.stringify(MaxLength$outboundSchema.parse(maxLength));
}

export function maxLengthFromJSON(
  jsonString: string,
): SafeParseResult<MaxLength, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MaxLength$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MaxLength' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsPropertiesAtBRANDAt510349$inboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesAtBRANDAt510349,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type GetConfigurationProductsPropertiesAtBRANDAt510349$Outbound = {};

/** @internal */
export const GetConfigurationProductsPropertiesAtBRANDAt510349$outboundSchema:
  z.ZodType<
    GetConfigurationProductsPropertiesAtBRANDAt510349$Outbound,
    z.ZodTypeDef,
    GetConfigurationProductsPropertiesAtBRANDAt510349
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsPropertiesAtBRANDAt510349$ {
  /** @deprecated use `GetConfigurationProductsPropertiesAtBRANDAt510349$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsPropertiesAtBRANDAt510349$inboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesAtBRANDAt510349$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsPropertiesAtBRANDAt510349$outboundSchema;
  /** @deprecated use `GetConfigurationProductsPropertiesAtBRANDAt510349$Outbound` instead. */
  export type Outbound =
    GetConfigurationProductsPropertiesAtBRANDAt510349$Outbound;
}

export function getConfigurationProductsPropertiesAtBRANDAt510349ToJSON(
  getConfigurationProductsPropertiesAtBRANDAt510349:
    GetConfigurationProductsPropertiesAtBRANDAt510349,
): string {
  return JSON.stringify(
    GetConfigurationProductsPropertiesAtBRANDAt510349$outboundSchema.parse(
      getConfigurationProductsPropertiesAtBRANDAt510349,
    ),
  );
}

export function getConfigurationProductsPropertiesAtBRANDAt510349FromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigurationProductsPropertiesAtBRANDAt510349,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsPropertiesAtBRANDAt510349$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigurationProductsPropertiesAtBRANDAt510349' from JSON`,
  );
}

/** @internal */
export const Pattern$inboundSchema: z.ZodType<Pattern, z.ZodTypeDef, unknown> =
  z.object({
    "__@BRAND@510349": z.lazy(() =>
      GetConfigurationProductsPropertiesAtBRANDAt510349$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "__@BRAND@510349": "atBRANDAt510349",
    });
  });

/** @internal */
export type Pattern$Outbound = {
  "__@BRAND@510349": GetConfigurationProductsPropertiesAtBRANDAt510349$Outbound;
};

/** @internal */
export const Pattern$outboundSchema: z.ZodType<
  Pattern$Outbound,
  z.ZodTypeDef,
  Pattern
> = z.object({
  atBRANDAt510349: z.lazy(() =>
    GetConfigurationProductsPropertiesAtBRANDAt510349$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    atBRANDAt510349: "__@BRAND@510349",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Pattern$ {
  /** @deprecated use `Pattern$inboundSchema` instead. */
  export const inboundSchema = Pattern$inboundSchema;
  /** @deprecated use `Pattern$outboundSchema` instead. */
  export const outboundSchema = Pattern$outboundSchema;
  /** @deprecated use `Pattern$Outbound` instead. */
  export type Outbound = Pattern$Outbound;
}

export function patternToJSON(pattern: Pattern): string {
  return JSON.stringify(Pattern$outboundSchema.parse(pattern));
}

export function patternFromJSON(
  jsonString: string,
): SafeParseResult<Pattern, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Pattern$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Pattern' from JSON`,
  );
}

/** @internal */
export const UiReadOnly3$inboundSchema: z.ZodNativeEnum<typeof UiReadOnly3> = z
  .nativeEnum(UiReadOnly3);

/** @internal */
export const UiReadOnly3$outboundSchema: z.ZodNativeEnum<typeof UiReadOnly3> =
  UiReadOnly3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiReadOnly3$ {
  /** @deprecated use `UiReadOnly3$inboundSchema` instead. */
  export const inboundSchema = UiReadOnly3$inboundSchema;
  /** @deprecated use `UiReadOnly3$outboundSchema` instead. */
  export const outboundSchema = UiReadOnly3$outboundSchema;
}

/** @internal */
export const UiReadOnly2$inboundSchema: z.ZodType<
  UiReadOnly2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type UiReadOnly2$Outbound = {
  expr: string;
};

/** @internal */
export const UiReadOnly2$outboundSchema: z.ZodType<
  UiReadOnly2$Outbound,
  z.ZodTypeDef,
  UiReadOnly2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiReadOnly2$ {
  /** @deprecated use `UiReadOnly2$inboundSchema` instead. */
  export const inboundSchema = UiReadOnly2$inboundSchema;
  /** @deprecated use `UiReadOnly2$outboundSchema` instead. */
  export const outboundSchema = UiReadOnly2$outboundSchema;
  /** @deprecated use `UiReadOnly2$Outbound` instead. */
  export type Outbound = UiReadOnly2$Outbound;
}

export function uiReadOnly2ToJSON(uiReadOnly2: UiReadOnly2): string {
  return JSON.stringify(UiReadOnly2$outboundSchema.parse(uiReadOnly2));
}

export function uiReadOnly2FromJSON(
  jsonString: string,
): SafeParseResult<UiReadOnly2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiReadOnly2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiReadOnly2' from JSON`,
  );
}

/** @internal */
export const UiReadOnly$inboundSchema: z.ZodType<
  UiReadOnly,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UiReadOnly2$inboundSchema),
  z.boolean(),
  UiReadOnly3$inboundSchema,
]);

/** @internal */
export type UiReadOnly$Outbound = UiReadOnly2$Outbound | boolean | string;

/** @internal */
export const UiReadOnly$outboundSchema: z.ZodType<
  UiReadOnly$Outbound,
  z.ZodTypeDef,
  UiReadOnly
> = z.union([
  z.lazy(() => UiReadOnly2$outboundSchema),
  z.boolean(),
  UiReadOnly3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiReadOnly$ {
  /** @deprecated use `UiReadOnly$inboundSchema` instead. */
  export const inboundSchema = UiReadOnly$inboundSchema;
  /** @deprecated use `UiReadOnly$outboundSchema` instead. */
  export const outboundSchema = UiReadOnly$outboundSchema;
  /** @deprecated use `UiReadOnly$Outbound` instead. */
  export type Outbound = UiReadOnly$Outbound;
}

export function uiReadOnlyToJSON(uiReadOnly: UiReadOnly): string {
  return JSON.stringify(UiReadOnly$outboundSchema.parse(uiReadOnly));
}

export function uiReadOnlyFromJSON(
  jsonString: string,
): SafeParseResult<UiReadOnly, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiReadOnly$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiReadOnly' from JSON`,
  );
}

/** @internal */
export const UiHidden3$inboundSchema: z.ZodNativeEnum<typeof UiHidden3> = z
  .nativeEnum(UiHidden3);

/** @internal */
export const UiHidden3$outboundSchema: z.ZodNativeEnum<typeof UiHidden3> =
  UiHidden3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiHidden3$ {
  /** @deprecated use `UiHidden3$inboundSchema` instead. */
  export const inboundSchema = UiHidden3$inboundSchema;
  /** @deprecated use `UiHidden3$outboundSchema` instead. */
  export const outboundSchema = UiHidden3$outboundSchema;
}

/** @internal */
export const UiHidden2$inboundSchema: z.ZodType<
  UiHidden2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type UiHidden2$Outbound = {
  expr: string;
};

/** @internal */
export const UiHidden2$outboundSchema: z.ZodType<
  UiHidden2$Outbound,
  z.ZodTypeDef,
  UiHidden2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiHidden2$ {
  /** @deprecated use `UiHidden2$inboundSchema` instead. */
  export const inboundSchema = UiHidden2$inboundSchema;
  /** @deprecated use `UiHidden2$outboundSchema` instead. */
  export const outboundSchema = UiHidden2$outboundSchema;
  /** @deprecated use `UiHidden2$Outbound` instead. */
  export type Outbound = UiHidden2$Outbound;
}

export function uiHidden2ToJSON(uiHidden2: UiHidden2): string {
  return JSON.stringify(UiHidden2$outboundSchema.parse(uiHidden2));
}

export function uiHidden2FromJSON(
  jsonString: string,
): SafeParseResult<UiHidden2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiHidden2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiHidden2' from JSON`,
  );
}

/** @internal */
export const UiHidden$inboundSchema: z.ZodType<
  UiHidden,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UiHidden2$inboundSchema),
  z.boolean(),
  UiHidden3$inboundSchema,
]);

/** @internal */
export type UiHidden$Outbound = UiHidden2$Outbound | boolean | string;

/** @internal */
export const UiHidden$outboundSchema: z.ZodType<
  UiHidden$Outbound,
  z.ZodTypeDef,
  UiHidden
> = z.union([
  z.lazy(() => UiHidden2$outboundSchema),
  z.boolean(),
  UiHidden3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiHidden$ {
  /** @deprecated use `UiHidden$inboundSchema` instead. */
  export const inboundSchema = UiHidden$inboundSchema;
  /** @deprecated use `UiHidden$outboundSchema` instead. */
  export const outboundSchema = UiHidden$outboundSchema;
  /** @deprecated use `UiHidden$Outbound` instead. */
  export type Outbound = UiHidden$Outbound;
}

export function uiHiddenToJSON(uiHidden: UiHidden): string {
  return JSON.stringify(UiHidden$outboundSchema.parse(uiHidden));
}

export function uiHiddenFromJSON(
  jsonString: string,
): SafeParseResult<UiHidden, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiHidden$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiHidden' from JSON`,
  );
}

/** @internal */
export const UiDisabled3$inboundSchema: z.ZodNativeEnum<typeof UiDisabled3> = z
  .nativeEnum(UiDisabled3);

/** @internal */
export const UiDisabled3$outboundSchema: z.ZodNativeEnum<typeof UiDisabled3> =
  UiDisabled3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiDisabled3$ {
  /** @deprecated use `UiDisabled3$inboundSchema` instead. */
  export const inboundSchema = UiDisabled3$inboundSchema;
  /** @deprecated use `UiDisabled3$outboundSchema` instead. */
  export const outboundSchema = UiDisabled3$outboundSchema;
}

/** @internal */
export const UiDisabled2$inboundSchema: z.ZodType<
  UiDisabled2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type UiDisabled2$Outbound = {
  expr: string;
};

/** @internal */
export const UiDisabled2$outboundSchema: z.ZodType<
  UiDisabled2$Outbound,
  z.ZodTypeDef,
  UiDisabled2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiDisabled2$ {
  /** @deprecated use `UiDisabled2$inboundSchema` instead. */
  export const inboundSchema = UiDisabled2$inboundSchema;
  /** @deprecated use `UiDisabled2$outboundSchema` instead. */
  export const outboundSchema = UiDisabled2$outboundSchema;
  /** @deprecated use `UiDisabled2$Outbound` instead. */
  export type Outbound = UiDisabled2$Outbound;
}

export function uiDisabled2ToJSON(uiDisabled2: UiDisabled2): string {
  return JSON.stringify(UiDisabled2$outboundSchema.parse(uiDisabled2));
}

export function uiDisabled2FromJSON(
  jsonString: string,
): SafeParseResult<UiDisabled2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiDisabled2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiDisabled2' from JSON`,
  );
}

/** @internal */
export const UiDisabled$inboundSchema: z.ZodType<
  UiDisabled,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UiDisabled2$inboundSchema),
  z.boolean(),
  UiDisabled3$inboundSchema,
]);

/** @internal */
export type UiDisabled$Outbound = UiDisabled2$Outbound | boolean | string;

/** @internal */
export const UiDisabled$outboundSchema: z.ZodType<
  UiDisabled$Outbound,
  z.ZodTypeDef,
  UiDisabled
> = z.union([
  z.lazy(() => UiDisabled2$outboundSchema),
  z.boolean(),
  UiDisabled3$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiDisabled$ {
  /** @deprecated use `UiDisabled$inboundSchema` instead. */
  export const inboundSchema = UiDisabled$inboundSchema;
  /** @deprecated use `UiDisabled$outboundSchema` instead. */
  export const outboundSchema = UiDisabled$outboundSchema;
  /** @deprecated use `UiDisabled$Outbound` instead. */
  export type Outbound = UiDisabled$Outbound;
}

export function uiDisabledToJSON(uiDisabled: UiDisabled): string {
  return JSON.stringify(UiDisabled$outboundSchema.parse(uiDisabled));
}

export function uiDisabledFromJSON(
  jsonString: string,
): SafeParseResult<UiDisabled, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiDisabled$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiDisabled' from JSON`,
  );
}

/** @internal */
export const UiDescription2$inboundSchema: z.ZodType<
  UiDescription2,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type UiDescription2$Outbound = {
  expr: string;
};

/** @internal */
export const UiDescription2$outboundSchema: z.ZodType<
  UiDescription2$Outbound,
  z.ZodTypeDef,
  UiDescription2
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiDescription2$ {
  /** @deprecated use `UiDescription2$inboundSchema` instead. */
  export const inboundSchema = UiDescription2$inboundSchema;
  /** @deprecated use `UiDescription2$outboundSchema` instead. */
  export const outboundSchema = UiDescription2$outboundSchema;
  /** @deprecated use `UiDescription2$Outbound` instead. */
  export type Outbound = UiDescription2$Outbound;
}

export function uiDescription2ToJSON(uiDescription2: UiDescription2): string {
  return JSON.stringify(UiDescription2$outboundSchema.parse(uiDescription2));
}

export function uiDescription2FromJSON(
  jsonString: string,
): SafeParseResult<UiDescription2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiDescription2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiDescription2' from JSON`,
  );
}

/** @internal */
export const UiDescription$inboundSchema: z.ZodType<
  UiDescription,
  z.ZodTypeDef,
  unknown
> = z.union([z.lazy(() => UiDescription2$inboundSchema), z.string()]);

/** @internal */
export type UiDescription$Outbound = UiDescription2$Outbound | string;

/** @internal */
export const UiDescription$outboundSchema: z.ZodType<
  UiDescription$Outbound,
  z.ZodTypeDef,
  UiDescription
> = z.union([z.lazy(() => UiDescription2$outboundSchema), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiDescription$ {
  /** @deprecated use `UiDescription$inboundSchema` instead. */
  export const inboundSchema = UiDescription$inboundSchema;
  /** @deprecated use `UiDescription$outboundSchema` instead. */
  export const outboundSchema = UiDescription$outboundSchema;
  /** @deprecated use `UiDescription$Outbound` instead. */
  export type Outbound = UiDescription$Outbound;
}

export function uiDescriptionToJSON(uiDescription: UiDescription): string {
  return JSON.stringify(UiDescription$outboundSchema.parse(uiDescription));
}

export function uiDescriptionFromJSON(
  jsonString: string,
): SafeParseResult<UiDescription, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiDescription$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiDescription' from JSON`,
  );
}

/** @internal */
export const UiFormattedValue$inboundSchema: z.ZodType<
  UiFormattedValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  expr: z.string(),
});

/** @internal */
export type UiFormattedValue$Outbound = {
  expr: string;
};

/** @internal */
export const UiFormattedValue$outboundSchema: z.ZodType<
  UiFormattedValue$Outbound,
  z.ZodTypeDef,
  UiFormattedValue
> = z.object({
  expr: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UiFormattedValue$ {
  /** @deprecated use `UiFormattedValue$inboundSchema` instead. */
  export const inboundSchema = UiFormattedValue$inboundSchema;
  /** @deprecated use `UiFormattedValue$outboundSchema` instead. */
  export const outboundSchema = UiFormattedValue$outboundSchema;
  /** @deprecated use `UiFormattedValue$Outbound` instead. */
  export type Outbound = UiFormattedValue$Outbound;
}

export function uiFormattedValueToJSON(
  uiFormattedValue: UiFormattedValue,
): string {
  return JSON.stringify(
    UiFormattedValue$outboundSchema.parse(uiFormattedValue),
  );
}

export function uiFormattedValueFromJSON(
  jsonString: string,
): SafeParseResult<UiFormattedValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UiFormattedValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UiFormattedValue' from JSON`,
  );
}

/** @internal */
export const Properties1$inboundSchema: z.ZodType<
  Properties1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PropertiesType$inboundSchema,
  "ui:control": UiControl$inboundSchema,
  description: z.string().optional(),
  minLength: z.lazy(() => MinLength$inboundSchema).optional(),
  maxLength: z.lazy(() => MaxLength$inboundSchema).optional(),
  pattern: z.lazy(() => Pattern$inboundSchema).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  "ui:label": z.string().optional(),
  "ui:read-only": z.union([
    z.lazy(() => UiReadOnly2$inboundSchema),
    z.boolean(),
    UiReadOnly3$inboundSchema,
  ]).optional(),
  "ui:hidden": z.union([
    z.lazy(() => UiHidden2$inboundSchema),
    z.boolean(),
    UiHidden3$inboundSchema,
  ]).optional(),
  "ui:disabled": z.union([
    z.lazy(() => UiDisabled2$inboundSchema),
    z.boolean(),
    UiDisabled3$inboundSchema,
  ]).optional(),
  "ui:description": z.union([
    z.lazy(() => UiDescription2$inboundSchema),
    z.string(),
  ]).optional(),
  "ui:formatted-value": z.lazy(() => UiFormattedValue$inboundSchema).optional(),
  "ui:placeholder": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "ui:control": "uiControl",
    "ui:label": "uiLabel",
    "ui:read-only": "uiReadOnly",
    "ui:hidden": "uiHidden",
    "ui:disabled": "uiDisabled",
    "ui:description": "uiDescription",
    "ui:formatted-value": "uiFormattedValue",
    "ui:placeholder": "uiPlaceholder",
  });
});

/** @internal */
export type Properties1$Outbound = {
  type: string;
  "ui:control": string;
  description?: string | undefined;
  minLength?: MinLength$Outbound | undefined;
  maxLength?: MaxLength$Outbound | undefined;
  pattern?: Pattern$Outbound | undefined;
  default?: string | undefined;
  enum?: Array<string> | undefined;
  "ui:label"?: string | undefined;
  "ui:read-only"?: UiReadOnly2$Outbound | boolean | string | undefined;
  "ui:hidden"?: UiHidden2$Outbound | boolean | string | undefined;
  "ui:disabled"?: UiDisabled2$Outbound | boolean | string | undefined;
  "ui:description"?: UiDescription2$Outbound | string | undefined;
  "ui:formatted-value"?: UiFormattedValue$Outbound | undefined;
  "ui:placeholder"?: string | undefined;
};

/** @internal */
export const Properties1$outboundSchema: z.ZodType<
  Properties1$Outbound,
  z.ZodTypeDef,
  Properties1
> = z.object({
  type: PropertiesType$outboundSchema,
  uiControl: UiControl$outboundSchema,
  description: z.string().optional(),
  minLength: z.lazy(() => MinLength$outboundSchema).optional(),
  maxLength: z.lazy(() => MaxLength$outboundSchema).optional(),
  pattern: z.lazy(() => Pattern$outboundSchema).optional(),
  default: z.string().optional(),
  enum: z.array(z.string()).optional(),
  uiLabel: z.string().optional(),
  uiReadOnly: z.union([
    z.lazy(() => UiReadOnly2$outboundSchema),
    z.boolean(),
    UiReadOnly3$outboundSchema,
  ]).optional(),
  uiHidden: z.union([
    z.lazy(() => UiHidden2$outboundSchema),
    z.boolean(),
    UiHidden3$outboundSchema,
  ]).optional(),
  uiDisabled: z.union([
    z.lazy(() => UiDisabled2$outboundSchema),
    z.boolean(),
    UiDisabled3$outboundSchema,
  ]).optional(),
  uiDescription: z.union([
    z.lazy(() => UiDescription2$outboundSchema),
    z.string(),
  ]).optional(),
  uiFormattedValue: z.lazy(() => UiFormattedValue$outboundSchema).optional(),
  uiPlaceholder: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    uiControl: "ui:control",
    uiLabel: "ui:label",
    uiReadOnly: "ui:read-only",
    uiHidden: "ui:hidden",
    uiDisabled: "ui:disabled",
    uiDescription: "ui:description",
    uiFormattedValue: "ui:formatted-value",
    uiPlaceholder: "ui:placeholder",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties1$ {
  /** @deprecated use `Properties1$inboundSchema` instead. */
  export const inboundSchema = Properties1$inboundSchema;
  /** @deprecated use `Properties1$outboundSchema` instead. */
  export const outboundSchema = Properties1$outboundSchema;
  /** @deprecated use `Properties1$Outbound` instead. */
  export type Outbound = Properties1$Outbound;
}

export function properties1ToJSON(properties1: Properties1): string {
  return JSON.stringify(Properties1$outboundSchema.parse(properties1));
}

export function properties1FromJSON(
  jsonString: string,
): SafeParseResult<Properties1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties1' from JSON`,
  );
}

/** @internal */
export const Properties$inboundSchema: z.ZodType<
  Properties,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => Properties4$inboundSchema),
  z.lazy(() => Properties6$inboundSchema),
  z.lazy(() => Properties8$inboundSchema),
  z.lazy(() => Properties5$inboundSchema),
  z.lazy(() => Properties7$inboundSchema),
  z.lazy(() => Properties1$inboundSchema),
  z.lazy(() => Properties2$inboundSchema),
  z.lazy(() => Properties3$inboundSchema),
  z.lazy(() => Properties9$inboundSchema),
]);

/** @internal */
export type Properties$Outbound =
  | Properties4$Outbound
  | Properties6$Outbound
  | Properties8$Outbound
  | Properties5$Outbound
  | Properties7$Outbound
  | Properties1$Outbound
  | Properties2$Outbound
  | Properties3$Outbound
  | Properties9$Outbound;

/** @internal */
export const Properties$outboundSchema: z.ZodType<
  Properties$Outbound,
  z.ZodTypeDef,
  Properties
> = z.union([
  z.lazy(() => Properties4$outboundSchema),
  z.lazy(() => Properties6$outboundSchema),
  z.lazy(() => Properties8$outboundSchema),
  z.lazy(() => Properties5$outboundSchema),
  z.lazy(() => Properties7$outboundSchema),
  z.lazy(() => Properties1$outboundSchema),
  z.lazy(() => Properties2$outboundSchema),
  z.lazy(() => Properties3$outboundSchema),
  z.lazy(() => Properties9$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Properties$ {
  /** @deprecated use `Properties$inboundSchema` instead. */
  export const inboundSchema = Properties$inboundSchema;
  /** @deprecated use `Properties$outboundSchema` instead. */
  export const outboundSchema = Properties$outboundSchema;
  /** @deprecated use `Properties$Outbound` instead. */
  export type Outbound = Properties$Outbound;
}

export function propertiesToJSON(properties: Properties): string {
  return JSON.stringify(Properties$outboundSchema.parse(properties));
}

export function propertiesFromJSON(
  jsonString: string,
): SafeParseResult<Properties, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Properties$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Properties' from JSON`,
  );
}

/** @internal */
export const MetadataSchema$inboundSchema: z.ZodType<
  MetadataSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetConfigurationProductsType$inboundSchema,
  properties: z.record(
    z.union([
      z.lazy(() => Properties4$inboundSchema),
      z.lazy(() => Properties6$inboundSchema),
      z.lazy(() => Properties8$inboundSchema),
      z.lazy(() => Properties5$inboundSchema),
      z.lazy(() => Properties7$inboundSchema),
      z.lazy(() => Properties1$inboundSchema),
      z.lazy(() => Properties2$inboundSchema),
      z.lazy(() => Properties3$inboundSchema),
      z.lazy(() => Properties9$inboundSchema),
    ]),
  ),
  required: z.array(z.string()).optional(),
});

/** @internal */
export type MetadataSchema$Outbound = {
  type: string;
  properties: {
    [k: string]:
      | Properties4$Outbound
      | Properties6$Outbound
      | Properties8$Outbound
      | Properties5$Outbound
      | Properties7$Outbound
      | Properties1$Outbound
      | Properties2$Outbound
      | Properties3$Outbound
      | Properties9$Outbound;
  };
  required?: Array<string> | undefined;
};

/** @internal */
export const MetadataSchema$outboundSchema: z.ZodType<
  MetadataSchema$Outbound,
  z.ZodTypeDef,
  MetadataSchema
> = z.object({
  type: GetConfigurationProductsType$outboundSchema,
  properties: z.record(
    z.union([
      z.lazy(() => Properties4$outboundSchema),
      z.lazy(() => Properties6$outboundSchema),
      z.lazy(() => Properties8$outboundSchema),
      z.lazy(() => Properties5$outboundSchema),
      z.lazy(() => Properties7$outboundSchema),
      z.lazy(() => Properties1$outboundSchema),
      z.lazy(() => Properties2$outboundSchema),
      z.lazy(() => Properties3$outboundSchema),
      z.lazy(() => Properties9$outboundSchema),
    ]),
  ),
  required: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MetadataSchema$ {
  /** @deprecated use `MetadataSchema$inboundSchema` instead. */
  export const inboundSchema = MetadataSchema$inboundSchema;
  /** @deprecated use `MetadataSchema$outboundSchema` instead. */
  export const outboundSchema = MetadataSchema$outboundSchema;
  /** @deprecated use `MetadataSchema$Outbound` instead. */
  export type Outbound = MetadataSchema$Outbound;
}

export function metadataSchemaToJSON(metadataSchema: MetadataSchema): string {
  return JSON.stringify(MetadataSchema$outboundSchema.parse(metadataSchema));
}

export function metadataSchemaFromJSON(
  jsonString: string,
): SafeParseResult<MetadataSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MetadataSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MetadataSchema' from JSON`,
  );
}

/** @internal */
export const Products$inboundSchema: z.ZodType<
  Products,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  slug: z.string(),
  name: z.string(),
  protocols: z.lazy(() => Protocols$inboundSchema),
  primaryProtocol: PrimaryProtocol$inboundSchema.optional(),
  metadataSchema: z.lazy(() => MetadataSchema$inboundSchema),
});

/** @internal */
export type Products$Outbound = {
  id: string;
  slug: string;
  name: string;
  protocols: Protocols$Outbound;
  primaryProtocol?: string | undefined;
  metadataSchema: MetadataSchema$Outbound;
};

/** @internal */
export const Products$outboundSchema: z.ZodType<
  Products$Outbound,
  z.ZodTypeDef,
  Products
> = z.object({
  id: z.string(),
  slug: z.string(),
  name: z.string(),
  protocols: z.lazy(() => Protocols$outboundSchema),
  primaryProtocol: PrimaryProtocol$outboundSchema.optional(),
  metadataSchema: z.lazy(() => MetadataSchema$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Products$ {
  /** @deprecated use `Products$inboundSchema` instead. */
  export const inboundSchema = Products$inboundSchema;
  /** @deprecated use `Products$outboundSchema` instead. */
  export const outboundSchema = Products$outboundSchema;
  /** @deprecated use `Products$Outbound` instead. */
  export type Outbound = Products$Outbound;
}

export function productsToJSON(products: Products): string {
  return JSON.stringify(Products$outboundSchema.parse(products));
}

export function productsFromJSON(
  jsonString: string,
): SafeParseResult<Products, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Products$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Products' from JSON`,
  );
}

/** @internal */
export const Integration$inboundSchema: z.ZodType<
  Integration,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  slug: z.string(),
  name: z.string(),
});

/** @internal */
export type Integration$Outbound = {
  id: string;
  slug: string;
  name: string;
};

/** @internal */
export const Integration$outboundSchema: z.ZodType<
  Integration$Outbound,
  z.ZodTypeDef,
  Integration
> = z.object({
  id: z.string(),
  slug: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Integration$ {
  /** @deprecated use `Integration$inboundSchema` instead. */
  export const inboundSchema = Integration$inboundSchema;
  /** @deprecated use `Integration$outboundSchema` instead. */
  export const outboundSchema = Integration$outboundSchema;
  /** @deprecated use `Integration$Outbound` instead. */
  export type Outbound = Integration$Outbound;
}

export function integrationToJSON(integration: Integration): string {
  return JSON.stringify(Integration$outboundSchema.parse(integration));
}

export function integrationFromJSON(
  jsonString: string,
): SafeParseResult<Integration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Integration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Integration' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsConfiguration$inboundSchema: z.ZodType<
  GetConfigurationProductsConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetConfigurationProductsConfiguration$Outbound = {
  id: string;
};

/** @internal */
export const GetConfigurationProductsConfiguration$outboundSchema: z.ZodType<
  GetConfigurationProductsConfiguration$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsConfiguration
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsConfiguration$ {
  /** @deprecated use `GetConfigurationProductsConfiguration$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsConfiguration$inboundSchema;
  /** @deprecated use `GetConfigurationProductsConfiguration$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsConfiguration$outboundSchema;
  /** @deprecated use `GetConfigurationProductsConfiguration$Outbound` instead. */
  export type Outbound = GetConfigurationProductsConfiguration$Outbound;
}

export function getConfigurationProductsConfigurationToJSON(
  getConfigurationProductsConfiguration: GetConfigurationProductsConfiguration,
): string {
  return JSON.stringify(
    GetConfigurationProductsConfiguration$outboundSchema.parse(
      getConfigurationProductsConfiguration,
    ),
  );
}

export function getConfigurationProductsConfigurationFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsConfiguration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsConfiguration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsConfiguration' from JSON`,
  );
}

/** @internal */
export const GetConfigurationProductsResponseBody$inboundSchema: z.ZodType<
  GetConfigurationProductsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  products: z.array(z.lazy(() => Products$inboundSchema)),
  integration: z.lazy(() => Integration$inboundSchema),
  configuration: z.lazy(() =>
    GetConfigurationProductsConfiguration$inboundSchema
  ),
});

/** @internal */
export type GetConfigurationProductsResponseBody$Outbound = {
  products: Array<Products$Outbound>;
  integration: Integration$Outbound;
  configuration: GetConfigurationProductsConfiguration$Outbound;
};

/** @internal */
export const GetConfigurationProductsResponseBody$outboundSchema: z.ZodType<
  GetConfigurationProductsResponseBody$Outbound,
  z.ZodTypeDef,
  GetConfigurationProductsResponseBody
> = z.object({
  products: z.array(z.lazy(() => Products$outboundSchema)),
  integration: z.lazy(() => Integration$outboundSchema),
  configuration: z.lazy(() =>
    GetConfigurationProductsConfiguration$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigurationProductsResponseBody$ {
  /** @deprecated use `GetConfigurationProductsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigurationProductsResponseBody$inboundSchema;
  /** @deprecated use `GetConfigurationProductsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigurationProductsResponseBody$outboundSchema;
  /** @deprecated use `GetConfigurationProductsResponseBody$Outbound` instead. */
  export type Outbound = GetConfigurationProductsResponseBody$Outbound;
}

export function getConfigurationProductsResponseBodyToJSON(
  getConfigurationProductsResponseBody: GetConfigurationProductsResponseBody,
): string {
  return JSON.stringify(
    GetConfigurationProductsResponseBody$outboundSchema.parse(
      getConfigurationProductsResponseBody,
    ),
  );
}

export function getConfigurationProductsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetConfigurationProductsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigurationProductsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConfigurationProductsResponseBody' from JSON`,
  );
}
