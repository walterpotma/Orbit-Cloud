import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The grant type, when using x-www-form-urlencoded content type
 */
export declare const ExchangeSsoTokenGrantType: {
    readonly AuthorizationCode: "authorization_code";
};
/**
 * The grant type, when using x-www-form-urlencoded content type
 */
export type ExchangeSsoTokenGrantType = ClosedEnum<typeof ExchangeSsoTokenGrantType>;
export type ExchangeSsoTokenRequestBody = {
    /**
     * The sensitive code received from Vercel
     */
    code: string;
    /**
     * The state received from the initialization request
     */
    state?: string | undefined;
    /**
     * The integration client id
     */
    clientId: string;
    /**
     * The integration client secret
     */
    clientSecret: string;
    /**
     * The integration redirect URI
     */
    redirectUri?: string | undefined;
    /**
     * The grant type, when using x-www-form-urlencoded content type
     */
    grantType?: ExchangeSsoTokenGrantType | undefined;
};
export type ExchangeSsoTokenResponseBody = {
    idToken: string;
    accessToken: string | null;
    tokenType: string | null;
};
/** @internal */
export declare const ExchangeSsoTokenGrantType$inboundSchema: z.ZodNativeEnum<typeof ExchangeSsoTokenGrantType>;
/** @internal */
export declare const ExchangeSsoTokenGrantType$outboundSchema: z.ZodNativeEnum<typeof ExchangeSsoTokenGrantType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExchangeSsoTokenGrantType$ {
    /** @deprecated use `ExchangeSsoTokenGrantType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
    }>;
    /** @deprecated use `ExchangeSsoTokenGrantType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
    }>;
}
/** @internal */
export declare const ExchangeSsoTokenRequestBody$inboundSchema: z.ZodType<ExchangeSsoTokenRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ExchangeSsoTokenRequestBody$Outbound = {
    code: string;
    state?: string | undefined;
    client_id: string;
    client_secret: string;
    redirect_uri?: string | undefined;
    grant_type?: string | undefined;
};
/** @internal */
export declare const ExchangeSsoTokenRequestBody$outboundSchema: z.ZodType<ExchangeSsoTokenRequestBody$Outbound, z.ZodTypeDef, ExchangeSsoTokenRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExchangeSsoTokenRequestBody$ {
    /** @deprecated use `ExchangeSsoTokenRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExchangeSsoTokenRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExchangeSsoTokenRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExchangeSsoTokenRequestBody$Outbound, z.ZodTypeDef, ExchangeSsoTokenRequestBody>;
    /** @deprecated use `ExchangeSsoTokenRequestBody$Outbound` instead. */
    type Outbound = ExchangeSsoTokenRequestBody$Outbound;
}
export declare function exchangeSsoTokenRequestBodyToJSON(exchangeSsoTokenRequestBody: ExchangeSsoTokenRequestBody): string;
export declare function exchangeSsoTokenRequestBodyFromJSON(jsonString: string): SafeParseResult<ExchangeSsoTokenRequestBody, SDKValidationError>;
/** @internal */
export declare const ExchangeSsoTokenResponseBody$inboundSchema: z.ZodType<ExchangeSsoTokenResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ExchangeSsoTokenResponseBody$Outbound = {
    id_token: string;
    access_token: string | null;
    token_type: string | null;
};
/** @internal */
export declare const ExchangeSsoTokenResponseBody$outboundSchema: z.ZodType<ExchangeSsoTokenResponseBody$Outbound, z.ZodTypeDef, ExchangeSsoTokenResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExchangeSsoTokenResponseBody$ {
    /** @deprecated use `ExchangeSsoTokenResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExchangeSsoTokenResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExchangeSsoTokenResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExchangeSsoTokenResponseBody$Outbound, z.ZodTypeDef, ExchangeSsoTokenResponseBody>;
    /** @deprecated use `ExchangeSsoTokenResponseBody$Outbound` instead. */
    type Outbound = ExchangeSsoTokenResponseBody$Outbound;
}
export declare function exchangeSsoTokenResponseBodyToJSON(exchangeSsoTokenResponseBody: ExchangeSsoTokenResponseBody): string;
export declare function exchangeSsoTokenResponseBodyFromJSON(jsonString: string): SafeParseResult<ExchangeSsoTokenResponseBody, SDKValidationError>;
//# sourceMappingURL=exchangessotokenop.d.ts.map