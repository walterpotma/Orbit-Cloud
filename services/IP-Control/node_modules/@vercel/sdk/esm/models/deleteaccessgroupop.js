/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteAccessGroupRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const DeleteAccessGroupRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAccessGroupRequest$;
(function (DeleteAccessGroupRequest$) {
    /** @deprecated use `DeleteAccessGroupRequest$inboundSchema` instead. */
    DeleteAccessGroupRequest$.inboundSchema = DeleteAccessGroupRequest$inboundSchema;
    /** @deprecated use `DeleteAccessGroupRequest$outboundSchema` instead. */
    DeleteAccessGroupRequest$.outboundSchema = DeleteAccessGroupRequest$outboundSchema;
})(DeleteAccessGroupRequest$ || (DeleteAccessGroupRequest$ = {}));
export function deleteAccessGroupRequestToJSON(deleteAccessGroupRequest) {
    return JSON.stringify(DeleteAccessGroupRequest$outboundSchema.parse(deleteAccessGroupRequest));
}
export function deleteAccessGroupRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAccessGroupRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAccessGroupRequest' from JSON`);
}
//# sourceMappingURL=deleteaccessgroupop.js.map