import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { EdgeConfigItemValue, EdgeConfigItemValue$Outbound } from "./edgeconfigitemvalue.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The EdgeConfig.
 */
export type EdgeConfigItem = {
    key: string;
    value: EdgeConfigItemValue | null;
    description?: string | undefined;
    edgeConfigId: string;
    createdAt: number;
    updatedAt: number;
};
/** @internal */
export declare const EdgeConfigItem$inboundSchema: z.ZodType<EdgeConfigItem, z.ZodTypeDef, unknown>;
/** @internal */
export type EdgeConfigItem$Outbound = {
    key: string;
    value: EdgeConfigItemValue$Outbound | null;
    description?: string | undefined;
    edgeConfigId: string;
    createdAt: number;
    updatedAt: number;
};
/** @internal */
export declare const EdgeConfigItem$outboundSchema: z.ZodType<EdgeConfigItem$Outbound, z.ZodTypeDef, EdgeConfigItem>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EdgeConfigItem$ {
    /** @deprecated use `EdgeConfigItem$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EdgeConfigItem, z.ZodTypeDef, unknown>;
    /** @deprecated use `EdgeConfigItem$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EdgeConfigItem$Outbound, z.ZodTypeDef, EdgeConfigItem>;
    /** @deprecated use `EdgeConfigItem$Outbound` instead. */
    type Outbound = EdgeConfigItem$Outbound;
}
export declare function edgeConfigItemToJSON(edgeConfigItem: EdgeConfigItem): string;
export declare function edgeConfigItemFromJSON(jsonString: string): SafeParseResult<EdgeConfigItem, SDKValidationError>;
//# sourceMappingURL=edgeconfigitem.d.ts.map