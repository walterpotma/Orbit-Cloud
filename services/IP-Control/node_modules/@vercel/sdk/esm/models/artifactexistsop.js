/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const ArtifactExistsRequest$inboundSchema = z.object({
    hash: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const ArtifactExistsRequest$outboundSchema = z.object({
    hash: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ArtifactExistsRequest$;
(function (ArtifactExistsRequest$) {
    /** @deprecated use `ArtifactExistsRequest$inboundSchema` instead. */
    ArtifactExistsRequest$.inboundSchema = ArtifactExistsRequest$inboundSchema;
    /** @deprecated use `ArtifactExistsRequest$outboundSchema` instead. */
    ArtifactExistsRequest$.outboundSchema = ArtifactExistsRequest$outboundSchema;
})(ArtifactExistsRequest$ || (ArtifactExistsRequest$ = {}));
export function artifactExistsRequestToJSON(artifactExistsRequest) {
    return JSON.stringify(ArtifactExistsRequest$outboundSchema.parse(artifactExistsRequest));
}
export function artifactExistsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ArtifactExistsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ArtifactExistsRequest' from JSON`);
}
//# sourceMappingURL=artifactexistsop.js.map