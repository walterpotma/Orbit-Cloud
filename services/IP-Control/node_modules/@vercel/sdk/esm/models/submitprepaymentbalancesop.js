/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const Balances$inboundSchema = z.object({
    resourceId: z.string().optional(),
    credit: z.string().optional(),
    nameLabel: z.string().optional(),
    currencyValueInCents: z.number(),
});
/** @internal */
export const Balances$outboundSchema = z.object({
    resourceId: z.string().optional(),
    credit: z.string().optional(),
    nameLabel: z.string().optional(),
    currencyValueInCents: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Balances$;
(function (Balances$) {
    /** @deprecated use `Balances$inboundSchema` instead. */
    Balances$.inboundSchema = Balances$inboundSchema;
    /** @deprecated use `Balances$outboundSchema` instead. */
    Balances$.outboundSchema = Balances$outboundSchema;
})(Balances$ || (Balances$ = {}));
export function balancesToJSON(balances) {
    return JSON.stringify(Balances$outboundSchema.parse(balances));
}
export function balancesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Balances$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Balances' from JSON`);
}
/** @internal */
export const SubmitPrepaymentBalancesRequestBody$inboundSchema = z.object({
    timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    balances: z.array(z.lazy(() => Balances$inboundSchema)),
});
/** @internal */
export const SubmitPrepaymentBalancesRequestBody$outboundSchema = z.object({
    timestamp: z.date().transform(v => v.toISOString()),
    balances: z.array(z.lazy(() => Balances$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubmitPrepaymentBalancesRequestBody$;
(function (SubmitPrepaymentBalancesRequestBody$) {
    /** @deprecated use `SubmitPrepaymentBalancesRequestBody$inboundSchema` instead. */
    SubmitPrepaymentBalancesRequestBody$.inboundSchema = SubmitPrepaymentBalancesRequestBody$inboundSchema;
    /** @deprecated use `SubmitPrepaymentBalancesRequestBody$outboundSchema` instead. */
    SubmitPrepaymentBalancesRequestBody$.outboundSchema = SubmitPrepaymentBalancesRequestBody$outboundSchema;
})(SubmitPrepaymentBalancesRequestBody$ || (SubmitPrepaymentBalancesRequestBody$ = {}));
export function submitPrepaymentBalancesRequestBodyToJSON(submitPrepaymentBalancesRequestBody) {
    return JSON.stringify(SubmitPrepaymentBalancesRequestBody$outboundSchema.parse(submitPrepaymentBalancesRequestBody));
}
export function submitPrepaymentBalancesRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubmitPrepaymentBalancesRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubmitPrepaymentBalancesRequestBody' from JSON`);
}
/** @internal */
export const SubmitPrepaymentBalancesRequest$inboundSchema = z.object({
    integrationConfigurationId: z.string(),
    RequestBody: z.lazy(() => SubmitPrepaymentBalancesRequestBody$inboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const SubmitPrepaymentBalancesRequest$outboundSchema = z.object({
    integrationConfigurationId: z.string(),
    requestBody: z.lazy(() => SubmitPrepaymentBalancesRequestBody$outboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubmitPrepaymentBalancesRequest$;
(function (SubmitPrepaymentBalancesRequest$) {
    /** @deprecated use `SubmitPrepaymentBalancesRequest$inboundSchema` instead. */
    SubmitPrepaymentBalancesRequest$.inboundSchema = SubmitPrepaymentBalancesRequest$inboundSchema;
    /** @deprecated use `SubmitPrepaymentBalancesRequest$outboundSchema` instead. */
    SubmitPrepaymentBalancesRequest$.outboundSchema = SubmitPrepaymentBalancesRequest$outboundSchema;
})(SubmitPrepaymentBalancesRequest$ || (SubmitPrepaymentBalancesRequest$ = {}));
export function submitPrepaymentBalancesRequestToJSON(submitPrepaymentBalancesRequest) {
    return JSON.stringify(SubmitPrepaymentBalancesRequest$outboundSchema.parse(submitPrepaymentBalancesRequest));
}
export function submitPrepaymentBalancesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubmitPrepaymentBalancesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubmitPrepaymentBalancesRequest' from JSON`);
}
//# sourceMappingURL=submitprepaymentbalancesop.js.map