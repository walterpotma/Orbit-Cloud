/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { AuthUser$inboundSchema, AuthUser$outboundSchema, } from "./authuser.js";
import { AuthUserLimited$inboundSchema, AuthUserLimited$outboundSchema, } from "./authuserlimited.js";
/** @internal */
export const GetAuthUserUser$inboundSchema = z.union([AuthUser$inboundSchema, AuthUserLimited$inboundSchema]);
/** @internal */
export const GetAuthUserUser$outboundSchema = z.union([AuthUser$outboundSchema, AuthUserLimited$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAuthUserUser$;
(function (GetAuthUserUser$) {
    /** @deprecated use `GetAuthUserUser$inboundSchema` instead. */
    GetAuthUserUser$.inboundSchema = GetAuthUserUser$inboundSchema;
    /** @deprecated use `GetAuthUserUser$outboundSchema` instead. */
    GetAuthUserUser$.outboundSchema = GetAuthUserUser$outboundSchema;
})(GetAuthUserUser$ || (GetAuthUserUser$ = {}));
export function getAuthUserUserToJSON(getAuthUserUser) {
    return JSON.stringify(GetAuthUserUser$outboundSchema.parse(getAuthUserUser));
}
export function getAuthUserUserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAuthUserUser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAuthUserUser' from JSON`);
}
/** @internal */
export const GetAuthUserResponseBody$inboundSchema = z.object({
    user: z.union([AuthUser$inboundSchema, AuthUserLimited$inboundSchema]),
});
/** @internal */
export const GetAuthUserResponseBody$outboundSchema = z.object({
    user: z.union([AuthUser$outboundSchema, AuthUserLimited$outboundSchema]),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAuthUserResponseBody$;
(function (GetAuthUserResponseBody$) {
    /** @deprecated use `GetAuthUserResponseBody$inboundSchema` instead. */
    GetAuthUserResponseBody$.inboundSchema = GetAuthUserResponseBody$inboundSchema;
    /** @deprecated use `GetAuthUserResponseBody$outboundSchema` instead. */
    GetAuthUserResponseBody$.outboundSchema = GetAuthUserResponseBody$outboundSchema;
})(GetAuthUserResponseBody$ || (GetAuthUserResponseBody$ = {}));
export function getAuthUserResponseBodyToJSON(getAuthUserResponseBody) {
    return JSON.stringify(GetAuthUserResponseBody$outboundSchema.parse(getAuthUserResponseBody));
}
export function getAuthUserResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAuthUserResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAuthUserResponseBody' from JSON`);
}
//# sourceMappingURL=getauthuserop.js.map