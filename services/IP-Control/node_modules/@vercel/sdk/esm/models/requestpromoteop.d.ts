import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type RequestPromoteRequest = {
    projectId: string;
    deploymentId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/** @internal */
export declare const RequestPromoteRequest$inboundSchema: z.ZodType<RequestPromoteRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type RequestPromoteRequest$Outbound = {
    projectId: string;
    deploymentId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const RequestPromoteRequest$outboundSchema: z.ZodType<RequestPromoteRequest$Outbound, z.ZodTypeDef, RequestPromoteRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RequestPromoteRequest$ {
    /** @deprecated use `RequestPromoteRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RequestPromoteRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `RequestPromoteRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RequestPromoteRequest$Outbound, z.ZodTypeDef, RequestPromoteRequest>;
    /** @deprecated use `RequestPromoteRequest$Outbound` instead. */
    type Outbound = RequestPromoteRequest$Outbound;
}
export declare function requestPromoteRequestToJSON(requestPromoteRequest: RequestPromoteRequest): string;
export declare function requestPromoteRequestFromJSON(jsonString: string): SafeParseResult<RequestPromoteRequest, SDKValidationError>;
//# sourceMappingURL=requestpromoteop.d.ts.map