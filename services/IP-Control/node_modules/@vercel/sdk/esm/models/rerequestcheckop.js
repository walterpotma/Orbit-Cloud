/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const RerequestCheckRequest$inboundSchema = z.object({
    deploymentId: z.string(),
    checkId: z.string(),
    autoUpdate: z.boolean().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const RerequestCheckRequest$outboundSchema = z.object({
    deploymentId: z.string(),
    checkId: z.string(),
    autoUpdate: z.boolean().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RerequestCheckRequest$;
(function (RerequestCheckRequest$) {
    /** @deprecated use `RerequestCheckRequest$inboundSchema` instead. */
    RerequestCheckRequest$.inboundSchema = RerequestCheckRequest$inboundSchema;
    /** @deprecated use `RerequestCheckRequest$outboundSchema` instead. */
    RerequestCheckRequest$.outboundSchema = RerequestCheckRequest$outboundSchema;
})(RerequestCheckRequest$ || (RerequestCheckRequest$ = {}));
export function rerequestCheckRequestToJSON(rerequestCheckRequest) {
    return JSON.stringify(RerequestCheckRequest$outboundSchema.parse(rerequestCheckRequest));
}
export function rerequestCheckRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RerequestCheckRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RerequestCheckRequest' from JSON`);
}
/** @internal */
export const RerequestCheckResponseBody$inboundSchema = z.object({});
/** @internal */
export const RerequestCheckResponseBody$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RerequestCheckResponseBody$;
(function (RerequestCheckResponseBody$) {
    /** @deprecated use `RerequestCheckResponseBody$inboundSchema` instead. */
    RerequestCheckResponseBody$.inboundSchema = RerequestCheckResponseBody$inboundSchema;
    /** @deprecated use `RerequestCheckResponseBody$outboundSchema` instead. */
    RerequestCheckResponseBody$.outboundSchema = RerequestCheckResponseBody$outboundSchema;
})(RerequestCheckResponseBody$ || (RerequestCheckResponseBody$ = {}));
export function rerequestCheckResponseBodyToJSON(rerequestCheckResponseBody) {
    return JSON.stringify(RerequestCheckResponseBody$outboundSchema.parse(rerequestCheckResponseBody));
}
export function rerequestCheckResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RerequestCheckResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RerequestCheckResponseBody' from JSON`);
}
//# sourceMappingURL=rerequestcheckop.js.map