import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * A map of environments to override values for the secret, used for setting different values across deployments in production, preview, and development environments. Note: the same value will be used for all deployments in the given environment.
 */
export type UpdateResourceSecretsEnvironmentOverrides = {
    /**
     * Value used for development environment.
     */
    development?: string | undefined;
    /**
     * Value used for preview environment.
     */
    preview?: string | undefined;
    /**
     * Value used for production environment.
     */
    production?: string | undefined;
};
export type UpdateResourceSecretsSecrets = {
    name: string;
    value: string;
    prefix?: string | undefined;
    /**
     * A map of environments to override values for the secret, used for setting different values across deployments in production, preview, and development environments. Note: the same value will be used for all deployments in the given environment.
     */
    environmentOverrides?: UpdateResourceSecretsEnvironmentOverrides | undefined;
};
export type UpdateResourceSecretsRequestBody = {
    secrets: Array<UpdateResourceSecretsSecrets>;
    /**
     * If true, will only update the provided secrets
     */
    partial?: boolean | undefined;
};
export type UpdateResourceSecretsRequest = {
    integrationConfigurationId: string;
    integrationProductIdOrSlug: string;
    resourceId: string;
    requestBody: UpdateResourceSecretsRequestBody;
};
/** @internal */
export declare const UpdateResourceSecretsEnvironmentOverrides$inboundSchema: z.ZodType<UpdateResourceSecretsEnvironmentOverrides, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateResourceSecretsEnvironmentOverrides$Outbound = {
    development?: string | undefined;
    preview?: string | undefined;
    production?: string | undefined;
};
/** @internal */
export declare const UpdateResourceSecretsEnvironmentOverrides$outboundSchema: z.ZodType<UpdateResourceSecretsEnvironmentOverrides$Outbound, z.ZodTypeDef, UpdateResourceSecretsEnvironmentOverrides>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateResourceSecretsEnvironmentOverrides$ {
    /** @deprecated use `UpdateResourceSecretsEnvironmentOverrides$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateResourceSecretsEnvironmentOverrides, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateResourceSecretsEnvironmentOverrides$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateResourceSecretsEnvironmentOverrides$Outbound, z.ZodTypeDef, UpdateResourceSecretsEnvironmentOverrides>;
    /** @deprecated use `UpdateResourceSecretsEnvironmentOverrides$Outbound` instead. */
    type Outbound = UpdateResourceSecretsEnvironmentOverrides$Outbound;
}
export declare function updateResourceSecretsEnvironmentOverridesToJSON(updateResourceSecretsEnvironmentOverrides: UpdateResourceSecretsEnvironmentOverrides): string;
export declare function updateResourceSecretsEnvironmentOverridesFromJSON(jsonString: string): SafeParseResult<UpdateResourceSecretsEnvironmentOverrides, SDKValidationError>;
/** @internal */
export declare const UpdateResourceSecretsSecrets$inboundSchema: z.ZodType<UpdateResourceSecretsSecrets, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateResourceSecretsSecrets$Outbound = {
    name: string;
    value: string;
    prefix?: string | undefined;
    environmentOverrides?: UpdateResourceSecretsEnvironmentOverrides$Outbound | undefined;
};
/** @internal */
export declare const UpdateResourceSecretsSecrets$outboundSchema: z.ZodType<UpdateResourceSecretsSecrets$Outbound, z.ZodTypeDef, UpdateResourceSecretsSecrets>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateResourceSecretsSecrets$ {
    /** @deprecated use `UpdateResourceSecretsSecrets$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateResourceSecretsSecrets, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateResourceSecretsSecrets$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateResourceSecretsSecrets$Outbound, z.ZodTypeDef, UpdateResourceSecretsSecrets>;
    /** @deprecated use `UpdateResourceSecretsSecrets$Outbound` instead. */
    type Outbound = UpdateResourceSecretsSecrets$Outbound;
}
export declare function updateResourceSecretsSecretsToJSON(updateResourceSecretsSecrets: UpdateResourceSecretsSecrets): string;
export declare function updateResourceSecretsSecretsFromJSON(jsonString: string): SafeParseResult<UpdateResourceSecretsSecrets, SDKValidationError>;
/** @internal */
export declare const UpdateResourceSecretsRequestBody$inboundSchema: z.ZodType<UpdateResourceSecretsRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateResourceSecretsRequestBody$Outbound = {
    secrets: Array<UpdateResourceSecretsSecrets$Outbound>;
    partial?: boolean | undefined;
};
/** @internal */
export declare const UpdateResourceSecretsRequestBody$outboundSchema: z.ZodType<UpdateResourceSecretsRequestBody$Outbound, z.ZodTypeDef, UpdateResourceSecretsRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateResourceSecretsRequestBody$ {
    /** @deprecated use `UpdateResourceSecretsRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateResourceSecretsRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateResourceSecretsRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateResourceSecretsRequestBody$Outbound, z.ZodTypeDef, UpdateResourceSecretsRequestBody>;
    /** @deprecated use `UpdateResourceSecretsRequestBody$Outbound` instead. */
    type Outbound = UpdateResourceSecretsRequestBody$Outbound;
}
export declare function updateResourceSecretsRequestBodyToJSON(updateResourceSecretsRequestBody: UpdateResourceSecretsRequestBody): string;
export declare function updateResourceSecretsRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdateResourceSecretsRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdateResourceSecretsRequest$inboundSchema: z.ZodType<UpdateResourceSecretsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateResourceSecretsRequest$Outbound = {
    integrationConfigurationId: string;
    integrationProductIdOrSlug: string;
    resourceId: string;
    RequestBody: UpdateResourceSecretsRequestBody$Outbound;
};
/** @internal */
export declare const UpdateResourceSecretsRequest$outboundSchema: z.ZodType<UpdateResourceSecretsRequest$Outbound, z.ZodTypeDef, UpdateResourceSecretsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateResourceSecretsRequest$ {
    /** @deprecated use `UpdateResourceSecretsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateResourceSecretsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateResourceSecretsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateResourceSecretsRequest$Outbound, z.ZodTypeDef, UpdateResourceSecretsRequest>;
    /** @deprecated use `UpdateResourceSecretsRequest$Outbound` instead. */
    type Outbound = UpdateResourceSecretsRequest$Outbound;
}
export declare function updateResourceSecretsRequestToJSON(updateResourceSecretsRequest: UpdateResourceSecretsRequest): string;
export declare function updateResourceSecretsRequestFromJSON(jsonString: string): SafeParseResult<UpdateResourceSecretsRequest, SDKValidationError>;
//# sourceMappingURL=updateresourcesecretsop.d.ts.map