/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const GetProjectEnvTargetProjectsResponse2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const GetProjectEnvResponseBodyProjectsResponseType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type = {
    PostgresDatabase: "postgres-database",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type = {
    PostgresPassword: "postgres-password",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type = {
    PostgresHost: "postgres-host",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type = {
    PostgresUser: "postgres-user",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type = {
    PostgresUrl: "postgres-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type = {
    RedisUrl: "redis-url",
};
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type = {
    FlagsSecret: "flags-secret",
};
export const GetProjectEnvTargetProjects2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const GetProjectEnvTargetProjects1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const GetProjectEnvResponseBodyProjectsType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type = {
    PostgresDatabase: "postgres-database",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type = {
    PostgresPassword: "postgres-password",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type = {
    PostgresHost: "postgres-host",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type = {
    PostgresUser: "postgres-user",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type = {
    PostgresUrl: "postgres-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type = {
    RedisUrl: "redis-url",
};
export const GetProjectEnvResponseBodyProjectsResponse200Type = {
    FlagsSecret: "flags-secret",
};
export const GetProjectEnvTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const GetProjectEnvTarget1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const GetProjectEnvResponseBodyType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type = {
    PostgresDatabase: "postgres-database",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type = {
    PostgresPassword: "postgres-password",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type = {
    PostgresHost: "postgres-host",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type = {
    PostgresUser: "postgres-user",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
};
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const GetProjectEnvContentHintProjectsResponse200Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const GetProjectEnvContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const GetProjectEnvContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const GetProjectEnvContentHintType = {
    RedisUrl: "redis-url",
};
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType = {
    FlagsSecret: "flags-secret",
};
/** @internal */
export const GetProjectEnvRequest$inboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetProjectEnvRequest$outboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvRequest$;
(function (GetProjectEnvRequest$) {
    /** @deprecated use `GetProjectEnvRequest$inboundSchema` instead. */
    GetProjectEnvRequest$.inboundSchema = GetProjectEnvRequest$inboundSchema;
    /** @deprecated use `GetProjectEnvRequest$outboundSchema` instead. */
    GetProjectEnvRequest$.outboundSchema = GetProjectEnvRequest$outboundSchema;
})(GetProjectEnvRequest$ || (GetProjectEnvRequest$ = {}));
export function getProjectEnvRequestToJSON(getProjectEnvRequest) {
    return JSON.stringify(GetProjectEnvRequest$outboundSchema.parse(getProjectEnvRequest));
}
export function getProjectEnvRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvRequest' from JSON`);
}
/** @internal */
export const GetProjectEnvTargetProjectsResponse2$inboundSchema = z.nativeEnum(GetProjectEnvTargetProjectsResponse2);
/** @internal */
export const GetProjectEnvTargetProjectsResponse2$outboundSchema = GetProjectEnvTargetProjectsResponse2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvTargetProjectsResponse2$;
(function (GetProjectEnvTargetProjectsResponse2$) {
    /** @deprecated use `GetProjectEnvTargetProjectsResponse2$inboundSchema` instead. */
    GetProjectEnvTargetProjectsResponse2$.inboundSchema = GetProjectEnvTargetProjectsResponse2$inboundSchema;
    /** @deprecated use `GetProjectEnvTargetProjectsResponse2$outboundSchema` instead. */
    GetProjectEnvTargetProjectsResponse2$.outboundSchema = GetProjectEnvTargetProjectsResponse2$outboundSchema;
})(GetProjectEnvTargetProjectsResponse2$ || (GetProjectEnvTargetProjectsResponse2$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema = z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$inboundSchema,
]);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema = z.union([
    z.array(z.string()),
    GetProjectEnvTargetProjectsResponse2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponseTarget$;
(function (GetProjectEnvResponseBodyProjectsResponseTarget$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseTarget$.inboundSchema = GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseTarget$.outboundSchema = GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponseTarget$ || (GetProjectEnvResponseBodyProjectsResponseTarget$ = {}));
export function getProjectEnvResponseBodyProjectsResponseTargetToJSON(getProjectEnvResponseBodyProjectsResponseTarget) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsResponseTarget$outboundSchema.parse(getProjectEnvResponseBodyProjectsResponseTarget));
}
export function getProjectEnvResponseBodyProjectsResponseTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsResponseTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseTarget' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseType$inboundSchema = z
    .nativeEnum(GetProjectEnvResponseBodyProjectsResponseType);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseType$outboundSchema = GetProjectEnvResponseBodyProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponseType$;
(function (GetProjectEnvResponseBodyProjectsResponseType$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseType$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseType$.inboundSchema = GetProjectEnvResponseBodyProjectsResponseType$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseType$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseType$.outboundSchema = GetProjectEnvResponseBodyProjectsResponseType$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponseType$ || (GetProjectEnvResponseBodyProjectsResponseType$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse15$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse15$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse15$;
(function (GetProjectEnvContentHintProjectsResponse15$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse15$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse15$.inboundSchema = GetProjectEnvContentHintProjectsResponse15$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse15$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse15$.outboundSchema = GetProjectEnvContentHintProjectsResponse15$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse15$ || (GetProjectEnvContentHintProjectsResponse15$ = {}));
export function getProjectEnvContentHintProjectsResponse15ToJSON(getProjectEnvContentHintProjectsResponse15) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse15$outboundSchema.parse(getProjectEnvContentHintProjectsResponse15));
}
export function getProjectEnvContentHintProjectsResponse15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse15' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse14$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse14$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse14$;
(function (GetProjectEnvContentHintProjectsResponse14$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse14$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse14$.inboundSchema = GetProjectEnvContentHintProjectsResponse14$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse14$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse14$.outboundSchema = GetProjectEnvContentHintProjectsResponse14$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse14$ || (GetProjectEnvContentHintProjectsResponse14$ = {}));
export function getProjectEnvContentHintProjectsResponse14ToJSON(getProjectEnvContentHintProjectsResponse14) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse14$outboundSchema.parse(getProjectEnvContentHintProjectsResponse14));
}
export function getProjectEnvContentHintProjectsResponse14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse14' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse13$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse13$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse13$;
(function (GetProjectEnvContentHintProjectsResponse13$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse13$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse13$.inboundSchema = GetProjectEnvContentHintProjectsResponse13$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse13$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse13$.outboundSchema = GetProjectEnvContentHintProjectsResponse13$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse13$ || (GetProjectEnvContentHintProjectsResponse13$ = {}));
export function getProjectEnvContentHintProjectsResponse13ToJSON(getProjectEnvContentHintProjectsResponse13) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse13$outboundSchema.parse(getProjectEnvContentHintProjectsResponse13));
}
export function getProjectEnvContentHintProjectsResponse13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse13' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse12$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse12$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse12$;
(function (GetProjectEnvContentHintProjectsResponse12$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse12$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse12$.inboundSchema = GetProjectEnvContentHintProjectsResponse12$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse12$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse12$.outboundSchema = GetProjectEnvContentHintProjectsResponse12$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse12$ || (GetProjectEnvContentHintProjectsResponse12$ = {}));
export function getProjectEnvContentHintProjectsResponse12ToJSON(getProjectEnvContentHintProjectsResponse12) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse12$outboundSchema.parse(getProjectEnvContentHintProjectsResponse12));
}
export function getProjectEnvContentHintProjectsResponse12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse12' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse11$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse11$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse11$;
(function (GetProjectEnvContentHintProjectsResponse11$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse11$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse11$.inboundSchema = GetProjectEnvContentHintProjectsResponse11$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse11$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse11$.outboundSchema = GetProjectEnvContentHintProjectsResponse11$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse11$ || (GetProjectEnvContentHintProjectsResponse11$ = {}));
export function getProjectEnvContentHintProjectsResponse11ToJSON(getProjectEnvContentHintProjectsResponse11) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse11$outboundSchema.parse(getProjectEnvContentHintProjectsResponse11));
}
export function getProjectEnvContentHintProjectsResponse11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse11' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse10$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse10$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse10$;
(function (GetProjectEnvContentHintProjectsResponse10$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse10$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse10$.inboundSchema = GetProjectEnvContentHintProjectsResponse10$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse10$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse10$.outboundSchema = GetProjectEnvContentHintProjectsResponse10$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse10$ || (GetProjectEnvContentHintProjectsResponse10$ = {}));
export function getProjectEnvContentHintProjectsResponse10ToJSON(getProjectEnvContentHintProjectsResponse10) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse10$outboundSchema.parse(getProjectEnvContentHintProjectsResponse10));
}
export function getProjectEnvContentHintProjectsResponse10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse10' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse9$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse9$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse9$;
(function (GetProjectEnvContentHintProjectsResponse9$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse9$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse9$.inboundSchema = GetProjectEnvContentHintProjectsResponse9$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse9$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse9$.outboundSchema = GetProjectEnvContentHintProjectsResponse9$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse9$ || (GetProjectEnvContentHintProjectsResponse9$ = {}));
export function getProjectEnvContentHintProjectsResponse9ToJSON(getProjectEnvContentHintProjectsResponse9) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse9$outboundSchema.parse(getProjectEnvContentHintProjectsResponse9));
}
export function getProjectEnvContentHintProjectsResponse9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse9' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse8$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse8$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse8$;
(function (GetProjectEnvContentHintProjectsResponse8$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse8$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse8$.inboundSchema = GetProjectEnvContentHintProjectsResponse8$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse8$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse8$.outboundSchema = GetProjectEnvContentHintProjectsResponse8$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse8$ || (GetProjectEnvContentHintProjectsResponse8$ = {}));
export function getProjectEnvContentHintProjectsResponse8ToJSON(getProjectEnvContentHintProjectsResponse8) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse8$outboundSchema.parse(getProjectEnvContentHintProjectsResponse8));
}
export function getProjectEnvContentHintProjectsResponse8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse8' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse7$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse7$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse7$;
(function (GetProjectEnvContentHintProjectsResponse7$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse7$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse7$.inboundSchema = GetProjectEnvContentHintProjectsResponse7$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse7$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse7$.outboundSchema = GetProjectEnvContentHintProjectsResponse7$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse7$ || (GetProjectEnvContentHintProjectsResponse7$ = {}));
export function getProjectEnvContentHintProjectsResponse7ToJSON(getProjectEnvContentHintProjectsResponse7) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse7$outboundSchema.parse(getProjectEnvContentHintProjectsResponse7));
}
export function getProjectEnvContentHintProjectsResponse7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse7' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse6$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse6$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse6$;
(function (GetProjectEnvContentHintProjectsResponse6$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse6$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse6$.inboundSchema = GetProjectEnvContentHintProjectsResponse6$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse6$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse6$.outboundSchema = GetProjectEnvContentHintProjectsResponse6$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse6$ || (GetProjectEnvContentHintProjectsResponse6$ = {}));
export function getProjectEnvContentHintProjectsResponse6ToJSON(getProjectEnvContentHintProjectsResponse6) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse6$outboundSchema.parse(getProjectEnvContentHintProjectsResponse6));
}
export function getProjectEnvContentHintProjectsResponse6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse6' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse5$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse5$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse5$;
(function (GetProjectEnvContentHintProjectsResponse5$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse5$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse5$.inboundSchema = GetProjectEnvContentHintProjectsResponse5$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse5$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse5$.outboundSchema = GetProjectEnvContentHintProjectsResponse5$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse5$ || (GetProjectEnvContentHintProjectsResponse5$ = {}));
export function getProjectEnvContentHintProjectsResponse5ToJSON(getProjectEnvContentHintProjectsResponse5) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse5$outboundSchema.parse(getProjectEnvContentHintProjectsResponse5));
}
export function getProjectEnvContentHintProjectsResponse5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse5' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse4$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse4$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse4$;
(function (GetProjectEnvContentHintProjectsResponse4$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse4$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse4$.inboundSchema = GetProjectEnvContentHintProjectsResponse4$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse4$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse4$.outboundSchema = GetProjectEnvContentHintProjectsResponse4$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse4$ || (GetProjectEnvContentHintProjectsResponse4$ = {}));
export function getProjectEnvContentHintProjectsResponse4ToJSON(getProjectEnvContentHintProjectsResponse4) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse4$outboundSchema.parse(getProjectEnvContentHintProjectsResponse4));
}
export function getProjectEnvContentHintProjectsResponse4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse4' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse3$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse3$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse3$;
(function (GetProjectEnvContentHintProjectsResponse3$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse3$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse3$.inboundSchema = GetProjectEnvContentHintProjectsResponse3$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse3$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse3$.outboundSchema = GetProjectEnvContentHintProjectsResponse3$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse3$ || (GetProjectEnvContentHintProjectsResponse3$ = {}));
export function getProjectEnvContentHintProjectsResponse3ToJSON(getProjectEnvContentHintProjectsResponse3) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse3$outboundSchema.parse(getProjectEnvContentHintProjectsResponse3));
}
export function getProjectEnvContentHintProjectsResponse3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse3' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse2$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse2$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse2$;
(function (GetProjectEnvContentHintProjectsResponse2$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse2$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse2$.inboundSchema = GetProjectEnvContentHintProjectsResponse2$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse2$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse2$.outboundSchema = GetProjectEnvContentHintProjectsResponse2$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse2$ || (GetProjectEnvContentHintProjectsResponse2$ = {}));
export function getProjectEnvContentHintProjectsResponse2ToJSON(getProjectEnvContentHintProjectsResponse2) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse2$outboundSchema.parse(getProjectEnvContentHintProjectsResponse2));
}
export function getProjectEnvContentHintProjectsResponse2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse2' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse1$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjectsResponse1$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse1$;
(function (GetProjectEnvContentHintProjectsResponse1$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse1$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse1$.inboundSchema = GetProjectEnvContentHintProjectsResponse1$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse1$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse1$.outboundSchema = GetProjectEnvContentHintProjectsResponse1$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse1$ || (GetProjectEnvContentHintProjectsResponse1$ = {}));
export function getProjectEnvContentHintProjectsResponse1ToJSON(getProjectEnvContentHintProjectsResponse1) {
    return JSON.stringify(GetProjectEnvContentHintProjectsResponse1$outboundSchema.parse(getProjectEnvContentHintProjectsResponse1));
}
export function getProjectEnvContentHintProjectsResponse1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjectsResponse1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjectsResponse1' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHintProjectsResponse14$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse15$inboundSchema),
]);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHintProjectsResponse14$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjectsResponse15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponseContentHint$;
(function (GetProjectEnvResponseBodyProjectsResponseContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseContentHint$.inboundSchema = GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseContentHint$.outboundSchema = GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponseContentHint$ || (GetProjectEnvResponseBodyProjectsResponseContentHint$ = {}));
export function getProjectEnvResponseBodyProjectsResponseContentHintToJSON(getProjectEnvResponseBodyProjectsResponseContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsResponseContentHint$outboundSchema.parse(getProjectEnvResponseBodyProjectsResponseContentHint));
}
export function getProjectEnvResponseBodyProjectsResponseContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsResponseContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema = z.nativeEnum(GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$;
(function (GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$.inboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$.outboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$ || (GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponseInternalContentHint$;
(function (GetProjectEnvResponseBodyProjectsResponseInternalContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$.inboundSchema = GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponseInternalContentHint$.outboundSchema = GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponseInternalContentHint$ || (GetProjectEnvResponseBodyProjectsResponseInternalContentHint$ = {}));
export function getProjectEnvResponseBodyProjectsResponseInternalContentHintToJSON(getProjectEnvResponseBodyProjectsResponseInternalContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema
        .parse(getProjectEnvResponseBodyProjectsResponseInternalContentHint));
}
export function getProjectEnvResponseBodyProjectsResponseInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsResponseInternalContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBody3$inboundSchema = z.object({
    target: z.union([
        z.array(z.string()),
        GetProjectEnvTargetProjectsResponse2$inboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyProjectsResponseType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHintProjectsResponse14$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse1$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse2$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse3$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse4$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse5$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse6$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse7$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse8$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse9$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse10$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse11$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse12$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse13$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyProjectsResponseInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const GetProjectEnvResponseBody3$outboundSchema = z.object({
    target: z.union([
        z.array(z.string()),
        GetProjectEnvTargetProjectsResponse2$outboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyProjectsResponseType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHintProjectsResponse14$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse1$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse2$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse3$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse4$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse5$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse6$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse7$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse8$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse9$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse10$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse11$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse12$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse13$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjectsResponse15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyProjectsResponseInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBody3$;
(function (GetProjectEnvResponseBody3$) {
    /** @deprecated use `GetProjectEnvResponseBody3$inboundSchema` instead. */
    GetProjectEnvResponseBody3$.inboundSchema = GetProjectEnvResponseBody3$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBody3$outboundSchema` instead. */
    GetProjectEnvResponseBody3$.outboundSchema = GetProjectEnvResponseBody3$outboundSchema;
})(GetProjectEnvResponseBody3$ || (GetProjectEnvResponseBody3$ = {}));
export function getProjectEnvResponseBody3ToJSON(getProjectEnvResponseBody3) {
    return JSON.stringify(GetProjectEnvResponseBody3$outboundSchema.parse(getProjectEnvResponseBody3));
}
export function getProjectEnvResponseBody3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBody3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBody3' from JSON`);
}
/** @internal */
export const GetProjectEnvTargetProjects2$inboundSchema = z.nativeEnum(GetProjectEnvTargetProjects2);
/** @internal */
export const GetProjectEnvTargetProjects2$outboundSchema = GetProjectEnvTargetProjects2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvTargetProjects2$;
(function (GetProjectEnvTargetProjects2$) {
    /** @deprecated use `GetProjectEnvTargetProjects2$inboundSchema` instead. */
    GetProjectEnvTargetProjects2$.inboundSchema = GetProjectEnvTargetProjects2$inboundSchema;
    /** @deprecated use `GetProjectEnvTargetProjects2$outboundSchema` instead. */
    GetProjectEnvTargetProjects2$.outboundSchema = GetProjectEnvTargetProjects2$outboundSchema;
})(GetProjectEnvTargetProjects2$ || (GetProjectEnvTargetProjects2$ = {}));
/** @internal */
export const GetProjectEnvTargetProjects1$inboundSchema = z.nativeEnum(GetProjectEnvTargetProjects1);
/** @internal */
export const GetProjectEnvTargetProjects1$outboundSchema = GetProjectEnvTargetProjects1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvTargetProjects1$;
(function (GetProjectEnvTargetProjects1$) {
    /** @deprecated use `GetProjectEnvTargetProjects1$inboundSchema` instead. */
    GetProjectEnvTargetProjects1$.inboundSchema = GetProjectEnvTargetProjects1$inboundSchema;
    /** @deprecated use `GetProjectEnvTargetProjects1$outboundSchema` instead. */
    GetProjectEnvTargetProjects1$.outboundSchema = GetProjectEnvTargetProjects1$outboundSchema;
})(GetProjectEnvTargetProjects1$ || (GetProjectEnvTargetProjects1$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyProjectsTarget$inboundSchema = z.union([
    z.array(GetProjectEnvTargetProjects1$inboundSchema),
    GetProjectEnvTargetProjects2$inboundSchema,
]);
/** @internal */
export const GetProjectEnvResponseBodyProjectsTarget$outboundSchema = z.union([
    z.array(GetProjectEnvTargetProjects1$outboundSchema),
    GetProjectEnvTargetProjects2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsTarget$;
(function (GetProjectEnvResponseBodyProjectsTarget$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsTarget$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsTarget$.inboundSchema = GetProjectEnvResponseBodyProjectsTarget$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsTarget$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsTarget$.outboundSchema = GetProjectEnvResponseBodyProjectsTarget$outboundSchema;
})(GetProjectEnvResponseBodyProjectsTarget$ || (GetProjectEnvResponseBodyProjectsTarget$ = {}));
export function getProjectEnvResponseBodyProjectsTargetToJSON(getProjectEnvResponseBodyProjectsTarget) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsTarget$outboundSchema.parse(getProjectEnvResponseBodyProjectsTarget));
}
export function getProjectEnvResponseBodyProjectsTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsTarget' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsType$inboundSchema = z.nativeEnum(GetProjectEnvResponseBodyProjectsType);
/** @internal */
export const GetProjectEnvResponseBodyProjectsType$outboundSchema = GetProjectEnvResponseBodyProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsType$;
(function (GetProjectEnvResponseBodyProjectsType$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsType$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsType$.inboundSchema = GetProjectEnvResponseBodyProjectsType$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsType$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsType$.outboundSchema = GetProjectEnvResponseBodyProjectsType$outboundSchema;
})(GetProjectEnvResponseBodyProjectsType$ || (GetProjectEnvResponseBodyProjectsType$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects15$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects15$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects15$;
(function (GetProjectEnvContentHintProjects15$) {
    /** @deprecated use `GetProjectEnvContentHintProjects15$inboundSchema` instead. */
    GetProjectEnvContentHintProjects15$.inboundSchema = GetProjectEnvContentHintProjects15$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects15$outboundSchema` instead. */
    GetProjectEnvContentHintProjects15$.outboundSchema = GetProjectEnvContentHintProjects15$outboundSchema;
})(GetProjectEnvContentHintProjects15$ || (GetProjectEnvContentHintProjects15$ = {}));
export function getProjectEnvContentHintProjects15ToJSON(getProjectEnvContentHintProjects15) {
    return JSON.stringify(GetProjectEnvContentHintProjects15$outboundSchema.parse(getProjectEnvContentHintProjects15));
}
export function getProjectEnvContentHintProjects15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects15' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects14$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects14$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects14$;
(function (GetProjectEnvContentHintProjects14$) {
    /** @deprecated use `GetProjectEnvContentHintProjects14$inboundSchema` instead. */
    GetProjectEnvContentHintProjects14$.inboundSchema = GetProjectEnvContentHintProjects14$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects14$outboundSchema` instead. */
    GetProjectEnvContentHintProjects14$.outboundSchema = GetProjectEnvContentHintProjects14$outboundSchema;
})(GetProjectEnvContentHintProjects14$ || (GetProjectEnvContentHintProjects14$ = {}));
export function getProjectEnvContentHintProjects14ToJSON(getProjectEnvContentHintProjects14) {
    return JSON.stringify(GetProjectEnvContentHintProjects14$outboundSchema.parse(getProjectEnvContentHintProjects14));
}
export function getProjectEnvContentHintProjects14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects14' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects13$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects13$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects13$;
(function (GetProjectEnvContentHintProjects13$) {
    /** @deprecated use `GetProjectEnvContentHintProjects13$inboundSchema` instead. */
    GetProjectEnvContentHintProjects13$.inboundSchema = GetProjectEnvContentHintProjects13$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects13$outboundSchema` instead. */
    GetProjectEnvContentHintProjects13$.outboundSchema = GetProjectEnvContentHintProjects13$outboundSchema;
})(GetProjectEnvContentHintProjects13$ || (GetProjectEnvContentHintProjects13$ = {}));
export function getProjectEnvContentHintProjects13ToJSON(getProjectEnvContentHintProjects13) {
    return JSON.stringify(GetProjectEnvContentHintProjects13$outboundSchema.parse(getProjectEnvContentHintProjects13));
}
export function getProjectEnvContentHintProjects13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects13' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects12$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects12$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects12$;
(function (GetProjectEnvContentHintProjects12$) {
    /** @deprecated use `GetProjectEnvContentHintProjects12$inboundSchema` instead. */
    GetProjectEnvContentHintProjects12$.inboundSchema = GetProjectEnvContentHintProjects12$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects12$outboundSchema` instead. */
    GetProjectEnvContentHintProjects12$.outboundSchema = GetProjectEnvContentHintProjects12$outboundSchema;
})(GetProjectEnvContentHintProjects12$ || (GetProjectEnvContentHintProjects12$ = {}));
export function getProjectEnvContentHintProjects12ToJSON(getProjectEnvContentHintProjects12) {
    return JSON.stringify(GetProjectEnvContentHintProjects12$outboundSchema.parse(getProjectEnvContentHintProjects12));
}
export function getProjectEnvContentHintProjects12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects12' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects11$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects11$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects11$;
(function (GetProjectEnvContentHintProjects11$) {
    /** @deprecated use `GetProjectEnvContentHintProjects11$inboundSchema` instead. */
    GetProjectEnvContentHintProjects11$.inboundSchema = GetProjectEnvContentHintProjects11$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects11$outboundSchema` instead. */
    GetProjectEnvContentHintProjects11$.outboundSchema = GetProjectEnvContentHintProjects11$outboundSchema;
})(GetProjectEnvContentHintProjects11$ || (GetProjectEnvContentHintProjects11$ = {}));
export function getProjectEnvContentHintProjects11ToJSON(getProjectEnvContentHintProjects11) {
    return JSON.stringify(GetProjectEnvContentHintProjects11$outboundSchema.parse(getProjectEnvContentHintProjects11));
}
export function getProjectEnvContentHintProjects11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects11' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects10$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects10$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects10$;
(function (GetProjectEnvContentHintProjects10$) {
    /** @deprecated use `GetProjectEnvContentHintProjects10$inboundSchema` instead. */
    GetProjectEnvContentHintProjects10$.inboundSchema = GetProjectEnvContentHintProjects10$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects10$outboundSchema` instead. */
    GetProjectEnvContentHintProjects10$.outboundSchema = GetProjectEnvContentHintProjects10$outboundSchema;
})(GetProjectEnvContentHintProjects10$ || (GetProjectEnvContentHintProjects10$ = {}));
export function getProjectEnvContentHintProjects10ToJSON(getProjectEnvContentHintProjects10) {
    return JSON.stringify(GetProjectEnvContentHintProjects10$outboundSchema.parse(getProjectEnvContentHintProjects10));
}
export function getProjectEnvContentHintProjects10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects10' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects9$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects9$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects9$;
(function (GetProjectEnvContentHintProjects9$) {
    /** @deprecated use `GetProjectEnvContentHintProjects9$inboundSchema` instead. */
    GetProjectEnvContentHintProjects9$.inboundSchema = GetProjectEnvContentHintProjects9$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects9$outboundSchema` instead. */
    GetProjectEnvContentHintProjects9$.outboundSchema = GetProjectEnvContentHintProjects9$outboundSchema;
})(GetProjectEnvContentHintProjects9$ || (GetProjectEnvContentHintProjects9$ = {}));
export function getProjectEnvContentHintProjects9ToJSON(getProjectEnvContentHintProjects9) {
    return JSON.stringify(GetProjectEnvContentHintProjects9$outboundSchema.parse(getProjectEnvContentHintProjects9));
}
export function getProjectEnvContentHintProjects9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects9' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects8$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects8$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects8$;
(function (GetProjectEnvContentHintProjects8$) {
    /** @deprecated use `GetProjectEnvContentHintProjects8$inboundSchema` instead. */
    GetProjectEnvContentHintProjects8$.inboundSchema = GetProjectEnvContentHintProjects8$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects8$outboundSchema` instead. */
    GetProjectEnvContentHintProjects8$.outboundSchema = GetProjectEnvContentHintProjects8$outboundSchema;
})(GetProjectEnvContentHintProjects8$ || (GetProjectEnvContentHintProjects8$ = {}));
export function getProjectEnvContentHintProjects8ToJSON(getProjectEnvContentHintProjects8) {
    return JSON.stringify(GetProjectEnvContentHintProjects8$outboundSchema.parse(getProjectEnvContentHintProjects8));
}
export function getProjectEnvContentHintProjects8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects8' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects7$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects7$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects7$;
(function (GetProjectEnvContentHintProjects7$) {
    /** @deprecated use `GetProjectEnvContentHintProjects7$inboundSchema` instead. */
    GetProjectEnvContentHintProjects7$.inboundSchema = GetProjectEnvContentHintProjects7$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects7$outboundSchema` instead. */
    GetProjectEnvContentHintProjects7$.outboundSchema = GetProjectEnvContentHintProjects7$outboundSchema;
})(GetProjectEnvContentHintProjects7$ || (GetProjectEnvContentHintProjects7$ = {}));
export function getProjectEnvContentHintProjects7ToJSON(getProjectEnvContentHintProjects7) {
    return JSON.stringify(GetProjectEnvContentHintProjects7$outboundSchema.parse(getProjectEnvContentHintProjects7));
}
export function getProjectEnvContentHintProjects7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects7' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects6$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects6$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects6$;
(function (GetProjectEnvContentHintProjects6$) {
    /** @deprecated use `GetProjectEnvContentHintProjects6$inboundSchema` instead. */
    GetProjectEnvContentHintProjects6$.inboundSchema = GetProjectEnvContentHintProjects6$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects6$outboundSchema` instead. */
    GetProjectEnvContentHintProjects6$.outboundSchema = GetProjectEnvContentHintProjects6$outboundSchema;
})(GetProjectEnvContentHintProjects6$ || (GetProjectEnvContentHintProjects6$ = {}));
export function getProjectEnvContentHintProjects6ToJSON(getProjectEnvContentHintProjects6) {
    return JSON.stringify(GetProjectEnvContentHintProjects6$outboundSchema.parse(getProjectEnvContentHintProjects6));
}
export function getProjectEnvContentHintProjects6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects6' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects5$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects5$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects5$;
(function (GetProjectEnvContentHintProjects5$) {
    /** @deprecated use `GetProjectEnvContentHintProjects5$inboundSchema` instead. */
    GetProjectEnvContentHintProjects5$.inboundSchema = GetProjectEnvContentHintProjects5$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects5$outboundSchema` instead. */
    GetProjectEnvContentHintProjects5$.outboundSchema = GetProjectEnvContentHintProjects5$outboundSchema;
})(GetProjectEnvContentHintProjects5$ || (GetProjectEnvContentHintProjects5$ = {}));
export function getProjectEnvContentHintProjects5ToJSON(getProjectEnvContentHintProjects5) {
    return JSON.stringify(GetProjectEnvContentHintProjects5$outboundSchema.parse(getProjectEnvContentHintProjects5));
}
export function getProjectEnvContentHintProjects5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects5' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects4$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects4$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects4$;
(function (GetProjectEnvContentHintProjects4$) {
    /** @deprecated use `GetProjectEnvContentHintProjects4$inboundSchema` instead. */
    GetProjectEnvContentHintProjects4$.inboundSchema = GetProjectEnvContentHintProjects4$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects4$outboundSchema` instead. */
    GetProjectEnvContentHintProjects4$.outboundSchema = GetProjectEnvContentHintProjects4$outboundSchema;
})(GetProjectEnvContentHintProjects4$ || (GetProjectEnvContentHintProjects4$ = {}));
export function getProjectEnvContentHintProjects4ToJSON(getProjectEnvContentHintProjects4) {
    return JSON.stringify(GetProjectEnvContentHintProjects4$outboundSchema.parse(getProjectEnvContentHintProjects4));
}
export function getProjectEnvContentHintProjects4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects4' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects3$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects3$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects3$;
(function (GetProjectEnvContentHintProjects3$) {
    /** @deprecated use `GetProjectEnvContentHintProjects3$inboundSchema` instead. */
    GetProjectEnvContentHintProjects3$.inboundSchema = GetProjectEnvContentHintProjects3$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects3$outboundSchema` instead. */
    GetProjectEnvContentHintProjects3$.outboundSchema = GetProjectEnvContentHintProjects3$outboundSchema;
})(GetProjectEnvContentHintProjects3$ || (GetProjectEnvContentHintProjects3$ = {}));
export function getProjectEnvContentHintProjects3ToJSON(getProjectEnvContentHintProjects3) {
    return JSON.stringify(GetProjectEnvContentHintProjects3$outboundSchema.parse(getProjectEnvContentHintProjects3));
}
export function getProjectEnvContentHintProjects3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects3' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects2$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects2$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects2$;
(function (GetProjectEnvContentHintProjects2$) {
    /** @deprecated use `GetProjectEnvContentHintProjects2$inboundSchema` instead. */
    GetProjectEnvContentHintProjects2$.inboundSchema = GetProjectEnvContentHintProjects2$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects2$outboundSchema` instead. */
    GetProjectEnvContentHintProjects2$.outboundSchema = GetProjectEnvContentHintProjects2$outboundSchema;
})(GetProjectEnvContentHintProjects2$ || (GetProjectEnvContentHintProjects2$ = {}));
export function getProjectEnvContentHintProjects2ToJSON(getProjectEnvContentHintProjects2) {
    return JSON.stringify(GetProjectEnvContentHintProjects2$outboundSchema.parse(getProjectEnvContentHintProjects2));
}
export function getProjectEnvContentHintProjects2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects2' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjects1$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHintProjects1$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjects1$;
(function (GetProjectEnvContentHintProjects1$) {
    /** @deprecated use `GetProjectEnvContentHintProjects1$inboundSchema` instead. */
    GetProjectEnvContentHintProjects1$.inboundSchema = GetProjectEnvContentHintProjects1$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjects1$outboundSchema` instead. */
    GetProjectEnvContentHintProjects1$.outboundSchema = GetProjectEnvContentHintProjects1$outboundSchema;
})(GetProjectEnvContentHintProjects1$ || (GetProjectEnvContentHintProjects1$ = {}));
export function getProjectEnvContentHintProjects1ToJSON(getProjectEnvContentHintProjects1) {
    return JSON.stringify(GetProjectEnvContentHintProjects1$outboundSchema.parse(getProjectEnvContentHintProjects1));
}
export function getProjectEnvContentHintProjects1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHintProjects1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHintProjects1' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsContentHint$inboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHintProjects14$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects15$inboundSchema),
]);
/** @internal */
export const GetProjectEnvResponseBodyProjectsContentHint$outboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHintProjects14$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintProjects15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsContentHint$;
(function (GetProjectEnvResponseBodyProjectsContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsContentHint$.inboundSchema = GetProjectEnvResponseBodyProjectsContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsContentHint$.outboundSchema = GetProjectEnvResponseBodyProjectsContentHint$outboundSchema;
})(GetProjectEnvResponseBodyProjectsContentHint$ || (GetProjectEnvResponseBodyProjectsContentHint$ = {}));
export function getProjectEnvResponseBodyProjectsContentHintToJSON(getProjectEnvResponseBodyProjectsContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsContentHint$outboundSchema.parse(getProjectEnvResponseBodyProjectsContentHint));
}
export function getProjectEnvResponseBodyProjectsContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema = z
    .nativeEnum(GetProjectEnvResponseBodyProjectsResponse200Type);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema = GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponse200Type$;
(function (GetProjectEnvResponseBodyProjectsResponse200Type$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200Type$.inboundSchema = GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200Type$.outboundSchema = GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponse200Type$ || (GetProjectEnvResponseBodyProjectsResponse200Type$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200Type$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200Type$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsInternalContentHint$;
(function (GetProjectEnvResponseBodyProjectsInternalContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsInternalContentHint$.inboundSchema = GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsInternalContentHint$.outboundSchema = GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema;
})(GetProjectEnvResponseBodyProjectsInternalContentHint$ || (GetProjectEnvResponseBodyProjectsInternalContentHint$ = {}));
export function getProjectEnvResponseBodyProjectsInternalContentHintToJSON(getProjectEnvResponseBodyProjectsInternalContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema.parse(getProjectEnvResponseBodyProjectsInternalContentHint));
}
export function getProjectEnvResponseBodyProjectsInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyProjectsInternalContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBody2$inboundSchema = z.object({
    target: z.union([
        z.array(GetProjectEnvTargetProjects1$inboundSchema),
        GetProjectEnvTargetProjects2$inboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyProjectsType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHintProjects14$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects1$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects2$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects3$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects4$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects5$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects6$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects7$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects8$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects9$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects10$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects11$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects12$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects13$inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyProjectsInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const GetProjectEnvResponseBody2$outboundSchema = z.object({
    target: z.union([
        z.array(GetProjectEnvTargetProjects1$outboundSchema),
        GetProjectEnvTargetProjects2$outboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyProjectsType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    vsmValue: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHintProjects14$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects1$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects2$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects3$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects4$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects5$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects6$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects7$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects8$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects9$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects10$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects11$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects12$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects13$outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyProjectsInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBody2$;
(function (GetProjectEnvResponseBody2$) {
    /** @deprecated use `GetProjectEnvResponseBody2$inboundSchema` instead. */
    GetProjectEnvResponseBody2$.inboundSchema = GetProjectEnvResponseBody2$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBody2$outboundSchema` instead. */
    GetProjectEnvResponseBody2$.outboundSchema = GetProjectEnvResponseBody2$outboundSchema;
})(GetProjectEnvResponseBody2$ || (GetProjectEnvResponseBody2$ = {}));
export function getProjectEnvResponseBody2ToJSON(getProjectEnvResponseBody2) {
    return JSON.stringify(GetProjectEnvResponseBody2$outboundSchema.parse(getProjectEnvResponseBody2));
}
export function getProjectEnvResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBody2' from JSON`);
}
/** @internal */
export const GetProjectEnvTarget2$inboundSchema = z.nativeEnum(GetProjectEnvTarget2);
/** @internal */
export const GetProjectEnvTarget2$outboundSchema = GetProjectEnvTarget2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvTarget2$;
(function (GetProjectEnvTarget2$) {
    /** @deprecated use `GetProjectEnvTarget2$inboundSchema` instead. */
    GetProjectEnvTarget2$.inboundSchema = GetProjectEnvTarget2$inboundSchema;
    /** @deprecated use `GetProjectEnvTarget2$outboundSchema` instead. */
    GetProjectEnvTarget2$.outboundSchema = GetProjectEnvTarget2$outboundSchema;
})(GetProjectEnvTarget2$ || (GetProjectEnvTarget2$ = {}));
/** @internal */
export const GetProjectEnvTarget1$inboundSchema = z.nativeEnum(GetProjectEnvTarget1);
/** @internal */
export const GetProjectEnvTarget1$outboundSchema = GetProjectEnvTarget1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvTarget1$;
(function (GetProjectEnvTarget1$) {
    /** @deprecated use `GetProjectEnvTarget1$inboundSchema` instead. */
    GetProjectEnvTarget1$.inboundSchema = GetProjectEnvTarget1$inboundSchema;
    /** @deprecated use `GetProjectEnvTarget1$outboundSchema` instead. */
    GetProjectEnvTarget1$.outboundSchema = GetProjectEnvTarget1$outboundSchema;
})(GetProjectEnvTarget1$ || (GetProjectEnvTarget1$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyTarget$inboundSchema = z.union([
    z.array(GetProjectEnvTarget1$inboundSchema),
    GetProjectEnvTarget2$inboundSchema,
]);
/** @internal */
export const GetProjectEnvResponseBodyTarget$outboundSchema = z.union([
    z.array(GetProjectEnvTarget1$outboundSchema),
    GetProjectEnvTarget2$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyTarget$;
(function (GetProjectEnvResponseBodyTarget$) {
    /** @deprecated use `GetProjectEnvResponseBodyTarget$inboundSchema` instead. */
    GetProjectEnvResponseBodyTarget$.inboundSchema = GetProjectEnvResponseBodyTarget$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyTarget$outboundSchema` instead. */
    GetProjectEnvResponseBodyTarget$.outboundSchema = GetProjectEnvResponseBodyTarget$outboundSchema;
})(GetProjectEnvResponseBodyTarget$ || (GetProjectEnvResponseBodyTarget$ = {}));
export function getProjectEnvResponseBodyTargetToJSON(getProjectEnvResponseBodyTarget) {
    return JSON.stringify(GetProjectEnvResponseBodyTarget$outboundSchema.parse(getProjectEnvResponseBodyTarget));
}
export function getProjectEnvResponseBodyTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyTarget' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyType$inboundSchema = z.nativeEnum(GetProjectEnvResponseBodyType);
/** @internal */
export const GetProjectEnvResponseBodyType$outboundSchema = GetProjectEnvResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyType$;
(function (GetProjectEnvResponseBodyType$) {
    /** @deprecated use `GetProjectEnvResponseBodyType$inboundSchema` instead. */
    GetProjectEnvResponseBodyType$.inboundSchema = GetProjectEnvResponseBodyType$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyType$outboundSchema` instead. */
    GetProjectEnvResponseBodyType$.outboundSchema = GetProjectEnvResponseBodyType$outboundSchema;
})(GetProjectEnvResponseBodyType$ || (GetProjectEnvResponseBodyType$ = {}));
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint15$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint15$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint15$;
(function (GetProjectEnvContentHint15$) {
    /** @deprecated use `GetProjectEnvContentHint15$inboundSchema` instead. */
    GetProjectEnvContentHint15$.inboundSchema = GetProjectEnvContentHint15$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint15$outboundSchema` instead. */
    GetProjectEnvContentHint15$.outboundSchema = GetProjectEnvContentHint15$outboundSchema;
})(GetProjectEnvContentHint15$ || (GetProjectEnvContentHint15$ = {}));
export function getProjectEnvContentHint15ToJSON(getProjectEnvContentHint15) {
    return JSON.stringify(GetProjectEnvContentHint15$outboundSchema.parse(getProjectEnvContentHint15));
}
export function getProjectEnvContentHint15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint15' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint14$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint14$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint14$;
(function (GetProjectEnvContentHint14$) {
    /** @deprecated use `GetProjectEnvContentHint14$inboundSchema` instead. */
    GetProjectEnvContentHint14$.inboundSchema = GetProjectEnvContentHint14$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint14$outboundSchema` instead. */
    GetProjectEnvContentHint14$.outboundSchema = GetProjectEnvContentHint14$outboundSchema;
})(GetProjectEnvContentHint14$ || (GetProjectEnvContentHint14$ = {}));
export function getProjectEnvContentHint14ToJSON(getProjectEnvContentHint14) {
    return JSON.stringify(GetProjectEnvContentHint14$outboundSchema.parse(getProjectEnvContentHint14));
}
export function getProjectEnvContentHint14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint14' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint13$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint13$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint13$;
(function (GetProjectEnvContentHint13$) {
    /** @deprecated use `GetProjectEnvContentHint13$inboundSchema` instead. */
    GetProjectEnvContentHint13$.inboundSchema = GetProjectEnvContentHint13$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint13$outboundSchema` instead. */
    GetProjectEnvContentHint13$.outboundSchema = GetProjectEnvContentHint13$outboundSchema;
})(GetProjectEnvContentHint13$ || (GetProjectEnvContentHint13$ = {}));
export function getProjectEnvContentHint13ToJSON(getProjectEnvContentHint13) {
    return JSON.stringify(GetProjectEnvContentHint13$outboundSchema.parse(getProjectEnvContentHint13));
}
export function getProjectEnvContentHint13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint13' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint12$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint12$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint12$;
(function (GetProjectEnvContentHint12$) {
    /** @deprecated use `GetProjectEnvContentHint12$inboundSchema` instead. */
    GetProjectEnvContentHint12$.inboundSchema = GetProjectEnvContentHint12$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint12$outboundSchema` instead. */
    GetProjectEnvContentHint12$.outboundSchema = GetProjectEnvContentHint12$outboundSchema;
})(GetProjectEnvContentHint12$ || (GetProjectEnvContentHint12$ = {}));
export function getProjectEnvContentHint12ToJSON(getProjectEnvContentHint12) {
    return JSON.stringify(GetProjectEnvContentHint12$outboundSchema.parse(getProjectEnvContentHint12));
}
export function getProjectEnvContentHint12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint12' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint11$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint11$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint11$;
(function (GetProjectEnvContentHint11$) {
    /** @deprecated use `GetProjectEnvContentHint11$inboundSchema` instead. */
    GetProjectEnvContentHint11$.inboundSchema = GetProjectEnvContentHint11$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint11$outboundSchema` instead. */
    GetProjectEnvContentHint11$.outboundSchema = GetProjectEnvContentHint11$outboundSchema;
})(GetProjectEnvContentHint11$ || (GetProjectEnvContentHint11$ = {}));
export function getProjectEnvContentHint11ToJSON(getProjectEnvContentHint11) {
    return JSON.stringify(GetProjectEnvContentHint11$outboundSchema.parse(getProjectEnvContentHint11));
}
export function getProjectEnvContentHint11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint11' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint10$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint10$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint10$;
(function (GetProjectEnvContentHint10$) {
    /** @deprecated use `GetProjectEnvContentHint10$inboundSchema` instead. */
    GetProjectEnvContentHint10$.inboundSchema = GetProjectEnvContentHint10$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint10$outboundSchema` instead. */
    GetProjectEnvContentHint10$.outboundSchema = GetProjectEnvContentHint10$outboundSchema;
})(GetProjectEnvContentHint10$ || (GetProjectEnvContentHint10$ = {}));
export function getProjectEnvContentHint10ToJSON(getProjectEnvContentHint10) {
    return JSON.stringify(GetProjectEnvContentHint10$outboundSchema.parse(getProjectEnvContentHint10));
}
export function getProjectEnvContentHint10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint10' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint9$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint9$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint9$;
(function (GetProjectEnvContentHint9$) {
    /** @deprecated use `GetProjectEnvContentHint9$inboundSchema` instead. */
    GetProjectEnvContentHint9$.inboundSchema = GetProjectEnvContentHint9$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint9$outboundSchema` instead. */
    GetProjectEnvContentHint9$.outboundSchema = GetProjectEnvContentHint9$outboundSchema;
})(GetProjectEnvContentHint9$ || (GetProjectEnvContentHint9$ = {}));
export function getProjectEnvContentHint9ToJSON(getProjectEnvContentHint9) {
    return JSON.stringify(GetProjectEnvContentHint9$outboundSchema.parse(getProjectEnvContentHint9));
}
export function getProjectEnvContentHint9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint9' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint8$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint8$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint8$;
(function (GetProjectEnvContentHint8$) {
    /** @deprecated use `GetProjectEnvContentHint8$inboundSchema` instead. */
    GetProjectEnvContentHint8$.inboundSchema = GetProjectEnvContentHint8$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint8$outboundSchema` instead. */
    GetProjectEnvContentHint8$.outboundSchema = GetProjectEnvContentHint8$outboundSchema;
})(GetProjectEnvContentHint8$ || (GetProjectEnvContentHint8$ = {}));
export function getProjectEnvContentHint8ToJSON(getProjectEnvContentHint8) {
    return JSON.stringify(GetProjectEnvContentHint8$outboundSchema.parse(getProjectEnvContentHint8));
}
export function getProjectEnvContentHint8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint8' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint7$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint7$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint7$;
(function (GetProjectEnvContentHint7$) {
    /** @deprecated use `GetProjectEnvContentHint7$inboundSchema` instead. */
    GetProjectEnvContentHint7$.inboundSchema = GetProjectEnvContentHint7$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint7$outboundSchema` instead. */
    GetProjectEnvContentHint7$.outboundSchema = GetProjectEnvContentHint7$outboundSchema;
})(GetProjectEnvContentHint7$ || (GetProjectEnvContentHint7$ = {}));
export function getProjectEnvContentHint7ToJSON(getProjectEnvContentHint7) {
    return JSON.stringify(GetProjectEnvContentHint7$outboundSchema.parse(getProjectEnvContentHint7));
}
export function getProjectEnvContentHint7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint7' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ = {}));
/** @internal */
export const GetProjectEnvContentHint6$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint6$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint6$;
(function (GetProjectEnvContentHint6$) {
    /** @deprecated use `GetProjectEnvContentHint6$inboundSchema` instead. */
    GetProjectEnvContentHint6$.inboundSchema = GetProjectEnvContentHint6$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint6$outboundSchema` instead. */
    GetProjectEnvContentHint6$.outboundSchema = GetProjectEnvContentHint6$outboundSchema;
})(GetProjectEnvContentHint6$ || (GetProjectEnvContentHint6$ = {}));
export function getProjectEnvContentHint6ToJSON(getProjectEnvContentHint6) {
    return JSON.stringify(GetProjectEnvContentHint6$outboundSchema.parse(getProjectEnvContentHint6));
}
export function getProjectEnvContentHint6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint6' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONType);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$;
(function (GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$.inboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$.outboundSchema = GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$ || (GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const GetProjectEnvContentHint5$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint5$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint5$;
(function (GetProjectEnvContentHint5$) {
    /** @deprecated use `GetProjectEnvContentHint5$inboundSchema` instead. */
    GetProjectEnvContentHint5$.inboundSchema = GetProjectEnvContentHint5$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint5$outboundSchema` instead. */
    GetProjectEnvContentHint5$.outboundSchema = GetProjectEnvContentHint5$outboundSchema;
})(GetProjectEnvContentHint5$ || (GetProjectEnvContentHint5$ = {}));
export function getProjectEnvContentHint5ToJSON(getProjectEnvContentHint5) {
    return JSON.stringify(GetProjectEnvContentHint5$outboundSchema.parse(getProjectEnvContentHint5));
}
export function getProjectEnvContentHint5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint5' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200Type$inboundSchema = z
    .nativeEnum(GetProjectEnvContentHintProjectsResponse200Type);
/** @internal */
export const GetProjectEnvContentHintProjectsResponse200Type$outboundSchema = GetProjectEnvContentHintProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponse200Type$;
(function (GetProjectEnvContentHintProjectsResponse200Type$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200Type$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200Type$.inboundSchema = GetProjectEnvContentHintProjectsResponse200Type$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponse200Type$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponse200Type$.outboundSchema = GetProjectEnvContentHintProjectsResponse200Type$outboundSchema;
})(GetProjectEnvContentHintProjectsResponse200Type$ || (GetProjectEnvContentHintProjectsResponse200Type$ = {}));
/** @internal */
export const GetProjectEnvContentHint4$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint4$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponse200Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint4$;
(function (GetProjectEnvContentHint4$) {
    /** @deprecated use `GetProjectEnvContentHint4$inboundSchema` instead. */
    GetProjectEnvContentHint4$.inboundSchema = GetProjectEnvContentHint4$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint4$outboundSchema` instead. */
    GetProjectEnvContentHint4$.outboundSchema = GetProjectEnvContentHint4$outboundSchema;
})(GetProjectEnvContentHint4$ || (GetProjectEnvContentHint4$ = {}));
export function getProjectEnvContentHint4ToJSON(getProjectEnvContentHint4) {
    return JSON.stringify(GetProjectEnvContentHint4$outboundSchema.parse(getProjectEnvContentHint4));
}
export function getProjectEnvContentHint4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint4' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsResponseType$inboundSchema = z
    .nativeEnum(GetProjectEnvContentHintProjectsResponseType);
/** @internal */
export const GetProjectEnvContentHintProjectsResponseType$outboundSchema = GetProjectEnvContentHintProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsResponseType$;
(function (GetProjectEnvContentHintProjectsResponseType$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponseType$.inboundSchema = GetProjectEnvContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsResponseType$.outboundSchema = GetProjectEnvContentHintProjectsResponseType$outboundSchema;
})(GetProjectEnvContentHintProjectsResponseType$ || (GetProjectEnvContentHintProjectsResponseType$ = {}));
/** @internal */
export const GetProjectEnvContentHint3$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint3$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint3$;
(function (GetProjectEnvContentHint3$) {
    /** @deprecated use `GetProjectEnvContentHint3$inboundSchema` instead. */
    GetProjectEnvContentHint3$.inboundSchema = GetProjectEnvContentHint3$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint3$outboundSchema` instead. */
    GetProjectEnvContentHint3$.outboundSchema = GetProjectEnvContentHint3$outboundSchema;
})(GetProjectEnvContentHint3$ || (GetProjectEnvContentHint3$ = {}));
export function getProjectEnvContentHint3ToJSON(getProjectEnvContentHint3) {
    return JSON.stringify(GetProjectEnvContentHint3$outboundSchema.parse(getProjectEnvContentHint3));
}
export function getProjectEnvContentHint3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint3' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintProjectsType$inboundSchema = z.nativeEnum(GetProjectEnvContentHintProjectsType);
/** @internal */
export const GetProjectEnvContentHintProjectsType$outboundSchema = GetProjectEnvContentHintProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintProjectsType$;
(function (GetProjectEnvContentHintProjectsType$) {
    /** @deprecated use `GetProjectEnvContentHintProjectsType$inboundSchema` instead. */
    GetProjectEnvContentHintProjectsType$.inboundSchema = GetProjectEnvContentHintProjectsType$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintProjectsType$outboundSchema` instead. */
    GetProjectEnvContentHintProjectsType$.outboundSchema = GetProjectEnvContentHintProjectsType$outboundSchema;
})(GetProjectEnvContentHintProjectsType$ || (GetProjectEnvContentHintProjectsType$ = {}));
/** @internal */
export const GetProjectEnvContentHint2$inboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint2$outboundSchema = z.object({
    type: GetProjectEnvContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint2$;
(function (GetProjectEnvContentHint2$) {
    /** @deprecated use `GetProjectEnvContentHint2$inboundSchema` instead. */
    GetProjectEnvContentHint2$.inboundSchema = GetProjectEnvContentHint2$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint2$outboundSchema` instead. */
    GetProjectEnvContentHint2$.outboundSchema = GetProjectEnvContentHint2$outboundSchema;
})(GetProjectEnvContentHint2$ || (GetProjectEnvContentHint2$ = {}));
export function getProjectEnvContentHint2ToJSON(getProjectEnvContentHint2) {
    return JSON.stringify(GetProjectEnvContentHint2$outboundSchema.parse(getProjectEnvContentHint2));
}
export function getProjectEnvContentHint2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint2' from JSON`);
}
/** @internal */
export const GetProjectEnvContentHintType$inboundSchema = z.nativeEnum(GetProjectEnvContentHintType);
/** @internal */
export const GetProjectEnvContentHintType$outboundSchema = GetProjectEnvContentHintType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHintType$;
(function (GetProjectEnvContentHintType$) {
    /** @deprecated use `GetProjectEnvContentHintType$inboundSchema` instead. */
    GetProjectEnvContentHintType$.inboundSchema = GetProjectEnvContentHintType$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHintType$outboundSchema` instead. */
    GetProjectEnvContentHintType$.outboundSchema = GetProjectEnvContentHintType$outboundSchema;
})(GetProjectEnvContentHintType$ || (GetProjectEnvContentHintType$ = {}));
/** @internal */
export const GetProjectEnvContentHint1$inboundSchema = z.object({
    type: GetProjectEnvContentHintType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const GetProjectEnvContentHint1$outboundSchema = z.object({
    type: GetProjectEnvContentHintType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvContentHint1$;
(function (GetProjectEnvContentHint1$) {
    /** @deprecated use `GetProjectEnvContentHint1$inboundSchema` instead. */
    GetProjectEnvContentHint1$.inboundSchema = GetProjectEnvContentHint1$inboundSchema;
    /** @deprecated use `GetProjectEnvContentHint1$outboundSchema` instead. */
    GetProjectEnvContentHint1$.outboundSchema = GetProjectEnvContentHint1$outboundSchema;
})(GetProjectEnvContentHint1$ || (GetProjectEnvContentHint1$ = {}));
export function getProjectEnvContentHint1ToJSON(getProjectEnvContentHint1) {
    return JSON.stringify(GetProjectEnvContentHint1$outboundSchema.parse(getProjectEnvContentHint1));
}
export function getProjectEnvContentHint1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvContentHint1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvContentHint1' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyContentHint$inboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHint15$inboundSchema),
]);
/** @internal */
export const GetProjectEnvResponseBodyContentHint$outboundSchema = z.union([
    z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHint15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyContentHint$;
(function (GetProjectEnvResponseBodyContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyContentHint$.inboundSchema = GetProjectEnvResponseBodyContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyContentHint$.outboundSchema = GetProjectEnvResponseBodyContentHint$outboundSchema;
})(GetProjectEnvResponseBodyContentHint$ || (GetProjectEnvResponseBodyContentHint$ = {}));
export function getProjectEnvResponseBodyContentHintToJSON(getProjectEnvResponseBodyContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyContentHint$outboundSchema.parse(getProjectEnvResponseBodyContentHint));
}
export function getProjectEnvResponseBodyContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType);
/** @internal */
export const GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$;
(function (GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$.inboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$.outboundSchema = GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema;
})(GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$ || (GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$inboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$outboundSchema = z.object({
    type: GetProjectEnvResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBodyInternalContentHint$;
(function (GetProjectEnvResponseBodyInternalContentHint$) {
    /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
    GetProjectEnvResponseBodyInternalContentHint$.inboundSchema = GetProjectEnvResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
    GetProjectEnvResponseBodyInternalContentHint$.outboundSchema = GetProjectEnvResponseBodyInternalContentHint$outboundSchema;
})(GetProjectEnvResponseBodyInternalContentHint$ || (GetProjectEnvResponseBodyInternalContentHint$ = {}));
export function getProjectEnvResponseBodyInternalContentHintToJSON(getProjectEnvResponseBodyInternalContentHint) {
    return JSON.stringify(GetProjectEnvResponseBodyInternalContentHint$outboundSchema.parse(getProjectEnvResponseBodyInternalContentHint));
}
export function getProjectEnvResponseBodyInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBodyInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBodyInternalContentHint' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBody1$inboundSchema = z.object({
    decrypted: z.boolean(),
    target: z.union([
        z.array(GetProjectEnvTarget1$inboundSchema),
        GetProjectEnvTarget2$inboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
        z.lazy(() => GetProjectEnvContentHint15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const GetProjectEnvResponseBody1$outboundSchema = z.object({
    decrypted: z.boolean(),
    target: z.union([
        z.array(GetProjectEnvTarget1$outboundSchema),
        GetProjectEnvTarget2$outboundSchema,
    ]).optional(),
    type: GetProjectEnvResponseBodyType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
        z.lazy(() => GetProjectEnvContentHint15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBody1$;
(function (GetProjectEnvResponseBody1$) {
    /** @deprecated use `GetProjectEnvResponseBody1$inboundSchema` instead. */
    GetProjectEnvResponseBody1$.inboundSchema = GetProjectEnvResponseBody1$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBody1$outboundSchema` instead. */
    GetProjectEnvResponseBody1$.outboundSchema = GetProjectEnvResponseBody1$outboundSchema;
})(GetProjectEnvResponseBody1$ || (GetProjectEnvResponseBody1$ = {}));
export function getProjectEnvResponseBody1ToJSON(getProjectEnvResponseBody1) {
    return JSON.stringify(GetProjectEnvResponseBody1$outboundSchema.parse(getProjectEnvResponseBody1));
}
export function getProjectEnvResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBody1' from JSON`);
}
/** @internal */
export const GetProjectEnvResponseBody$inboundSchema = z.union([
    z.lazy(() => GetProjectEnvResponseBody1$inboundSchema),
    z.lazy(() => GetProjectEnvResponseBody2$inboundSchema),
    z.lazy(() => GetProjectEnvResponseBody3$inboundSchema),
]);
/** @internal */
export const GetProjectEnvResponseBody$outboundSchema = z.union([
    z.lazy(() => GetProjectEnvResponseBody1$outboundSchema),
    z.lazy(() => GetProjectEnvResponseBody2$outboundSchema),
    z.lazy(() => GetProjectEnvResponseBody3$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectEnvResponseBody$;
(function (GetProjectEnvResponseBody$) {
    /** @deprecated use `GetProjectEnvResponseBody$inboundSchema` instead. */
    GetProjectEnvResponseBody$.inboundSchema = GetProjectEnvResponseBody$inboundSchema;
    /** @deprecated use `GetProjectEnvResponseBody$outboundSchema` instead. */
    GetProjectEnvResponseBody$.outboundSchema = GetProjectEnvResponseBody$outboundSchema;
})(GetProjectEnvResponseBody$ || (GetProjectEnvResponseBody$ = {}));
export function getProjectEnvResponseBodyToJSON(getProjectEnvResponseBody) {
    return JSON.stringify(GetProjectEnvResponseBody$outboundSchema.parse(getProjectEnvResponseBody));
}
export function getProjectEnvResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectEnvResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectEnvResponseBody' from JSON`);
}
//# sourceMappingURL=getprojectenvop.js.map