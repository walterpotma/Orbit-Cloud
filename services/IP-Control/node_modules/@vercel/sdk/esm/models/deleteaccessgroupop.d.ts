import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type DeleteAccessGroupRequest = {
    idOrName: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/** @internal */
export declare const DeleteAccessGroupRequest$inboundSchema: z.ZodType<DeleteAccessGroupRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteAccessGroupRequest$Outbound = {
    idOrName: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const DeleteAccessGroupRequest$outboundSchema: z.ZodType<DeleteAccessGroupRequest$Outbound, z.ZodTypeDef, DeleteAccessGroupRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteAccessGroupRequest$ {
    /** @deprecated use `DeleteAccessGroupRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteAccessGroupRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteAccessGroupRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteAccessGroupRequest$Outbound, z.ZodTypeDef, DeleteAccessGroupRequest>;
    /** @deprecated use `DeleteAccessGroupRequest$Outbound` instead. */
    type Outbound = DeleteAccessGroupRequest$Outbound;
}
export declare function deleteAccessGroupRequestToJSON(deleteAccessGroupRequest: DeleteAccessGroupRequest): string;
export declare function deleteAccessGroupRequestFromJSON(jsonString: string): SafeParseResult<DeleteAccessGroupRequest, SDKValidationError>;
//# sourceMappingURL=deleteaccessgroupop.d.ts.map