import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type ListAccessGroupProjectsRequest = {
    /**
     * The ID or name of the Access Group.
     */
    idOrName: string;
    /**
     * Limit how many access group projects should be returned.
     */
    limit?: number | undefined;
    /**
     * Continuation cursor to retrieve the next page of results.
     */
    next?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const ListAccessGroupProjectsRole: {
    readonly Admin: "ADMIN";
    readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    readonly ProjectViewer: "PROJECT_VIEWER";
};
export type ListAccessGroupProjectsRole = ClosedEnum<typeof ListAccessGroupProjectsRole>;
export type ListAccessGroupProjectsProject = {
    name?: string | undefined;
    framework?: string | null | undefined;
    latestDeploymentId?: string | undefined;
};
export type ListAccessGroupProjectsProjects = {
    projectId: string;
    role: ListAccessGroupProjectsRole;
    createdAt: string;
    updatedAt: string;
    project: ListAccessGroupProjectsProject;
};
export type ListAccessGroupProjectsPagination = {
    count: number;
    next: string | null;
};
export type ListAccessGroupProjectsResponseBody = {
    projects: Array<ListAccessGroupProjectsProjects>;
    pagination: ListAccessGroupProjectsPagination;
};
/** @internal */
export declare const ListAccessGroupProjectsRequest$inboundSchema: z.ZodType<ListAccessGroupProjectsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupProjectsRequest$Outbound = {
    idOrName: string;
    limit?: number | undefined;
    next?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const ListAccessGroupProjectsRequest$outboundSchema: z.ZodType<ListAccessGroupProjectsRequest$Outbound, z.ZodTypeDef, ListAccessGroupProjectsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsRequest$ {
    /** @deprecated use `ListAccessGroupProjectsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupProjectsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupProjectsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupProjectsRequest$Outbound, z.ZodTypeDef, ListAccessGroupProjectsRequest>;
    /** @deprecated use `ListAccessGroupProjectsRequest$Outbound` instead. */
    type Outbound = ListAccessGroupProjectsRequest$Outbound;
}
export declare function listAccessGroupProjectsRequestToJSON(listAccessGroupProjectsRequest: ListAccessGroupProjectsRequest): string;
export declare function listAccessGroupProjectsRequestFromJSON(jsonString: string): SafeParseResult<ListAccessGroupProjectsRequest, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupProjectsRole$inboundSchema: z.ZodNativeEnum<typeof ListAccessGroupProjectsRole>;
/** @internal */
export declare const ListAccessGroupProjectsRole$outboundSchema: z.ZodNativeEnum<typeof ListAccessGroupProjectsRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsRole$ {
    /** @deprecated use `ListAccessGroupProjectsRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
        readonly ProjectViewer: "PROJECT_VIEWER";
    }>;
    /** @deprecated use `ListAccessGroupProjectsRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
        readonly ProjectViewer: "PROJECT_VIEWER";
    }>;
}
/** @internal */
export declare const ListAccessGroupProjectsProject$inboundSchema: z.ZodType<ListAccessGroupProjectsProject, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupProjectsProject$Outbound = {
    name?: string | undefined;
    framework?: string | null | undefined;
    latestDeploymentId?: string | undefined;
};
/** @internal */
export declare const ListAccessGroupProjectsProject$outboundSchema: z.ZodType<ListAccessGroupProjectsProject$Outbound, z.ZodTypeDef, ListAccessGroupProjectsProject>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsProject$ {
    /** @deprecated use `ListAccessGroupProjectsProject$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupProjectsProject, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupProjectsProject$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupProjectsProject$Outbound, z.ZodTypeDef, ListAccessGroupProjectsProject>;
    /** @deprecated use `ListAccessGroupProjectsProject$Outbound` instead. */
    type Outbound = ListAccessGroupProjectsProject$Outbound;
}
export declare function listAccessGroupProjectsProjectToJSON(listAccessGroupProjectsProject: ListAccessGroupProjectsProject): string;
export declare function listAccessGroupProjectsProjectFromJSON(jsonString: string): SafeParseResult<ListAccessGroupProjectsProject, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupProjectsProjects$inboundSchema: z.ZodType<ListAccessGroupProjectsProjects, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupProjectsProjects$Outbound = {
    projectId: string;
    role: string;
    createdAt: string;
    updatedAt: string;
    project: ListAccessGroupProjectsProject$Outbound;
};
/** @internal */
export declare const ListAccessGroupProjectsProjects$outboundSchema: z.ZodType<ListAccessGroupProjectsProjects$Outbound, z.ZodTypeDef, ListAccessGroupProjectsProjects>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsProjects$ {
    /** @deprecated use `ListAccessGroupProjectsProjects$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupProjectsProjects, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupProjectsProjects$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupProjectsProjects$Outbound, z.ZodTypeDef, ListAccessGroupProjectsProjects>;
    /** @deprecated use `ListAccessGroupProjectsProjects$Outbound` instead. */
    type Outbound = ListAccessGroupProjectsProjects$Outbound;
}
export declare function listAccessGroupProjectsProjectsToJSON(listAccessGroupProjectsProjects: ListAccessGroupProjectsProjects): string;
export declare function listAccessGroupProjectsProjectsFromJSON(jsonString: string): SafeParseResult<ListAccessGroupProjectsProjects, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupProjectsPagination$inboundSchema: z.ZodType<ListAccessGroupProjectsPagination, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupProjectsPagination$Outbound = {
    count: number;
    next: string | null;
};
/** @internal */
export declare const ListAccessGroupProjectsPagination$outboundSchema: z.ZodType<ListAccessGroupProjectsPagination$Outbound, z.ZodTypeDef, ListAccessGroupProjectsPagination>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsPagination$ {
    /** @deprecated use `ListAccessGroupProjectsPagination$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupProjectsPagination, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupProjectsPagination$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupProjectsPagination$Outbound, z.ZodTypeDef, ListAccessGroupProjectsPagination>;
    /** @deprecated use `ListAccessGroupProjectsPagination$Outbound` instead. */
    type Outbound = ListAccessGroupProjectsPagination$Outbound;
}
export declare function listAccessGroupProjectsPaginationToJSON(listAccessGroupProjectsPagination: ListAccessGroupProjectsPagination): string;
export declare function listAccessGroupProjectsPaginationFromJSON(jsonString: string): SafeParseResult<ListAccessGroupProjectsPagination, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupProjectsResponseBody$inboundSchema: z.ZodType<ListAccessGroupProjectsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupProjectsResponseBody$Outbound = {
    projects: Array<ListAccessGroupProjectsProjects$Outbound>;
    pagination: ListAccessGroupProjectsPagination$Outbound;
};
/** @internal */
export declare const ListAccessGroupProjectsResponseBody$outboundSchema: z.ZodType<ListAccessGroupProjectsResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupProjectsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupProjectsResponseBody$ {
    /** @deprecated use `ListAccessGroupProjectsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupProjectsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupProjectsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupProjectsResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupProjectsResponseBody>;
    /** @deprecated use `ListAccessGroupProjectsResponseBody$Outbound` instead. */
    type Outbound = ListAccessGroupProjectsResponseBody$Outbound;
}
export declare function listAccessGroupProjectsResponseBodyToJSON(listAccessGroupProjectsResponseBody: ListAccessGroupProjectsResponseBody): string;
export declare function listAccessGroupProjectsResponseBodyFromJSON(jsonString: string): SafeParseResult<ListAccessGroupProjectsResponseBody, SDKValidationError>;
//# sourceMappingURL=listaccessgroupprojectsop.d.ts.map