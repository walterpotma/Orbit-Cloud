/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { AuthToken$inboundSchema, AuthToken$outboundSchema, } from "./authtoken.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListAuthTokensResponseBody$inboundSchema = z.object({
    tokens: z.array(AuthToken$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListAuthTokensResponseBody$outboundSchema = z.object({
    tokens: z.array(AuthToken$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAuthTokensResponseBody$;
(function (ListAuthTokensResponseBody$) {
    /** @deprecated use `ListAuthTokensResponseBody$inboundSchema` instead. */
    ListAuthTokensResponseBody$.inboundSchema = ListAuthTokensResponseBody$inboundSchema;
    /** @deprecated use `ListAuthTokensResponseBody$outboundSchema` instead. */
    ListAuthTokensResponseBody$.outboundSchema = ListAuthTokensResponseBody$outboundSchema;
})(ListAuthTokensResponseBody$ || (ListAuthTokensResponseBody$ = {}));
export function listAuthTokensResponseBodyToJSON(listAuthTokensResponseBody) {
    return JSON.stringify(ListAuthTokensResponseBody$outboundSchema.parse(listAuthTokensResponseBody));
}
export function listAuthTokensResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAuthTokensResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAuthTokensResponseBody' from JSON`);
}
//# sourceMappingURL=listauthtokensop.js.map