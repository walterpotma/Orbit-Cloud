/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/**
 * "The `ADMIN` role, by default, is provided to users capable of installing integrations, while the `USER` role can be granted to Vercel users with the Vercel `Billing` or Vercel `Viewer` role, which are considered to be Read-Only roles."
 */
export const GetMemberRole = {
    Admin: "ADMIN",
    User: "USER",
};
/** @internal */
export const GetMemberRequest$inboundSchema = z.object({
    integrationConfigurationId: z.string(),
    memberId: z.string(),
});
/** @internal */
export const GetMemberRequest$outboundSchema = z.object({
    integrationConfigurationId: z.string(),
    memberId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetMemberRequest$;
(function (GetMemberRequest$) {
    /** @deprecated use `GetMemberRequest$inboundSchema` instead. */
    GetMemberRequest$.inboundSchema = GetMemberRequest$inboundSchema;
    /** @deprecated use `GetMemberRequest$outboundSchema` instead. */
    GetMemberRequest$.outboundSchema = GetMemberRequest$outboundSchema;
})(GetMemberRequest$ || (GetMemberRequest$ = {}));
export function getMemberRequestToJSON(getMemberRequest) {
    return JSON.stringify(GetMemberRequest$outboundSchema.parse(getMemberRequest));
}
export function getMemberRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetMemberRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetMemberRequest' from JSON`);
}
/** @internal */
export const GetMemberRole$inboundSchema = z.nativeEnum(GetMemberRole);
/** @internal */
export const GetMemberRole$outboundSchema = GetMemberRole$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetMemberRole$;
(function (GetMemberRole$) {
    /** @deprecated use `GetMemberRole$inboundSchema` instead. */
    GetMemberRole$.inboundSchema = GetMemberRole$inboundSchema;
    /** @deprecated use `GetMemberRole$outboundSchema` instead. */
    GetMemberRole$.outboundSchema = GetMemberRole$outboundSchema;
})(GetMemberRole$ || (GetMemberRole$ = {}));
/** @internal */
export const GetMemberResponseBody$inboundSchema = z.object({
    id: z.string(),
    role: GetMemberRole$inboundSchema,
});
/** @internal */
export const GetMemberResponseBody$outboundSchema = z.object({
    id: z.string(),
    role: GetMemberRole$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetMemberResponseBody$;
(function (GetMemberResponseBody$) {
    /** @deprecated use `GetMemberResponseBody$inboundSchema` instead. */
    GetMemberResponseBody$.inboundSchema = GetMemberResponseBody$inboundSchema;
    /** @deprecated use `GetMemberResponseBody$outboundSchema` instead. */
    GetMemberResponseBody$.outboundSchema = GetMemberResponseBody$outboundSchema;
})(GetMemberResponseBody$ || (GetMemberResponseBody$ = {}));
export function getMemberResponseBodyToJSON(getMemberResponseBody) {
    return JSON.stringify(GetMemberResponseBody$outboundSchema.parse(getMemberResponseBody));
}
export function getMemberResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetMemberResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetMemberResponseBody' from JSON`);
}
//# sourceMappingURL=getmemberop.js.map