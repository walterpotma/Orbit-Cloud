import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type UpdateEdgeConfigRequestBody = {
    slug: string;
};
export type UpdateEdgeConfigRequest = {
    edgeConfigId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: UpdateEdgeConfigRequestBody;
};
/**
 * Keeps track of the current state of the Edge Config while it gets transferred.
 */
export type UpdateEdgeConfigTransfer = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
export type UpdateEdgeConfigSchema = {};
export declare const UpdateEdgeConfigPurposeEdgeConfigType: {
    readonly Experimentation: "experimentation";
};
export type UpdateEdgeConfigPurposeEdgeConfigType = ClosedEnum<typeof UpdateEdgeConfigPurposeEdgeConfigType>;
export type UpdateEdgeConfigPurpose2 = {
    type: UpdateEdgeConfigPurposeEdgeConfigType;
    resourceId: string;
};
export declare const UpdateEdgeConfigPurposeType: {
    readonly Flags: "flags";
};
export type UpdateEdgeConfigPurposeType = ClosedEnum<typeof UpdateEdgeConfigPurposeType>;
export type UpdateEdgeConfigPurpose1 = {
    type: UpdateEdgeConfigPurposeType;
    projectId: string;
};
export type UpdateEdgeConfigPurpose = UpdateEdgeConfigPurpose1 | UpdateEdgeConfigPurpose2;
/**
 * An Edge Config
 */
export type UpdateEdgeConfigResponseBody = {
    createdAt: number;
    updatedAt: number;
    deletedAt?: number | undefined;
    id: string;
    /**
     * Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
     */
    slug: string;
    ownerId: string;
    digest: string;
    /**
     * Keeps track of the current state of the Edge Config while it gets transferred.
     */
    transfer?: UpdateEdgeConfigTransfer | undefined;
    schema?: UpdateEdgeConfigSchema | undefined;
    purpose?: UpdateEdgeConfigPurpose1 | UpdateEdgeConfigPurpose2 | undefined;
    /**
     * Timestamp of when the Edge Config was synced to DynamoDB initially. It is only set when syncing the entire Edge Config, not when updating.
     */
    syncedToDynamoAt?: number | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const UpdateEdgeConfigRequestBody$inboundSchema: z.ZodType<UpdateEdgeConfigRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigRequestBody$Outbound = {
    slug: string;
};
/** @internal */
export declare const UpdateEdgeConfigRequestBody$outboundSchema: z.ZodType<UpdateEdgeConfigRequestBody$Outbound, z.ZodTypeDef, UpdateEdgeConfigRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigRequestBody$ {
    /** @deprecated use `UpdateEdgeConfigRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigRequestBody$Outbound, z.ZodTypeDef, UpdateEdgeConfigRequestBody>;
    /** @deprecated use `UpdateEdgeConfigRequestBody$Outbound` instead. */
    type Outbound = UpdateEdgeConfigRequestBody$Outbound;
}
export declare function updateEdgeConfigRequestBodyToJSON(updateEdgeConfigRequestBody: UpdateEdgeConfigRequestBody): string;
export declare function updateEdgeConfigRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigRequest$inboundSchema: z.ZodType<UpdateEdgeConfigRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigRequest$Outbound = {
    edgeConfigId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: UpdateEdgeConfigRequestBody$Outbound;
};
/** @internal */
export declare const UpdateEdgeConfigRequest$outboundSchema: z.ZodType<UpdateEdgeConfigRequest$Outbound, z.ZodTypeDef, UpdateEdgeConfigRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigRequest$ {
    /** @deprecated use `UpdateEdgeConfigRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigRequest$Outbound, z.ZodTypeDef, UpdateEdgeConfigRequest>;
    /** @deprecated use `UpdateEdgeConfigRequest$Outbound` instead. */
    type Outbound = UpdateEdgeConfigRequest$Outbound;
}
export declare function updateEdgeConfigRequestToJSON(updateEdgeConfigRequest: UpdateEdgeConfigRequest): string;
export declare function updateEdgeConfigRequestFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigRequest, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigTransfer$inboundSchema: z.ZodType<UpdateEdgeConfigTransfer, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigTransfer$Outbound = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
/** @internal */
export declare const UpdateEdgeConfigTransfer$outboundSchema: z.ZodType<UpdateEdgeConfigTransfer$Outbound, z.ZodTypeDef, UpdateEdgeConfigTransfer>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigTransfer$ {
    /** @deprecated use `UpdateEdgeConfigTransfer$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigTransfer, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigTransfer$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigTransfer$Outbound, z.ZodTypeDef, UpdateEdgeConfigTransfer>;
    /** @deprecated use `UpdateEdgeConfigTransfer$Outbound` instead. */
    type Outbound = UpdateEdgeConfigTransfer$Outbound;
}
export declare function updateEdgeConfigTransferToJSON(updateEdgeConfigTransfer: UpdateEdgeConfigTransfer): string;
export declare function updateEdgeConfigTransferFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigTransfer, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigSchema$inboundSchema: z.ZodType<UpdateEdgeConfigSchema, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigSchema$Outbound = {};
/** @internal */
export declare const UpdateEdgeConfigSchema$outboundSchema: z.ZodType<UpdateEdgeConfigSchema$Outbound, z.ZodTypeDef, UpdateEdgeConfigSchema>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigSchema$ {
    /** @deprecated use `UpdateEdgeConfigSchema$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigSchema, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigSchema$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigSchema$Outbound, z.ZodTypeDef, UpdateEdgeConfigSchema>;
    /** @deprecated use `UpdateEdgeConfigSchema$Outbound` instead. */
    type Outbound = UpdateEdgeConfigSchema$Outbound;
}
export declare function updateEdgeConfigSchemaToJSON(updateEdgeConfigSchema: UpdateEdgeConfigSchema): string;
export declare function updateEdgeConfigSchemaFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigSchema, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigPurposeEdgeConfigType$inboundSchema: z.ZodNativeEnum<typeof UpdateEdgeConfigPurposeEdgeConfigType>;
/** @internal */
export declare const UpdateEdgeConfigPurposeEdgeConfigType$outboundSchema: z.ZodNativeEnum<typeof UpdateEdgeConfigPurposeEdgeConfigType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigPurposeEdgeConfigType$ {
    /** @deprecated use `UpdateEdgeConfigPurposeEdgeConfigType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Experimentation: "experimentation";
    }>;
    /** @deprecated use `UpdateEdgeConfigPurposeEdgeConfigType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Experimentation: "experimentation";
    }>;
}
/** @internal */
export declare const UpdateEdgeConfigPurpose2$inboundSchema: z.ZodType<UpdateEdgeConfigPurpose2, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigPurpose2$Outbound = {
    type: string;
    resourceId: string;
};
/** @internal */
export declare const UpdateEdgeConfigPurpose2$outboundSchema: z.ZodType<UpdateEdgeConfigPurpose2$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigPurpose2$ {
    /** @deprecated use `UpdateEdgeConfigPurpose2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigPurpose2, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigPurpose2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigPurpose2$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose2>;
    /** @deprecated use `UpdateEdgeConfigPurpose2$Outbound` instead. */
    type Outbound = UpdateEdgeConfigPurpose2$Outbound;
}
export declare function updateEdgeConfigPurpose2ToJSON(updateEdgeConfigPurpose2: UpdateEdgeConfigPurpose2): string;
export declare function updateEdgeConfigPurpose2FromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigPurpose2, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigPurposeType$inboundSchema: z.ZodNativeEnum<typeof UpdateEdgeConfigPurposeType>;
/** @internal */
export declare const UpdateEdgeConfigPurposeType$outboundSchema: z.ZodNativeEnum<typeof UpdateEdgeConfigPurposeType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigPurposeType$ {
    /** @deprecated use `UpdateEdgeConfigPurposeType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
    /** @deprecated use `UpdateEdgeConfigPurposeType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
}
/** @internal */
export declare const UpdateEdgeConfigPurpose1$inboundSchema: z.ZodType<UpdateEdgeConfigPurpose1, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigPurpose1$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const UpdateEdgeConfigPurpose1$outboundSchema: z.ZodType<UpdateEdgeConfigPurpose1$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigPurpose1$ {
    /** @deprecated use `UpdateEdgeConfigPurpose1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigPurpose1, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigPurpose1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigPurpose1$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose1>;
    /** @deprecated use `UpdateEdgeConfigPurpose1$Outbound` instead. */
    type Outbound = UpdateEdgeConfigPurpose1$Outbound;
}
export declare function updateEdgeConfigPurpose1ToJSON(updateEdgeConfigPurpose1: UpdateEdgeConfigPurpose1): string;
export declare function updateEdgeConfigPurpose1FromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigPurpose1, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigPurpose$inboundSchema: z.ZodType<UpdateEdgeConfigPurpose, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigPurpose$Outbound = UpdateEdgeConfigPurpose1$Outbound | UpdateEdgeConfigPurpose2$Outbound;
/** @internal */
export declare const UpdateEdgeConfigPurpose$outboundSchema: z.ZodType<UpdateEdgeConfigPurpose$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigPurpose$ {
    /** @deprecated use `UpdateEdgeConfigPurpose$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigPurpose, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigPurpose$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigPurpose$Outbound, z.ZodTypeDef, UpdateEdgeConfigPurpose>;
    /** @deprecated use `UpdateEdgeConfigPurpose$Outbound` instead. */
    type Outbound = UpdateEdgeConfigPurpose$Outbound;
}
export declare function updateEdgeConfigPurposeToJSON(updateEdgeConfigPurpose: UpdateEdgeConfigPurpose): string;
export declare function updateEdgeConfigPurposeFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigPurpose, SDKValidationError>;
/** @internal */
export declare const UpdateEdgeConfigResponseBody$inboundSchema: z.ZodType<UpdateEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateEdgeConfigResponseBody$Outbound = {
    createdAt: number;
    updatedAt: number;
    deletedAt?: number | undefined;
    id: string;
    slug: string;
    ownerId: string;
    digest: string;
    transfer?: UpdateEdgeConfigTransfer$Outbound | undefined;
    schema?: UpdateEdgeConfigSchema$Outbound | undefined;
    purpose?: UpdateEdgeConfigPurpose1$Outbound | UpdateEdgeConfigPurpose2$Outbound | undefined;
    syncedToDynamoAt?: number | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const UpdateEdgeConfigResponseBody$outboundSchema: z.ZodType<UpdateEdgeConfigResponseBody$Outbound, z.ZodTypeDef, UpdateEdgeConfigResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateEdgeConfigResponseBody$ {
    /** @deprecated use `UpdateEdgeConfigResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateEdgeConfigResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateEdgeConfigResponseBody$Outbound, z.ZodTypeDef, UpdateEdgeConfigResponseBody>;
    /** @deprecated use `UpdateEdgeConfigResponseBody$Outbound` instead. */
    type Outbound = UpdateEdgeConfigResponseBody$Outbound;
}
export declare function updateEdgeConfigResponseBodyToJSON(updateEdgeConfigResponseBody: UpdateEdgeConfigResponseBody): string;
export declare function updateEdgeConfigResponseBodyFromJSON(jsonString: string): SafeParseResult<UpdateEdgeConfigResponseBody, SDKValidationError>;
//# sourceMappingURL=updateedgeconfigop.d.ts.map