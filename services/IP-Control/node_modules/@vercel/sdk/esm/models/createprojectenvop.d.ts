import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The type of environment variable
 */
export declare const CreateProjectEnv2Type: {
    readonly System: "system";
    readonly Secret: "secret";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
};
/**
 * The type of environment variable
 */
export type CreateProjectEnv2Type = ClosedEnum<typeof CreateProjectEnv2Type>;
export declare const CreateProjectEnv2Target: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnv2Target = ClosedEnum<typeof CreateProjectEnv2Target>;
export type Two2 = {
    /**
     * The name of the environment variable
     */
    key: string;
    /**
     * The value of the environment variable
     */
    value: string;
    /**
     * The type of environment variable
     */
    type: CreateProjectEnv2Type;
    /**
     * The target environment of the environment variable
     */
    target?: Array<CreateProjectEnv2Target> | undefined;
    /**
     * If defined, the git branch of the environment variable (must have target=preview)
     */
    gitBranch?: string | null | undefined;
    /**
     * A comment to add context on what this environment variable is for
     */
    comment?: string | undefined;
    /**
     * The custom environment IDs associated with the environment variable
     */
    customEnvironmentIds: Array<string>;
};
/**
 * The type of environment variable
 */
export declare const TwoType: {
    readonly System: "system";
    readonly Secret: "secret";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
};
/**
 * The type of environment variable
 */
export type TwoType = ClosedEnum<typeof TwoType>;
export declare const TwoTarget: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type TwoTarget = ClosedEnum<typeof TwoTarget>;
export type Two1 = {
    /**
     * The name of the environment variable
     */
    key: string;
    /**
     * The value of the environment variable
     */
    value: string;
    /**
     * The type of environment variable
     */
    type: TwoType;
    /**
     * The target environment of the environment variable
     */
    target: Array<TwoTarget>;
    /**
     * If defined, the git branch of the environment variable (must have target=preview)
     */
    gitBranch?: string | null | undefined;
    /**
     * A comment to add context on what this environment variable is for
     */
    comment?: string | undefined;
    /**
     * The custom environment IDs associated with the environment variable
     */
    customEnvironmentIds?: Array<string> | undefined;
};
export type CreateProjectEnvRequestBody2 = Two1 | Two2;
/**
 * The type of environment variable
 */
export declare const CreateProjectEnv1Type: {
    readonly System: "system";
    readonly Secret: "secret";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
};
/**
 * The type of environment variable
 */
export type CreateProjectEnv1Type = ClosedEnum<typeof CreateProjectEnv1Type>;
export declare const CreateProjectEnv1Target: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnv1Target = ClosedEnum<typeof CreateProjectEnv1Target>;
export type CreateProjectEnv12 = {
    /**
     * The name of the environment variable
     */
    key: string;
    /**
     * The value of the environment variable
     */
    value: string;
    /**
     * The type of environment variable
     */
    type: CreateProjectEnv1Type;
    /**
     * The target environment of the environment variable
     */
    target?: Array<CreateProjectEnv1Target> | undefined;
    /**
     * If defined, the git branch of the environment variable (must have target=preview)
     */
    gitBranch?: string | null | undefined;
    /**
     * A comment to add context on what this environment variable is for
     */
    comment?: string | undefined;
    /**
     * The custom environment IDs associated with the environment variable
     */
    customEnvironmentIds: Array<string>;
};
/**
 * The type of environment variable
 */
export declare const OneType: {
    readonly System: "system";
    readonly Secret: "secret";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
};
/**
 * The type of environment variable
 */
export type OneType = ClosedEnum<typeof OneType>;
export declare const OneTarget: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type OneTarget = ClosedEnum<typeof OneTarget>;
export type CreateProjectEnv11 = {
    /**
     * The name of the environment variable
     */
    key: string;
    /**
     * The value of the environment variable
     */
    value: string;
    /**
     * The type of environment variable
     */
    type: OneType;
    /**
     * The target environment of the environment variable
     */
    target: Array<OneTarget>;
    /**
     * If defined, the git branch of the environment variable (must have target=preview)
     */
    gitBranch?: string | null | undefined;
    /**
     * A comment to add context on what this environment variable is for
     */
    comment?: string | undefined;
    /**
     * The custom environment IDs associated with the environment variable
     */
    customEnvironmentIds?: Array<string> | undefined;
};
export type CreateProjectEnvRequestBody1 = CreateProjectEnv11 | CreateProjectEnv12;
export type CreateProjectEnvRequestBody = CreateProjectEnv11 | CreateProjectEnv12 | Array<Two1 | Two2>;
export type CreateProjectEnvRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * Allow override of environment variable if it already exists
     */
    upsert?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateProjectEnv11 | CreateProjectEnv12 | Array<Two1 | Two2>;
};
export declare const CreateProjectEnvTargetProjects2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnvTargetProjects2 = ClosedEnum<typeof CreateProjectEnvTargetProjects2>;
export type CreateProjectEnvCreatedTarget = Array<string> | CreateProjectEnvTargetProjects2;
export declare const CreateProjectEnvCreatedType: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type CreateProjectEnvCreatedType = ClosedEnum<typeof CreateProjectEnvCreatedType>;
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type>;
export type CreateProjectEnvContentHintProjects15 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type;
    projectId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type>;
export type CreateProjectEnvContentHintProjects14 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type>;
export type CreateProjectEnvContentHintProjects13 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type>;
export type CreateProjectEnvContentHintProjects12 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type: {
    readonly PostgresPassword: "postgres-password";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type>;
export type CreateProjectEnvContentHintProjects11 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type: {
    readonly PostgresHost: "postgres-host";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type>;
export type CreateProjectEnvContentHintProjects10 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type: {
    readonly PostgresUser: "postgres-user";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type>;
export type CreateProjectEnvContentHintProjects9 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type>;
export type CreateProjectEnvContentHintProjects8 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type>;
export type CreateProjectEnvContentHintProjects7 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type: {
    readonly PostgresUrl: "postgres-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type>;
export type CreateProjectEnvContentHintProjects6 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type>;
export type CreateProjectEnvContentHintProjects5 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type>;
export type CreateProjectEnvContentHintProjects4 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type>;
export type CreateProjectEnvContentHintProjects3 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type>;
export type CreateProjectEnvContentHintProjects2 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type: {
    readonly RedisUrl: "redis-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type>;
export type CreateProjectEnvContentHintProjects1 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type;
    storeId: string;
};
export type CreateProjectEnvCreatedContentHint = CreateProjectEnvContentHintProjects14 | CreateProjectEnvContentHintProjects1 | CreateProjectEnvContentHintProjects2 | CreateProjectEnvContentHintProjects3 | CreateProjectEnvContentHintProjects4 | CreateProjectEnvContentHintProjects5 | CreateProjectEnvContentHintProjects6 | CreateProjectEnvContentHintProjects7 | CreateProjectEnvContentHintProjects8 | CreateProjectEnvContentHintProjects9 | CreateProjectEnvContentHintProjects10 | CreateProjectEnvContentHintProjects11 | CreateProjectEnvContentHintProjects12 | CreateProjectEnvContentHintProjects13 | CreateProjectEnvContentHintProjects15;
export declare const CreateProjectEnvCreatedProjectsResponseType: {
    readonly FlagsSecret: "flags-secret";
};
export type CreateProjectEnvCreatedProjectsResponseType = ClosedEnum<typeof CreateProjectEnvCreatedProjectsResponseType>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type CreateProjectEnvCreatedInternalContentHint = {
    type: CreateProjectEnvCreatedProjectsResponseType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type Created2 = {
    target?: Array<string> | CreateProjectEnvTargetProjects2 | undefined;
    type: CreateProjectEnvCreatedType;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: CreateProjectEnvContentHintProjects14 | CreateProjectEnvContentHintProjects1 | CreateProjectEnvContentHintProjects2 | CreateProjectEnvContentHintProjects3 | CreateProjectEnvContentHintProjects4 | CreateProjectEnvContentHintProjects5 | CreateProjectEnvContentHintProjects6 | CreateProjectEnvContentHintProjects7 | CreateProjectEnvContentHintProjects8 | CreateProjectEnvContentHintProjects9 | CreateProjectEnvContentHintProjects10 | CreateProjectEnvContentHintProjects11 | CreateProjectEnvContentHintProjects12 | CreateProjectEnvContentHintProjects13 | CreateProjectEnvContentHintProjects15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: CreateProjectEnvCreatedInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
export declare const CreateProjectEnvTarget2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnvTarget2 = ClosedEnum<typeof CreateProjectEnvTarget2>;
export declare const CreateProjectEnvTarget1: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnvTarget1 = ClosedEnum<typeof CreateProjectEnvTarget1>;
export type CreatedTarget = Array<CreateProjectEnvTarget1> | CreateProjectEnvTarget2;
export declare const CreatedType: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type CreatedType = ClosedEnum<typeof CreatedType>;
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type>;
export type CreateProjectEnvContentHint15 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type;
    projectId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type>;
export type CreateProjectEnvContentHint14 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type>;
export type CreateProjectEnvContentHint13 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type>;
export type CreateProjectEnvContentHint12 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type: {
    readonly PostgresPassword: "postgres-password";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type>;
export type CreateProjectEnvContentHint11 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type: {
    readonly PostgresHost: "postgres-host";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type>;
export type CreateProjectEnvContentHint10 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type: {
    readonly PostgresUser: "postgres-user";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type>;
export type CreateProjectEnvContentHint9 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type>;
export type CreateProjectEnvContentHint8 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType>;
export type CreateProjectEnvContentHint7 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType: {
    readonly PostgresUrl: "postgres-url";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType>;
export type CreateProjectEnvContentHint6 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType>;
export type CreateProjectEnvContentHint5 = {
    type: CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponse201Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type CreateProjectEnvContentHintProjectsResponse201Type = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponse201Type>;
export type CreateProjectEnvContentHint4 = {
    type: CreateProjectEnvContentHintProjectsResponse201Type;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsResponseType: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type CreateProjectEnvContentHintProjectsResponseType = ClosedEnum<typeof CreateProjectEnvContentHintProjectsResponseType>;
export type CreateProjectEnvContentHint3 = {
    type: CreateProjectEnvContentHintProjectsResponseType;
    storeId: string;
};
export declare const CreateProjectEnvContentHintProjectsType: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type CreateProjectEnvContentHintProjectsType = ClosedEnum<typeof CreateProjectEnvContentHintProjectsType>;
export type CreateProjectEnvContentHint2 = {
    type: CreateProjectEnvContentHintProjectsType;
    storeId: string;
};
export declare const CreateProjectEnvContentHintType: {
    readonly RedisUrl: "redis-url";
};
export type CreateProjectEnvContentHintType = ClosedEnum<typeof CreateProjectEnvContentHintType>;
export type CreateProjectEnvContentHint1 = {
    type: CreateProjectEnvContentHintType;
    storeId: string;
};
export type CreatedContentHint = CreateProjectEnvContentHint14 | CreateProjectEnvContentHint1 | CreateProjectEnvContentHint2 | CreateProjectEnvContentHint3 | CreateProjectEnvContentHint4 | CreateProjectEnvContentHint5 | CreateProjectEnvContentHint6 | CreateProjectEnvContentHint7 | CreateProjectEnvContentHint8 | CreateProjectEnvContentHint9 | CreateProjectEnvContentHint10 | CreateProjectEnvContentHint11 | CreateProjectEnvContentHint12 | CreateProjectEnvContentHint13 | CreateProjectEnvContentHint15;
export declare const CreateProjectEnvCreatedProjectsType: {
    readonly FlagsSecret: "flags-secret";
};
export type CreateProjectEnvCreatedProjectsType = ClosedEnum<typeof CreateProjectEnvCreatedProjectsType>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type CreatedInternalContentHint = {
    type: CreateProjectEnvCreatedProjectsType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type Created1 = {
    target?: Array<CreateProjectEnvTarget1> | CreateProjectEnvTarget2 | undefined;
    type: CreatedType;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: CreateProjectEnvContentHint14 | CreateProjectEnvContentHint1 | CreateProjectEnvContentHint2 | CreateProjectEnvContentHint3 | CreateProjectEnvContentHint4 | CreateProjectEnvContentHint5 | CreateProjectEnvContentHint6 | CreateProjectEnvContentHint7 | CreateProjectEnvContentHint8 | CreateProjectEnvContentHint9 | CreateProjectEnvContentHint10 | CreateProjectEnvContentHint11 | CreateProjectEnvContentHint12 | CreateProjectEnvContentHint13 | CreateProjectEnvContentHint15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: CreatedInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
export type Created = Created1 | Array<Created2>;
export declare const Value2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type Value2 = ClosedEnum<typeof Value2>;
export type CreateProjectEnvValue = string | Array<Value2>;
export declare const CreateProjectEnvTargetProjectsResponse2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnvTargetProjectsResponse2 = ClosedEnum<typeof CreateProjectEnvTargetProjectsResponse2>;
export declare const CreateProjectEnvTargetProjects1: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type CreateProjectEnvTargetProjects1 = ClosedEnum<typeof CreateProjectEnvTargetProjects1>;
export type CreateProjectEnvTarget = Array<CreateProjectEnvTargetProjects1> | CreateProjectEnvTargetProjectsResponse2;
export type CreateProjectEnvError = {
    code: string;
    message: string;
    key?: string | undefined;
    envVarId?: string | undefined;
    envVarKey?: string | undefined;
    action?: string | undefined;
    link?: string | undefined;
    value?: string | Array<Value2> | undefined;
    gitBranch?: string | undefined;
    target?: Array<CreateProjectEnvTargetProjects1> | CreateProjectEnvTargetProjectsResponse2 | undefined;
    project?: string | undefined;
};
export type Failed = {
    error: CreateProjectEnvError;
};
/**
 * The environment variable was created successfully
 */
export type CreateProjectEnvResponseBody = {
    created: Created1 | Array<Created2>;
    failed: Array<Failed>;
};
/** @internal */
export declare const CreateProjectEnv2Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv2Type>;
/** @internal */
export declare const CreateProjectEnv2Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv2Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv2Type$ {
    /** @deprecated use `CreateProjectEnv2Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
    /** @deprecated use `CreateProjectEnv2Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
}
/** @internal */
export declare const CreateProjectEnv2Target$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv2Target>;
/** @internal */
export declare const CreateProjectEnv2Target$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv2Target>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv2Target$ {
    /** @deprecated use `CreateProjectEnv2Target$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnv2Target$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const Two2$inboundSchema: z.ZodType<Two2, z.ZodTypeDef, unknown>;
/** @internal */
export type Two2$Outbound = {
    key: string;
    value: string;
    type: string;
    target?: Array<string> | undefined;
    gitBranch?: string | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds: Array<string>;
};
/** @internal */
export declare const Two2$outboundSchema: z.ZodType<Two2$Outbound, z.ZodTypeDef, Two2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Two2$ {
    /** @deprecated use `Two2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Two2, z.ZodTypeDef, unknown>;
    /** @deprecated use `Two2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Two2$Outbound, z.ZodTypeDef, Two2>;
    /** @deprecated use `Two2$Outbound` instead. */
    type Outbound = Two2$Outbound;
}
export declare function two2ToJSON(two2: Two2): string;
export declare function two2FromJSON(jsonString: string): SafeParseResult<Two2, SDKValidationError>;
/** @internal */
export declare const TwoType$inboundSchema: z.ZodNativeEnum<typeof TwoType>;
/** @internal */
export declare const TwoType$outboundSchema: z.ZodNativeEnum<typeof TwoType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TwoType$ {
    /** @deprecated use `TwoType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
    /** @deprecated use `TwoType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
}
/** @internal */
export declare const TwoTarget$inboundSchema: z.ZodNativeEnum<typeof TwoTarget>;
/** @internal */
export declare const TwoTarget$outboundSchema: z.ZodNativeEnum<typeof TwoTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TwoTarget$ {
    /** @deprecated use `TwoTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `TwoTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const Two1$inboundSchema: z.ZodType<Two1, z.ZodTypeDef, unknown>;
/** @internal */
export type Two1$Outbound = {
    key: string;
    value: string;
    type: string;
    target: Array<string>;
    gitBranch?: string | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
};
/** @internal */
export declare const Two1$outboundSchema: z.ZodType<Two1$Outbound, z.ZodTypeDef, Two1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Two1$ {
    /** @deprecated use `Two1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Two1, z.ZodTypeDef, unknown>;
    /** @deprecated use `Two1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Two1$Outbound, z.ZodTypeDef, Two1>;
    /** @deprecated use `Two1$Outbound` instead. */
    type Outbound = Two1$Outbound;
}
export declare function two1ToJSON(two1: Two1): string;
export declare function two1FromJSON(jsonString: string): SafeParseResult<Two1, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvRequestBody2$inboundSchema: z.ZodType<CreateProjectEnvRequestBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvRequestBody2$Outbound = Two1$Outbound | Two2$Outbound;
/** @internal */
export declare const CreateProjectEnvRequestBody2$outboundSchema: z.ZodType<CreateProjectEnvRequestBody2$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvRequestBody2$ {
    /** @deprecated use `CreateProjectEnvRequestBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvRequestBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvRequestBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvRequestBody2$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody2>;
    /** @deprecated use `CreateProjectEnvRequestBody2$Outbound` instead. */
    type Outbound = CreateProjectEnvRequestBody2$Outbound;
}
export declare function createProjectEnvRequestBody2ToJSON(createProjectEnvRequestBody2: CreateProjectEnvRequestBody2): string;
export declare function createProjectEnvRequestBody2FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvRequestBody2, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnv1Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv1Type>;
/** @internal */
export declare const CreateProjectEnv1Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv1Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv1Type$ {
    /** @deprecated use `CreateProjectEnv1Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
    /** @deprecated use `CreateProjectEnv1Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
}
/** @internal */
export declare const CreateProjectEnv1Target$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv1Target>;
/** @internal */
export declare const CreateProjectEnv1Target$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnv1Target>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv1Target$ {
    /** @deprecated use `CreateProjectEnv1Target$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnv1Target$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnv12$inboundSchema: z.ZodType<CreateProjectEnv12, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnv12$Outbound = {
    key: string;
    value: string;
    type: string;
    target?: Array<string> | undefined;
    gitBranch?: string | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds: Array<string>;
};
/** @internal */
export declare const CreateProjectEnv12$outboundSchema: z.ZodType<CreateProjectEnv12$Outbound, z.ZodTypeDef, CreateProjectEnv12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv12$ {
    /** @deprecated use `CreateProjectEnv12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnv12, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnv12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnv12$Outbound, z.ZodTypeDef, CreateProjectEnv12>;
    /** @deprecated use `CreateProjectEnv12$Outbound` instead. */
    type Outbound = CreateProjectEnv12$Outbound;
}
export declare function createProjectEnv12ToJSON(createProjectEnv12: CreateProjectEnv12): string;
export declare function createProjectEnv12FromJSON(jsonString: string): SafeParseResult<CreateProjectEnv12, SDKValidationError>;
/** @internal */
export declare const OneType$inboundSchema: z.ZodNativeEnum<typeof OneType>;
/** @internal */
export declare const OneType$outboundSchema: z.ZodNativeEnum<typeof OneType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OneType$ {
    /** @deprecated use `OneType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
    /** @deprecated use `OneType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
}
/** @internal */
export declare const OneTarget$inboundSchema: z.ZodNativeEnum<typeof OneTarget>;
/** @internal */
export declare const OneTarget$outboundSchema: z.ZodNativeEnum<typeof OneTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OneTarget$ {
    /** @deprecated use `OneTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `OneTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnv11$inboundSchema: z.ZodType<CreateProjectEnv11, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnv11$Outbound = {
    key: string;
    value: string;
    type: string;
    target: Array<string>;
    gitBranch?: string | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
};
/** @internal */
export declare const CreateProjectEnv11$outboundSchema: z.ZodType<CreateProjectEnv11$Outbound, z.ZodTypeDef, CreateProjectEnv11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnv11$ {
    /** @deprecated use `CreateProjectEnv11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnv11, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnv11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnv11$Outbound, z.ZodTypeDef, CreateProjectEnv11>;
    /** @deprecated use `CreateProjectEnv11$Outbound` instead. */
    type Outbound = CreateProjectEnv11$Outbound;
}
export declare function createProjectEnv11ToJSON(createProjectEnv11: CreateProjectEnv11): string;
export declare function createProjectEnv11FromJSON(jsonString: string): SafeParseResult<CreateProjectEnv11, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvRequestBody1$inboundSchema: z.ZodType<CreateProjectEnvRequestBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvRequestBody1$Outbound = CreateProjectEnv11$Outbound | CreateProjectEnv12$Outbound;
/** @internal */
export declare const CreateProjectEnvRequestBody1$outboundSchema: z.ZodType<CreateProjectEnvRequestBody1$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvRequestBody1$ {
    /** @deprecated use `CreateProjectEnvRequestBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvRequestBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvRequestBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvRequestBody1$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody1>;
    /** @deprecated use `CreateProjectEnvRequestBody1$Outbound` instead. */
    type Outbound = CreateProjectEnvRequestBody1$Outbound;
}
export declare function createProjectEnvRequestBody1ToJSON(createProjectEnvRequestBody1: CreateProjectEnvRequestBody1): string;
export declare function createProjectEnvRequestBody1FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvRequestBody1, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvRequestBody$inboundSchema: z.ZodType<CreateProjectEnvRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvRequestBody$Outbound = CreateProjectEnv11$Outbound | CreateProjectEnv12$Outbound | Array<Two1$Outbound | Two2$Outbound>;
/** @internal */
export declare const CreateProjectEnvRequestBody$outboundSchema: z.ZodType<CreateProjectEnvRequestBody$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvRequestBody$ {
    /** @deprecated use `CreateProjectEnvRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvRequestBody$Outbound, z.ZodTypeDef, CreateProjectEnvRequestBody>;
    /** @deprecated use `CreateProjectEnvRequestBody$Outbound` instead. */
    type Outbound = CreateProjectEnvRequestBody$Outbound;
}
export declare function createProjectEnvRequestBodyToJSON(createProjectEnvRequestBody: CreateProjectEnvRequestBody): string;
export declare function createProjectEnvRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvRequest$inboundSchema: z.ZodType<CreateProjectEnvRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvRequest$Outbound = {
    idOrName: string;
    upsert?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateProjectEnv11$Outbound | CreateProjectEnv12$Outbound | Array<Two1$Outbound | Two2$Outbound>;
};
/** @internal */
export declare const CreateProjectEnvRequest$outboundSchema: z.ZodType<CreateProjectEnvRequest$Outbound, z.ZodTypeDef, CreateProjectEnvRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvRequest$ {
    /** @deprecated use `CreateProjectEnvRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvRequest$Outbound, z.ZodTypeDef, CreateProjectEnvRequest>;
    /** @deprecated use `CreateProjectEnvRequest$Outbound` instead. */
    type Outbound = CreateProjectEnvRequest$Outbound;
}
export declare function createProjectEnvRequestToJSON(createProjectEnvRequest: CreateProjectEnvRequest): string;
export declare function createProjectEnvRequestFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvRequest, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvTargetProjects2$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjects2>;
/** @internal */
export declare const CreateProjectEnvTargetProjects2$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjects2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTargetProjects2$ {
    /** @deprecated use `CreateProjectEnvTargetProjects2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnvTargetProjects2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnvCreatedTarget$inboundSchema: z.ZodType<CreateProjectEnvCreatedTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvCreatedTarget$Outbound = Array<string> | string;
/** @internal */
export declare const CreateProjectEnvCreatedTarget$outboundSchema: z.ZodType<CreateProjectEnvCreatedTarget$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedTarget$ {
    /** @deprecated use `CreateProjectEnvCreatedTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvCreatedTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvCreatedTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvCreatedTarget$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedTarget>;
    /** @deprecated use `CreateProjectEnvCreatedTarget$Outbound` instead. */
    type Outbound = CreateProjectEnvCreatedTarget$Outbound;
}
export declare function createProjectEnvCreatedTargetToJSON(createProjectEnvCreatedTarget: CreateProjectEnvCreatedTarget): string;
export declare function createProjectEnvCreatedTargetFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvCreatedTarget, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvCreatedType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedType>;
/** @internal */
export declare const CreateProjectEnvCreatedType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedType$ {
    /** @deprecated use `CreateProjectEnvCreatedType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `CreateProjectEnvCreatedType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated215Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects15$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects15, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects15$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects15$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects15$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects15, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects15$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects15>;
    /** @deprecated use `CreateProjectEnvContentHintProjects15$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects15$Outbound;
}
export declare function createProjectEnvContentHintProjects15ToJSON(createProjectEnvContentHintProjects15: CreateProjectEnvContentHintProjects15): string;
export declare function createProjectEnvContentHintProjects15FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects15, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects14$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects14, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects14$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects14$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects14$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects14, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects14$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects14>;
    /** @deprecated use `CreateProjectEnvContentHintProjects14$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects14$Outbound;
}
export declare function createProjectEnvContentHintProjects14ToJSON(createProjectEnvContentHintProjects14: CreateProjectEnvContentHintProjects14): string;
export declare function createProjectEnvContentHintProjects14FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects14, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects13$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects13, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects13$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects13$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects13$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects13, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects13$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects13>;
    /** @deprecated use `CreateProjectEnvContentHintProjects13$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects13$Outbound;
}
export declare function createProjectEnvContentHintProjects13ToJSON(createProjectEnvContentHintProjects13: CreateProjectEnvContentHintProjects13): string;
export declare function createProjectEnvContentHintProjects13FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects13, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects12$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects12, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects12$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects12$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects12$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects12, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects12$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects12>;
    /** @deprecated use `CreateProjectEnvContentHintProjects12$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects12$Outbound;
}
export declare function createProjectEnvContentHintProjects12ToJSON(createProjectEnvContentHintProjects12: CreateProjectEnvContentHintProjects12): string;
export declare function createProjectEnvContentHintProjects12FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects12, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects11$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects11, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects11$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects11$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects11$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects11, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects11$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects11>;
    /** @deprecated use `CreateProjectEnvContentHintProjects11$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects11$Outbound;
}
export declare function createProjectEnvContentHintProjects11ToJSON(createProjectEnvContentHintProjects11: CreateProjectEnvContentHintProjects11): string;
export declare function createProjectEnvContentHintProjects11FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects11, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects10$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects10, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects10$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects10$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects10$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects10, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects10$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects10>;
    /** @deprecated use `CreateProjectEnvContentHintProjects10$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects10$Outbound;
}
export declare function createProjectEnvContentHintProjects10ToJSON(createProjectEnvContentHintProjects10: CreateProjectEnvContentHintProjects10): string;
export declare function createProjectEnvContentHintProjects10FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects10, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects9$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects9, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects9$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects9$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects9$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects9, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects9$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects9>;
    /** @deprecated use `CreateProjectEnvContentHintProjects9$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects9$Outbound;
}
export declare function createProjectEnvContentHintProjects9ToJSON(createProjectEnvContentHintProjects9: CreateProjectEnvContentHintProjects9): string;
export declare function createProjectEnvContentHintProjects9FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects9, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects8$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects8, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects8$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects8$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects8$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects8, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects8$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects8>;
    /** @deprecated use `CreateProjectEnvContentHintProjects8$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects8$Outbound;
}
export declare function createProjectEnvContentHintProjects8ToJSON(createProjectEnvContentHintProjects8: CreateProjectEnvContentHintProjects8): string;
export declare function createProjectEnvContentHintProjects8FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects8, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects7$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects7, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects7$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects7$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects7$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects7, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects7$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects7>;
    /** @deprecated use `CreateProjectEnvContentHintProjects7$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects7$Outbound;
}
export declare function createProjectEnvContentHintProjects7ToJSON(createProjectEnvContentHintProjects7: CreateProjectEnvContentHintProjects7): string;
export declare function createProjectEnvContentHintProjects7FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects7, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects6$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects6, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects6$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects6$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects6$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects6, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects6$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects6>;
    /** @deprecated use `CreateProjectEnvContentHintProjects6$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects6$Outbound;
}
export declare function createProjectEnvContentHintProjects6ToJSON(createProjectEnvContentHintProjects6: CreateProjectEnvContentHintProjects6): string;
export declare function createProjectEnvContentHintProjects6FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects6, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects5$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects5, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects5$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects5$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects5$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects5, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects5$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects5>;
    /** @deprecated use `CreateProjectEnvContentHintProjects5$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects5$Outbound;
}
export declare function createProjectEnvContentHintProjects5ToJSON(createProjectEnvContentHintProjects5: CreateProjectEnvContentHintProjects5): string;
export declare function createProjectEnvContentHintProjects5FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects5, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects4$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects4, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects4$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects4$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects4$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects4, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects4$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects4>;
    /** @deprecated use `CreateProjectEnvContentHintProjects4$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects4$Outbound;
}
export declare function createProjectEnvContentHintProjects4ToJSON(createProjectEnvContentHintProjects4: CreateProjectEnvContentHintProjects4): string;
export declare function createProjectEnvContentHintProjects4FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects4, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects3$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects3, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects3$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects3$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects3$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects3, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects3$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects3>;
    /** @deprecated use `CreateProjectEnvContentHintProjects3$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects3$Outbound;
}
export declare function createProjectEnvContentHintProjects3ToJSON(createProjectEnvContentHintProjects3: CreateProjectEnvContentHintProjects3): string;
export declare function createProjectEnvContentHintProjects3FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects3, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects2$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects2, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects2$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects2$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects2$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects2, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects2$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects2>;
    /** @deprecated use `CreateProjectEnvContentHintProjects2$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects2$Outbound;
}
export declare function createProjectEnvContentHintProjects2ToJSON(createProjectEnvContentHintProjects2: CreateProjectEnvContentHintProjects2): string;
export declare function createProjectEnvContentHintProjects2FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects2, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjects1$inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects1, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHintProjects1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHintProjects1$outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects1$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjects1$ {
    /** @deprecated use `CreateProjectEnvContentHintProjects1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHintProjects1, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHintProjects1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHintProjects1$Outbound, z.ZodTypeDef, CreateProjectEnvContentHintProjects1>;
    /** @deprecated use `CreateProjectEnvContentHintProjects1$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHintProjects1$Outbound;
}
export declare function createProjectEnvContentHintProjects1ToJSON(createProjectEnvContentHintProjects1: CreateProjectEnvContentHintProjects1): string;
export declare function createProjectEnvContentHintProjects1FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHintProjects1, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvCreatedContentHint$inboundSchema: z.ZodType<CreateProjectEnvCreatedContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvCreatedContentHint$Outbound = CreateProjectEnvContentHintProjects14$Outbound | CreateProjectEnvContentHintProjects1$Outbound | CreateProjectEnvContentHintProjects2$Outbound | CreateProjectEnvContentHintProjects3$Outbound | CreateProjectEnvContentHintProjects4$Outbound | CreateProjectEnvContentHintProjects5$Outbound | CreateProjectEnvContentHintProjects6$Outbound | CreateProjectEnvContentHintProjects7$Outbound | CreateProjectEnvContentHintProjects8$Outbound | CreateProjectEnvContentHintProjects9$Outbound | CreateProjectEnvContentHintProjects10$Outbound | CreateProjectEnvContentHintProjects11$Outbound | CreateProjectEnvContentHintProjects12$Outbound | CreateProjectEnvContentHintProjects13$Outbound | CreateProjectEnvContentHintProjects15$Outbound;
/** @internal */
export declare const CreateProjectEnvCreatedContentHint$outboundSchema: z.ZodType<CreateProjectEnvCreatedContentHint$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedContentHint$ {
    /** @deprecated use `CreateProjectEnvCreatedContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvCreatedContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvCreatedContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvCreatedContentHint$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedContentHint>;
    /** @deprecated use `CreateProjectEnvCreatedContentHint$Outbound` instead. */
    type Outbound = CreateProjectEnvCreatedContentHint$Outbound;
}
export declare function createProjectEnvCreatedContentHintToJSON(createProjectEnvCreatedContentHint: CreateProjectEnvCreatedContentHint): string;
export declare function createProjectEnvCreatedContentHintFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvCreatedContentHint, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvCreatedProjectsResponseType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedProjectsResponseType>;
/** @internal */
export declare const CreateProjectEnvCreatedProjectsResponseType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedProjectsResponseType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedProjectsResponseType$ {
    /** @deprecated use `CreateProjectEnvCreatedProjectsResponseType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `CreateProjectEnvCreatedProjectsResponseType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const CreateProjectEnvCreatedInternalContentHint$inboundSchema: z.ZodType<CreateProjectEnvCreatedInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvCreatedInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const CreateProjectEnvCreatedInternalContentHint$outboundSchema: z.ZodType<CreateProjectEnvCreatedInternalContentHint$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedInternalContentHint$ {
    /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvCreatedInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvCreatedInternalContentHint$Outbound, z.ZodTypeDef, CreateProjectEnvCreatedInternalContentHint>;
    /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$Outbound` instead. */
    type Outbound = CreateProjectEnvCreatedInternalContentHint$Outbound;
}
export declare function createProjectEnvCreatedInternalContentHintToJSON(createProjectEnvCreatedInternalContentHint: CreateProjectEnvCreatedInternalContentHint): string;
export declare function createProjectEnvCreatedInternalContentHintFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvCreatedInternalContentHint, SDKValidationError>;
/** @internal */
export declare const Created2$inboundSchema: z.ZodType<Created2, z.ZodTypeDef, unknown>;
/** @internal */
export type Created2$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: CreateProjectEnvContentHintProjects14$Outbound | CreateProjectEnvContentHintProjects1$Outbound | CreateProjectEnvContentHintProjects2$Outbound | CreateProjectEnvContentHintProjects3$Outbound | CreateProjectEnvContentHintProjects4$Outbound | CreateProjectEnvContentHintProjects5$Outbound | CreateProjectEnvContentHintProjects6$Outbound | CreateProjectEnvContentHintProjects7$Outbound | CreateProjectEnvContentHintProjects8$Outbound | CreateProjectEnvContentHintProjects9$Outbound | CreateProjectEnvContentHintProjects10$Outbound | CreateProjectEnvContentHintProjects11$Outbound | CreateProjectEnvContentHintProjects12$Outbound | CreateProjectEnvContentHintProjects13$Outbound | CreateProjectEnvContentHintProjects15$Outbound | null | undefined;
    internalContentHint?: CreateProjectEnvCreatedInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/** @internal */
export declare const Created2$outboundSchema: z.ZodType<Created2$Outbound, z.ZodTypeDef, Created2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Created2$ {
    /** @deprecated use `Created2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Created2, z.ZodTypeDef, unknown>;
    /** @deprecated use `Created2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Created2$Outbound, z.ZodTypeDef, Created2>;
    /** @deprecated use `Created2$Outbound` instead. */
    type Outbound = Created2$Outbound;
}
export declare function created2ToJSON(created2: Created2): string;
export declare function created2FromJSON(jsonString: string): SafeParseResult<Created2, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTarget2>;
/** @internal */
export declare const CreateProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTarget2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTarget2$ {
    /** @deprecated use `CreateProjectEnvTarget2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnvTarget2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnvTarget1$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTarget1>;
/** @internal */
export declare const CreateProjectEnvTarget1$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTarget1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTarget1$ {
    /** @deprecated use `CreateProjectEnvTarget1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnvTarget1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreatedTarget$inboundSchema: z.ZodType<CreatedTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type CreatedTarget$Outbound = Array<string> | string;
/** @internal */
export declare const CreatedTarget$outboundSchema: z.ZodType<CreatedTarget$Outbound, z.ZodTypeDef, CreatedTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreatedTarget$ {
    /** @deprecated use `CreatedTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreatedTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreatedTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreatedTarget$Outbound, z.ZodTypeDef, CreatedTarget>;
    /** @deprecated use `CreatedTarget$Outbound` instead. */
    type Outbound = CreatedTarget$Outbound;
}
export declare function createdTargetToJSON(createdTarget: CreatedTarget): string;
export declare function createdTargetFromJSON(jsonString: string): SafeParseResult<CreatedTarget, SDKValidationError>;
/** @internal */
export declare const CreatedType$inboundSchema: z.ZodNativeEnum<typeof CreatedType>;
/** @internal */
export declare const CreatedType$outboundSchema: z.ZodNativeEnum<typeof CreatedType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreatedType$ {
    /** @deprecated use `CreatedType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `CreatedType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated115Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint15$inboundSchema: z.ZodType<CreateProjectEnvContentHint15, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint15$outboundSchema: z.ZodType<CreateProjectEnvContentHint15$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint15$ {
    /** @deprecated use `CreateProjectEnvContentHint15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint15, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint15$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint15>;
    /** @deprecated use `CreateProjectEnvContentHint15$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint15$Outbound;
}
export declare function createProjectEnvContentHint15ToJSON(createProjectEnvContentHint15: CreateProjectEnvContentHint15): string;
export declare function createProjectEnvContentHint15FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint15, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint14$inboundSchema: z.ZodType<CreateProjectEnvContentHint14, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint14$outboundSchema: z.ZodType<CreateProjectEnvContentHint14$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint14$ {
    /** @deprecated use `CreateProjectEnvContentHint14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint14, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint14$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint14>;
    /** @deprecated use `CreateProjectEnvContentHint14$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint14$Outbound;
}
export declare function createProjectEnvContentHint14ToJSON(createProjectEnvContentHint14: CreateProjectEnvContentHint14): string;
export declare function createProjectEnvContentHint14FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint14, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint13$inboundSchema: z.ZodType<CreateProjectEnvContentHint13, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint13$outboundSchema: z.ZodType<CreateProjectEnvContentHint13$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint13$ {
    /** @deprecated use `CreateProjectEnvContentHint13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint13, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint13$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint13>;
    /** @deprecated use `CreateProjectEnvContentHint13$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint13$Outbound;
}
export declare function createProjectEnvContentHint13ToJSON(createProjectEnvContentHint13: CreateProjectEnvContentHint13): string;
export declare function createProjectEnvContentHint13FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint13, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint12$inboundSchema: z.ZodType<CreateProjectEnvContentHint12, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint12$outboundSchema: z.ZodType<CreateProjectEnvContentHint12$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint12$ {
    /** @deprecated use `CreateProjectEnvContentHint12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint12, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint12$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint12>;
    /** @deprecated use `CreateProjectEnvContentHint12$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint12$Outbound;
}
export declare function createProjectEnvContentHint12ToJSON(createProjectEnvContentHint12: CreateProjectEnvContentHint12): string;
export declare function createProjectEnvContentHint12FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint12, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint11$inboundSchema: z.ZodType<CreateProjectEnvContentHint11, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint11$outboundSchema: z.ZodType<CreateProjectEnvContentHint11$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint11$ {
    /** @deprecated use `CreateProjectEnvContentHint11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint11, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint11$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint11>;
    /** @deprecated use `CreateProjectEnvContentHint11$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint11$Outbound;
}
export declare function createProjectEnvContentHint11ToJSON(createProjectEnvContentHint11: CreateProjectEnvContentHint11): string;
export declare function createProjectEnvContentHint11FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint11, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint10$inboundSchema: z.ZodType<CreateProjectEnvContentHint10, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint10$outboundSchema: z.ZodType<CreateProjectEnvContentHint10$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint10$ {
    /** @deprecated use `CreateProjectEnvContentHint10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint10, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint10$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint10>;
    /** @deprecated use `CreateProjectEnvContentHint10$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint10$Outbound;
}
export declare function createProjectEnvContentHint10ToJSON(createProjectEnvContentHint10: CreateProjectEnvContentHint10): string;
export declare function createProjectEnvContentHint10FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint10, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint9$inboundSchema: z.ZodType<CreateProjectEnvContentHint9, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint9$outboundSchema: z.ZodType<CreateProjectEnvContentHint9$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint9$ {
    /** @deprecated use `CreateProjectEnvContentHint9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint9, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint9$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint9>;
    /** @deprecated use `CreateProjectEnvContentHint9$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint9$Outbound;
}
export declare function createProjectEnvContentHint9ToJSON(createProjectEnvContentHint9: CreateProjectEnvContentHint9): string;
export declare function createProjectEnvContentHint9FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint9, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint8$inboundSchema: z.ZodType<CreateProjectEnvContentHint8, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint8$outboundSchema: z.ZodType<CreateProjectEnvContentHint8$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint8$ {
    /** @deprecated use `CreateProjectEnvContentHint8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint8, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint8$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint8>;
    /** @deprecated use `CreateProjectEnvContentHint8$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint8$Outbound;
}
export declare function createProjectEnvContentHint8ToJSON(createProjectEnvContentHint8: CreateProjectEnvContentHint8): string;
export declare function createProjectEnvContentHint8FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint8, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint7$inboundSchema: z.ZodType<CreateProjectEnvContentHint7, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint7$outboundSchema: z.ZodType<CreateProjectEnvContentHint7$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint7$ {
    /** @deprecated use `CreateProjectEnvContentHint7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint7, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint7$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint7>;
    /** @deprecated use `CreateProjectEnvContentHint7$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint7$Outbound;
}
export declare function createProjectEnvContentHint7ToJSON(createProjectEnvContentHint7: CreateProjectEnvContentHint7): string;
export declare function createProjectEnvContentHint7FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint7, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONResponseBodyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint6$inboundSchema: z.ZodType<CreateProjectEnvContentHint6, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint6$outboundSchema: z.ZodType<CreateProjectEnvContentHint6$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint6$ {
    /** @deprecated use `CreateProjectEnvContentHint6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint6, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint6$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint6>;
    /** @deprecated use `CreateProjectEnvContentHint6$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint6$Outbound;
}
export declare function createProjectEnvContentHint6ToJSON(createProjectEnvContentHint6: CreateProjectEnvContentHint6): string;
export declare function createProjectEnvContentHint6FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint6, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201ApplicationJSONType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint5$inboundSchema: z.ZodType<CreateProjectEnvContentHint5, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint5$outboundSchema: z.ZodType<CreateProjectEnvContentHint5$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint5$ {
    /** @deprecated use `CreateProjectEnvContentHint5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint5, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint5$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint5>;
    /** @deprecated use `CreateProjectEnvContentHint5$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint5$Outbound;
}
export declare function createProjectEnvContentHint5ToJSON(createProjectEnvContentHint5: CreateProjectEnvContentHint5): string;
export declare function createProjectEnvContentHint5FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint5, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201Type>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponse201Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponse201Type$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponse201Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint4$inboundSchema: z.ZodType<CreateProjectEnvContentHint4, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint4$outboundSchema: z.ZodType<CreateProjectEnvContentHint4$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint4$ {
    /** @deprecated use `CreateProjectEnvContentHint4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint4, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint4$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint4>;
    /** @deprecated use `CreateProjectEnvContentHint4$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint4$Outbound;
}
export declare function createProjectEnvContentHint4ToJSON(createProjectEnvContentHint4: CreateProjectEnvContentHint4): string;
export declare function createProjectEnvContentHint4FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint4, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponseType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponseType>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsResponseType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsResponseType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsResponseType$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint3$inboundSchema: z.ZodType<CreateProjectEnvContentHint3, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint3$outboundSchema: z.ZodType<CreateProjectEnvContentHint3$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint3$ {
    /** @deprecated use `CreateProjectEnvContentHint3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint3, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint3$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint3>;
    /** @deprecated use `CreateProjectEnvContentHint3$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint3$Outbound;
}
export declare function createProjectEnvContentHint3ToJSON(createProjectEnvContentHint3: CreateProjectEnvContentHint3): string;
export declare function createProjectEnvContentHint3FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint3, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsType>;
/** @internal */
export declare const CreateProjectEnvContentHintProjectsType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintProjectsType$ {
    /** @deprecated use `CreateProjectEnvContentHintProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint2$inboundSchema: z.ZodType<CreateProjectEnvContentHint2, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint2$outboundSchema: z.ZodType<CreateProjectEnvContentHint2$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint2$ {
    /** @deprecated use `CreateProjectEnvContentHint2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint2, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint2$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint2>;
    /** @deprecated use `CreateProjectEnvContentHint2$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint2$Outbound;
}
export declare function createProjectEnvContentHint2ToJSON(createProjectEnvContentHint2: CreateProjectEnvContentHint2): string;
export declare function createProjectEnvContentHint2FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint2, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintType>;
/** @internal */
export declare const CreateProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvContentHintType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHintType$ {
    /** @deprecated use `CreateProjectEnvContentHintType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `CreateProjectEnvContentHintType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const CreateProjectEnvContentHint1$inboundSchema: z.ZodType<CreateProjectEnvContentHint1, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvContentHint1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const CreateProjectEnvContentHint1$outboundSchema: z.ZodType<CreateProjectEnvContentHint1$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvContentHint1$ {
    /** @deprecated use `CreateProjectEnvContentHint1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvContentHint1, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvContentHint1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvContentHint1$Outbound, z.ZodTypeDef, CreateProjectEnvContentHint1>;
    /** @deprecated use `CreateProjectEnvContentHint1$Outbound` instead. */
    type Outbound = CreateProjectEnvContentHint1$Outbound;
}
export declare function createProjectEnvContentHint1ToJSON(createProjectEnvContentHint1: CreateProjectEnvContentHint1): string;
export declare function createProjectEnvContentHint1FromJSON(jsonString: string): SafeParseResult<CreateProjectEnvContentHint1, SDKValidationError>;
/** @internal */
export declare const CreatedContentHint$inboundSchema: z.ZodType<CreatedContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type CreatedContentHint$Outbound = CreateProjectEnvContentHint14$Outbound | CreateProjectEnvContentHint1$Outbound | CreateProjectEnvContentHint2$Outbound | CreateProjectEnvContentHint3$Outbound | CreateProjectEnvContentHint4$Outbound | CreateProjectEnvContentHint5$Outbound | CreateProjectEnvContentHint6$Outbound | CreateProjectEnvContentHint7$Outbound | CreateProjectEnvContentHint8$Outbound | CreateProjectEnvContentHint9$Outbound | CreateProjectEnvContentHint10$Outbound | CreateProjectEnvContentHint11$Outbound | CreateProjectEnvContentHint12$Outbound | CreateProjectEnvContentHint13$Outbound | CreateProjectEnvContentHint15$Outbound;
/** @internal */
export declare const CreatedContentHint$outboundSchema: z.ZodType<CreatedContentHint$Outbound, z.ZodTypeDef, CreatedContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreatedContentHint$ {
    /** @deprecated use `CreatedContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreatedContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreatedContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreatedContentHint$Outbound, z.ZodTypeDef, CreatedContentHint>;
    /** @deprecated use `CreatedContentHint$Outbound` instead. */
    type Outbound = CreatedContentHint$Outbound;
}
export declare function createdContentHintToJSON(createdContentHint: CreatedContentHint): string;
export declare function createdContentHintFromJSON(jsonString: string): SafeParseResult<CreatedContentHint, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvCreatedProjectsType$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedProjectsType>;
/** @internal */
export declare const CreateProjectEnvCreatedProjectsType$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvCreatedProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvCreatedProjectsType$ {
    /** @deprecated use `CreateProjectEnvCreatedProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `CreateProjectEnvCreatedProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const CreatedInternalContentHint$inboundSchema: z.ZodType<CreatedInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type CreatedInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const CreatedInternalContentHint$outboundSchema: z.ZodType<CreatedInternalContentHint$Outbound, z.ZodTypeDef, CreatedInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreatedInternalContentHint$ {
    /** @deprecated use `CreatedInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreatedInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreatedInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreatedInternalContentHint$Outbound, z.ZodTypeDef, CreatedInternalContentHint>;
    /** @deprecated use `CreatedInternalContentHint$Outbound` instead. */
    type Outbound = CreatedInternalContentHint$Outbound;
}
export declare function createdInternalContentHintToJSON(createdInternalContentHint: CreatedInternalContentHint): string;
export declare function createdInternalContentHintFromJSON(jsonString: string): SafeParseResult<CreatedInternalContentHint, SDKValidationError>;
/** @internal */
export declare const Created1$inboundSchema: z.ZodType<Created1, z.ZodTypeDef, unknown>;
/** @internal */
export type Created1$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    vsmValue?: string | undefined;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: CreateProjectEnvContentHint14$Outbound | CreateProjectEnvContentHint1$Outbound | CreateProjectEnvContentHint2$Outbound | CreateProjectEnvContentHint3$Outbound | CreateProjectEnvContentHint4$Outbound | CreateProjectEnvContentHint5$Outbound | CreateProjectEnvContentHint6$Outbound | CreateProjectEnvContentHint7$Outbound | CreateProjectEnvContentHint8$Outbound | CreateProjectEnvContentHint9$Outbound | CreateProjectEnvContentHint10$Outbound | CreateProjectEnvContentHint11$Outbound | CreateProjectEnvContentHint12$Outbound | CreateProjectEnvContentHint13$Outbound | CreateProjectEnvContentHint15$Outbound | null | undefined;
    internalContentHint?: CreatedInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    system?: boolean | undefined;
};
/** @internal */
export declare const Created1$outboundSchema: z.ZodType<Created1$Outbound, z.ZodTypeDef, Created1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Created1$ {
    /** @deprecated use `Created1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Created1, z.ZodTypeDef, unknown>;
    /** @deprecated use `Created1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Created1$Outbound, z.ZodTypeDef, Created1>;
    /** @deprecated use `Created1$Outbound` instead. */
    type Outbound = Created1$Outbound;
}
export declare function created1ToJSON(created1: Created1): string;
export declare function created1FromJSON(jsonString: string): SafeParseResult<Created1, SDKValidationError>;
/** @internal */
export declare const Created$inboundSchema: z.ZodType<Created, z.ZodTypeDef, unknown>;
/** @internal */
export type Created$Outbound = Created1$Outbound | Array<Created2$Outbound>;
/** @internal */
export declare const Created$outboundSchema: z.ZodType<Created$Outbound, z.ZodTypeDef, Created>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Created$ {
    /** @deprecated use `Created$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Created, z.ZodTypeDef, unknown>;
    /** @deprecated use `Created$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Created$Outbound, z.ZodTypeDef, Created>;
    /** @deprecated use `Created$Outbound` instead. */
    type Outbound = Created$Outbound;
}
export declare function createdToJSON(created: Created): string;
export declare function createdFromJSON(jsonString: string): SafeParseResult<Created, SDKValidationError>;
/** @internal */
export declare const Value2$inboundSchema: z.ZodNativeEnum<typeof Value2>;
/** @internal */
export declare const Value2$outboundSchema: z.ZodNativeEnum<typeof Value2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Value2$ {
    /** @deprecated use `Value2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `Value2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnvValue$inboundSchema: z.ZodType<CreateProjectEnvValue, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvValue$Outbound = string | Array<string>;
/** @internal */
export declare const CreateProjectEnvValue$outboundSchema: z.ZodType<CreateProjectEnvValue$Outbound, z.ZodTypeDef, CreateProjectEnvValue>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvValue$ {
    /** @deprecated use `CreateProjectEnvValue$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvValue, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvValue$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvValue$Outbound, z.ZodTypeDef, CreateProjectEnvValue>;
    /** @deprecated use `CreateProjectEnvValue$Outbound` instead. */
    type Outbound = CreateProjectEnvValue$Outbound;
}
export declare function createProjectEnvValueToJSON(createProjectEnvValue: CreateProjectEnvValue): string;
export declare function createProjectEnvValueFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvValue, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvTargetProjectsResponse2$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjectsResponse2>;
/** @internal */
export declare const CreateProjectEnvTargetProjectsResponse2$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjectsResponse2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTargetProjectsResponse2$ {
    /** @deprecated use `CreateProjectEnvTargetProjectsResponse2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnvTargetProjectsResponse2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnvTargetProjects1$inboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjects1>;
/** @internal */
export declare const CreateProjectEnvTargetProjects1$outboundSchema: z.ZodNativeEnum<typeof CreateProjectEnvTargetProjects1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTargetProjects1$ {
    /** @deprecated use `CreateProjectEnvTargetProjects1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `CreateProjectEnvTargetProjects1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const CreateProjectEnvTarget$inboundSchema: z.ZodType<CreateProjectEnvTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvTarget$Outbound = Array<string> | string;
/** @internal */
export declare const CreateProjectEnvTarget$outboundSchema: z.ZodType<CreateProjectEnvTarget$Outbound, z.ZodTypeDef, CreateProjectEnvTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvTarget$ {
    /** @deprecated use `CreateProjectEnvTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvTarget$Outbound, z.ZodTypeDef, CreateProjectEnvTarget>;
    /** @deprecated use `CreateProjectEnvTarget$Outbound` instead. */
    type Outbound = CreateProjectEnvTarget$Outbound;
}
export declare function createProjectEnvTargetToJSON(createProjectEnvTarget: CreateProjectEnvTarget): string;
export declare function createProjectEnvTargetFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvTarget, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvError$inboundSchema: z.ZodType<CreateProjectEnvError, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvError$Outbound = {
    code: string;
    message: string;
    key?: string | undefined;
    envVarId?: string | undefined;
    envVarKey?: string | undefined;
    action?: string | undefined;
    link?: string | undefined;
    value?: string | Array<string> | undefined;
    gitBranch?: string | undefined;
    target?: Array<string> | string | undefined;
    project?: string | undefined;
};
/** @internal */
export declare const CreateProjectEnvError$outboundSchema: z.ZodType<CreateProjectEnvError$Outbound, z.ZodTypeDef, CreateProjectEnvError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvError$ {
    /** @deprecated use `CreateProjectEnvError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvError, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvError$Outbound, z.ZodTypeDef, CreateProjectEnvError>;
    /** @deprecated use `CreateProjectEnvError$Outbound` instead. */
    type Outbound = CreateProjectEnvError$Outbound;
}
export declare function createProjectEnvErrorToJSON(createProjectEnvError: CreateProjectEnvError): string;
export declare function createProjectEnvErrorFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvError, SDKValidationError>;
/** @internal */
export declare const Failed$inboundSchema: z.ZodType<Failed, z.ZodTypeDef, unknown>;
/** @internal */
export type Failed$Outbound = {
    error: CreateProjectEnvError$Outbound;
};
/** @internal */
export declare const Failed$outboundSchema: z.ZodType<Failed$Outbound, z.ZodTypeDef, Failed>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Failed$ {
    /** @deprecated use `Failed$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Failed, z.ZodTypeDef, unknown>;
    /** @deprecated use `Failed$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Failed$Outbound, z.ZodTypeDef, Failed>;
    /** @deprecated use `Failed$Outbound` instead. */
    type Outbound = Failed$Outbound;
}
export declare function failedToJSON(failed: Failed): string;
export declare function failedFromJSON(jsonString: string): SafeParseResult<Failed, SDKValidationError>;
/** @internal */
export declare const CreateProjectEnvResponseBody$inboundSchema: z.ZodType<CreateProjectEnvResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateProjectEnvResponseBody$Outbound = {
    created: Created1$Outbound | Array<Created2$Outbound>;
    failed: Array<Failed$Outbound>;
};
/** @internal */
export declare const CreateProjectEnvResponseBody$outboundSchema: z.ZodType<CreateProjectEnvResponseBody$Outbound, z.ZodTypeDef, CreateProjectEnvResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateProjectEnvResponseBody$ {
    /** @deprecated use `CreateProjectEnvResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateProjectEnvResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateProjectEnvResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateProjectEnvResponseBody$Outbound, z.ZodTypeDef, CreateProjectEnvResponseBody>;
    /** @deprecated use `CreateProjectEnvResponseBody$Outbound` instead. */
    type Outbound = CreateProjectEnvResponseBody$Outbound;
}
export declare function createProjectEnvResponseBodyToJSON(createProjectEnvResponseBody: CreateProjectEnvResponseBody): string;
export declare function createProjectEnvResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateProjectEnvResponseBody, SDKValidationError>;
//# sourceMappingURL=createprojectenvop.d.ts.map