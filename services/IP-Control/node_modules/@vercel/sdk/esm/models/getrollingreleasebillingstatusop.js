/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason = {
    AvailableSlots: "available_slots",
};
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason = {
    NoAvailableSlots: "no_available_slots",
};
export const AvailableSlots = {
    Unlimited: "unlimited",
};
export const GetRollingReleaseBillingStatusResponseBodyReason = {
    UnlimitedSlots: "unlimited_slots",
};
export const ResponseBodyReason = {
    PlanNotSupported: "plan_not_supported",
};
/** @internal */
export const GetRollingReleaseBillingStatusRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetRollingReleaseBillingStatusRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusRequest$;
(function (GetRollingReleaseBillingStatusRequest$) {
    /** @deprecated use `GetRollingReleaseBillingStatusRequest$inboundSchema` instead. */
    GetRollingReleaseBillingStatusRequest$.inboundSchema = GetRollingReleaseBillingStatusRequest$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusRequest$outboundSchema` instead. */
    GetRollingReleaseBillingStatusRequest$.outboundSchema = GetRollingReleaseBillingStatusRequest$outboundSchema;
})(GetRollingReleaseBillingStatusRequest$ || (GetRollingReleaseBillingStatusRequest$ = {}));
export function getRollingReleaseBillingStatusRequestToJSON(getRollingReleaseBillingStatusRequest) {
    return JSON.stringify(GetRollingReleaseBillingStatusRequest$outboundSchema.parse(getRollingReleaseBillingStatusRequest));
}
export function getRollingReleaseBillingStatusRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseBillingStatusRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseBillingStatusRequest' from JSON`);
}
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema = z.nativeEnum(GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason);
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$;
(function (GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$.inboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$.outboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$ || (GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$ = {}));
/** @internal */
export const ResponseBody4$inboundSchema = z.object({
    availableSlots: z.number(),
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$inboundSchema,
    message: z.string(),
});
/** @internal */
export const ResponseBody4$outboundSchema = z.object({
    availableSlots: z.number(),
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseResponseReason$outboundSchema,
    message: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBody4$;
(function (ResponseBody4$) {
    /** @deprecated use `ResponseBody4$inboundSchema` instead. */
    ResponseBody4$.inboundSchema = ResponseBody4$inboundSchema;
    /** @deprecated use `ResponseBody4$outboundSchema` instead. */
    ResponseBody4$.outboundSchema = ResponseBody4$outboundSchema;
})(ResponseBody4$ || (ResponseBody4$ = {}));
export function responseBody4ToJSON(responseBody4) {
    return JSON.stringify(ResponseBody4$outboundSchema.parse(responseBody4));
}
export function responseBody4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBody4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBody4' from JSON`);
}
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema = z.nativeEnum(GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason);
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$;
(function (GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$.inboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$.outboundSchema = GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$ || (GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$ = {}));
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody3$inboundSchema = z.object({
    availableSlots: z.number(),
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$inboundSchema,
    message: z.string(),
    enabledProjects: z.array(z.string()),
});
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody3$outboundSchema = z.object({
    availableSlots: z.number(),
    reason: GetRollingReleaseBillingStatusResponseBodyRollingReleaseReason$outboundSchema,
    message: z.string(),
    enabledProjects: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBody3$;
(function (GetRollingReleaseBillingStatusResponseBody3$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody3$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody3$.inboundSchema = GetRollingReleaseBillingStatusResponseBody3$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody3$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody3$.outboundSchema = GetRollingReleaseBillingStatusResponseBody3$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBody3$ || (GetRollingReleaseBillingStatusResponseBody3$ = {}));
export function getRollingReleaseBillingStatusResponseBody3ToJSON(getRollingReleaseBillingStatusResponseBody3) {
    return JSON.stringify(GetRollingReleaseBillingStatusResponseBody3$outboundSchema.parse(getRollingReleaseBillingStatusResponseBody3));
}
export function getRollingReleaseBillingStatusResponseBody3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseBillingStatusResponseBody3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseBillingStatusResponseBody3' from JSON`);
}
/** @internal */
export const AvailableSlots$inboundSchema = z.nativeEnum(AvailableSlots);
/** @internal */
export const AvailableSlots$outboundSchema = AvailableSlots$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AvailableSlots$;
(function (AvailableSlots$) {
    /** @deprecated use `AvailableSlots$inboundSchema` instead. */
    AvailableSlots$.inboundSchema = AvailableSlots$inboundSchema;
    /** @deprecated use `AvailableSlots$outboundSchema` instead. */
    AvailableSlots$.outboundSchema = AvailableSlots$outboundSchema;
})(AvailableSlots$ || (AvailableSlots$ = {}));
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema = z
    .nativeEnum(GetRollingReleaseBillingStatusResponseBodyReason);
/** @internal */
export const GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema = GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBodyReason$;
(function (GetRollingReleaseBillingStatusResponseBodyReason$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyReason$.inboundSchema = GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBodyReason$.outboundSchema = GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBodyReason$ || (GetRollingReleaseBillingStatusResponseBodyReason$ = {}));
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody2$inboundSchema = z.object({
    availableSlots: AvailableSlots$inboundSchema,
    reason: GetRollingReleaseBillingStatusResponseBodyReason$inboundSchema,
    message: z.string(),
});
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody2$outboundSchema = z.object({
    availableSlots: AvailableSlots$outboundSchema,
    reason: GetRollingReleaseBillingStatusResponseBodyReason$outboundSchema,
    message: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBody2$;
(function (GetRollingReleaseBillingStatusResponseBody2$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody2$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody2$.inboundSchema = GetRollingReleaseBillingStatusResponseBody2$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody2$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody2$.outboundSchema = GetRollingReleaseBillingStatusResponseBody2$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBody2$ || (GetRollingReleaseBillingStatusResponseBody2$ = {}));
export function getRollingReleaseBillingStatusResponseBody2ToJSON(getRollingReleaseBillingStatusResponseBody2) {
    return JSON.stringify(GetRollingReleaseBillingStatusResponseBody2$outboundSchema.parse(getRollingReleaseBillingStatusResponseBody2));
}
export function getRollingReleaseBillingStatusResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseBillingStatusResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseBillingStatusResponseBody2' from JSON`);
}
/** @internal */
export const ResponseBodyReason$inboundSchema = z.nativeEnum(ResponseBodyReason);
/** @internal */
export const ResponseBodyReason$outboundSchema = ResponseBodyReason$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyReason$;
(function (ResponseBodyReason$) {
    /** @deprecated use `ResponseBodyReason$inboundSchema` instead. */
    ResponseBodyReason$.inboundSchema = ResponseBodyReason$inboundSchema;
    /** @deprecated use `ResponseBodyReason$outboundSchema` instead. */
    ResponseBodyReason$.outboundSchema = ResponseBodyReason$outboundSchema;
})(ResponseBodyReason$ || (ResponseBodyReason$ = {}));
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody1$inboundSchema = z.object({
    availableSlots: z.number(),
    reason: ResponseBodyReason$inboundSchema,
    message: z.string(),
});
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody1$outboundSchema = z.object({
    availableSlots: z.number(),
    reason: ResponseBodyReason$outboundSchema,
    message: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBody1$;
(function (GetRollingReleaseBillingStatusResponseBody1$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody1$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody1$.inboundSchema = GetRollingReleaseBillingStatusResponseBody1$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody1$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody1$.outboundSchema = GetRollingReleaseBillingStatusResponseBody1$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBody1$ || (GetRollingReleaseBillingStatusResponseBody1$ = {}));
export function getRollingReleaseBillingStatusResponseBody1ToJSON(getRollingReleaseBillingStatusResponseBody1) {
    return JSON.stringify(GetRollingReleaseBillingStatusResponseBody1$outboundSchema.parse(getRollingReleaseBillingStatusResponseBody1));
}
export function getRollingReleaseBillingStatusResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseBillingStatusResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseBillingStatusResponseBody1' from JSON`);
}
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody$inboundSchema = z.union([
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody3$inboundSchema),
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody1$inboundSchema),
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody2$inboundSchema),
    z.lazy(() => ResponseBody4$inboundSchema),
]);
/** @internal */
export const GetRollingReleaseBillingStatusResponseBody$outboundSchema = z.union([
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody3$outboundSchema),
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody1$outboundSchema),
    z.lazy(() => GetRollingReleaseBillingStatusResponseBody2$outboundSchema),
    z.lazy(() => ResponseBody4$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseBillingStatusResponseBody$;
(function (GetRollingReleaseBillingStatusResponseBody$) {
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody$inboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody$.inboundSchema = GetRollingReleaseBillingStatusResponseBody$inboundSchema;
    /** @deprecated use `GetRollingReleaseBillingStatusResponseBody$outboundSchema` instead. */
    GetRollingReleaseBillingStatusResponseBody$.outboundSchema = GetRollingReleaseBillingStatusResponseBody$outboundSchema;
})(GetRollingReleaseBillingStatusResponseBody$ || (GetRollingReleaseBillingStatusResponseBody$ = {}));
export function getRollingReleaseBillingStatusResponseBodyToJSON(getRollingReleaseBillingStatusResponseBody) {
    return JSON.stringify(GetRollingReleaseBillingStatusResponseBody$outboundSchema.parse(getRollingReleaseBillingStatusResponseBody));
}
export function getRollingReleaseBillingStatusResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseBillingStatusResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseBillingStatusResponseBody' from JSON`);
}
//# sourceMappingURL=getrollingreleasebillingstatusop.js.map