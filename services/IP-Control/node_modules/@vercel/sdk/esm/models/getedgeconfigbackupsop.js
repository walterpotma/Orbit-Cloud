/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const GetEdgeConfigBackupsRequest$inboundSchema = z.object({
    edgeConfigId: z.string(),
    next: z.string().optional(),
    limit: z.number().optional(),
    metadata: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetEdgeConfigBackupsRequest$outboundSchema = z.object({
    edgeConfigId: z.string(),
    next: z.string().optional(),
    limit: z.number().optional(),
    metadata: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupsRequest$;
(function (GetEdgeConfigBackupsRequest$) {
    /** @deprecated use `GetEdgeConfigBackupsRequest$inboundSchema` instead. */
    GetEdgeConfigBackupsRequest$.inboundSchema = GetEdgeConfigBackupsRequest$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupsRequest$outboundSchema` instead. */
    GetEdgeConfigBackupsRequest$.outboundSchema = GetEdgeConfigBackupsRequest$outboundSchema;
})(GetEdgeConfigBackupsRequest$ || (GetEdgeConfigBackupsRequest$ = {}));
export function getEdgeConfigBackupsRequestToJSON(getEdgeConfigBackupsRequest) {
    return JSON.stringify(GetEdgeConfigBackupsRequest$outboundSchema.parse(getEdgeConfigBackupsRequest));
}
export function getEdgeConfigBackupsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupsRequest' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupsMetadata$inboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/** @internal */
export const GetEdgeConfigBackupsMetadata$outboundSchema = z.object({
    updatedAt: z.string().optional(),
    updatedBy: z.string().optional(),
    itemsCount: z.number().optional(),
    itemsBytes: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupsMetadata$;
(function (GetEdgeConfigBackupsMetadata$) {
    /** @deprecated use `GetEdgeConfigBackupsMetadata$inboundSchema` instead. */
    GetEdgeConfigBackupsMetadata$.inboundSchema = GetEdgeConfigBackupsMetadata$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupsMetadata$outboundSchema` instead. */
    GetEdgeConfigBackupsMetadata$.outboundSchema = GetEdgeConfigBackupsMetadata$outboundSchema;
})(GetEdgeConfigBackupsMetadata$ || (GetEdgeConfigBackupsMetadata$ = {}));
export function getEdgeConfigBackupsMetadataToJSON(getEdgeConfigBackupsMetadata) {
    return JSON.stringify(GetEdgeConfigBackupsMetadata$outboundSchema.parse(getEdgeConfigBackupsMetadata));
}
export function getEdgeConfigBackupsMetadataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupsMetadata$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupsMetadata' from JSON`);
}
/** @internal */
export const Backups$inboundSchema = z.object({
    metadata: z.lazy(() => GetEdgeConfigBackupsMetadata$inboundSchema)
        .optional(),
    id: z.string(),
    lastModified: z.number(),
});
/** @internal */
export const Backups$outboundSchema = z.object({
    metadata: z.lazy(() => GetEdgeConfigBackupsMetadata$outboundSchema)
        .optional(),
    id: z.string(),
    lastModified: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Backups$;
(function (Backups$) {
    /** @deprecated use `Backups$inboundSchema` instead. */
    Backups$.inboundSchema = Backups$inboundSchema;
    /** @deprecated use `Backups$outboundSchema` instead. */
    Backups$.outboundSchema = Backups$outboundSchema;
})(Backups$ || (Backups$ = {}));
export function backupsToJSON(backups) {
    return JSON.stringify(Backups$outboundSchema.parse(backups));
}
export function backupsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Backups$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Backups' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupsPagination$inboundSchema = z.object({
    hasNext: z.boolean(),
    next: z.string().optional(),
});
/** @internal */
export const GetEdgeConfigBackupsPagination$outboundSchema = z.object({
    hasNext: z.boolean(),
    next: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupsPagination$;
(function (GetEdgeConfigBackupsPagination$) {
    /** @deprecated use `GetEdgeConfigBackupsPagination$inboundSchema` instead. */
    GetEdgeConfigBackupsPagination$.inboundSchema = GetEdgeConfigBackupsPagination$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupsPagination$outboundSchema` instead. */
    GetEdgeConfigBackupsPagination$.outboundSchema = GetEdgeConfigBackupsPagination$outboundSchema;
})(GetEdgeConfigBackupsPagination$ || (GetEdgeConfigBackupsPagination$ = {}));
export function getEdgeConfigBackupsPaginationToJSON(getEdgeConfigBackupsPagination) {
    return JSON.stringify(GetEdgeConfigBackupsPagination$outboundSchema.parse(getEdgeConfigBackupsPagination));
}
export function getEdgeConfigBackupsPaginationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupsPagination$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupsPagination' from JSON`);
}
/** @internal */
export const GetEdgeConfigBackupsResponseBody$inboundSchema = z.object({
    backups: z.array(z.lazy(() => Backups$inboundSchema)),
    pagination: z.lazy(() => GetEdgeConfigBackupsPagination$inboundSchema),
});
/** @internal */
export const GetEdgeConfigBackupsResponseBody$outboundSchema = z.object({
    backups: z.array(z.lazy(() => Backups$outboundSchema)),
    pagination: z.lazy(() => GetEdgeConfigBackupsPagination$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetEdgeConfigBackupsResponseBody$;
(function (GetEdgeConfigBackupsResponseBody$) {
    /** @deprecated use `GetEdgeConfigBackupsResponseBody$inboundSchema` instead. */
    GetEdgeConfigBackupsResponseBody$.inboundSchema = GetEdgeConfigBackupsResponseBody$inboundSchema;
    /** @deprecated use `GetEdgeConfigBackupsResponseBody$outboundSchema` instead. */
    GetEdgeConfigBackupsResponseBody$.outboundSchema = GetEdgeConfigBackupsResponseBody$outboundSchema;
})(GetEdgeConfigBackupsResponseBody$ || (GetEdgeConfigBackupsResponseBody$ = {}));
export function getEdgeConfigBackupsResponseBodyToJSON(getEdgeConfigBackupsResponseBody) {
    return JSON.stringify(GetEdgeConfigBackupsResponseBody$outboundSchema.parse(getEdgeConfigBackupsResponseBody));
}
export function getEdgeConfigBackupsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetEdgeConfigBackupsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetEdgeConfigBackupsResponseBody' from JSON`);
}
//# sourceMappingURL=getedgeconfigbackupsop.js.map