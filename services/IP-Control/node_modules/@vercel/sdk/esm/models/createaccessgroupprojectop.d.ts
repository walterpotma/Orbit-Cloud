import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The project role that will be added to this Access Group.
 */
export declare const CreateAccessGroupProjectRole: {
    readonly Admin: "ADMIN";
    readonly ProjectViewer: "PROJECT_VIEWER";
    readonly ProjectDeveloper: "PROJECT_DEVELOPER";
};
/**
 * The project role that will be added to this Access Group.
 */
export type CreateAccessGroupProjectRole = ClosedEnum<typeof CreateAccessGroupProjectRole>;
export type CreateAccessGroupProjectRequestBody = {
    /**
     * The ID of the project.
     */
    projectId: string;
    /**
     * The project role that will be added to this Access Group.
     */
    role: CreateAccessGroupProjectRole;
};
export type CreateAccessGroupProjectRequest = {
    accessGroupIdOrName: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateAccessGroupProjectRequestBody;
};
export declare const CreateAccessGroupProjectAccessGroupsRole: {
    readonly Admin: "ADMIN";
    readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    readonly ProjectViewer: "PROJECT_VIEWER";
};
export type CreateAccessGroupProjectAccessGroupsRole = ClosedEnum<typeof CreateAccessGroupProjectAccessGroupsRole>;
export type CreateAccessGroupProjectResponseBody = {
    teamId: string;
    accessGroupId: string;
    projectId: string;
    role: CreateAccessGroupProjectAccessGroupsRole;
    createdAt: string;
    updatedAt: string;
};
/** @internal */
export declare const CreateAccessGroupProjectRole$inboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupProjectRole>;
/** @internal */
export declare const CreateAccessGroupProjectRole$outboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupProjectRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjectRole$ {
    /** @deprecated use `CreateAccessGroupProjectRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
    /** @deprecated use `CreateAccessGroupProjectRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
}
/** @internal */
export declare const CreateAccessGroupProjectRequestBody$inboundSchema: z.ZodType<CreateAccessGroupProjectRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupProjectRequestBody$Outbound = {
    projectId: string;
    role: string;
};
/** @internal */
export declare const CreateAccessGroupProjectRequestBody$outboundSchema: z.ZodType<CreateAccessGroupProjectRequestBody$Outbound, z.ZodTypeDef, CreateAccessGroupProjectRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjectRequestBody$ {
    /** @deprecated use `CreateAccessGroupProjectRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupProjectRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupProjectRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupProjectRequestBody$Outbound, z.ZodTypeDef, CreateAccessGroupProjectRequestBody>;
    /** @deprecated use `CreateAccessGroupProjectRequestBody$Outbound` instead. */
    type Outbound = CreateAccessGroupProjectRequestBody$Outbound;
}
export declare function createAccessGroupProjectRequestBodyToJSON(createAccessGroupProjectRequestBody: CreateAccessGroupProjectRequestBody): string;
export declare function createAccessGroupProjectRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupProjectRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateAccessGroupProjectRequest$inboundSchema: z.ZodType<CreateAccessGroupProjectRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupProjectRequest$Outbound = {
    accessGroupIdOrName: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateAccessGroupProjectRequestBody$Outbound;
};
/** @internal */
export declare const CreateAccessGroupProjectRequest$outboundSchema: z.ZodType<CreateAccessGroupProjectRequest$Outbound, z.ZodTypeDef, CreateAccessGroupProjectRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjectRequest$ {
    /** @deprecated use `CreateAccessGroupProjectRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupProjectRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupProjectRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupProjectRequest$Outbound, z.ZodTypeDef, CreateAccessGroupProjectRequest>;
    /** @deprecated use `CreateAccessGroupProjectRequest$Outbound` instead. */
    type Outbound = CreateAccessGroupProjectRequest$Outbound;
}
export declare function createAccessGroupProjectRequestToJSON(createAccessGroupProjectRequest: CreateAccessGroupProjectRequest): string;
export declare function createAccessGroupProjectRequestFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupProjectRequest, SDKValidationError>;
/** @internal */
export declare const CreateAccessGroupProjectAccessGroupsRole$inboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupProjectAccessGroupsRole>;
/** @internal */
export declare const CreateAccessGroupProjectAccessGroupsRole$outboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupProjectAccessGroupsRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjectAccessGroupsRole$ {
    /** @deprecated use `CreateAccessGroupProjectAccessGroupsRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
        readonly ProjectViewer: "PROJECT_VIEWER";
    }>;
    /** @deprecated use `CreateAccessGroupProjectAccessGroupsRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
        readonly ProjectViewer: "PROJECT_VIEWER";
    }>;
}
/** @internal */
export declare const CreateAccessGroupProjectResponseBody$inboundSchema: z.ZodType<CreateAccessGroupProjectResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupProjectResponseBody$Outbound = {
    teamId: string;
    accessGroupId: string;
    projectId: string;
    role: string;
    createdAt: string;
    updatedAt: string;
};
/** @internal */
export declare const CreateAccessGroupProjectResponseBody$outboundSchema: z.ZodType<CreateAccessGroupProjectResponseBody$Outbound, z.ZodTypeDef, CreateAccessGroupProjectResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjectResponseBody$ {
    /** @deprecated use `CreateAccessGroupProjectResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupProjectResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupProjectResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupProjectResponseBody$Outbound, z.ZodTypeDef, CreateAccessGroupProjectResponseBody>;
    /** @deprecated use `CreateAccessGroupProjectResponseBody$Outbound` instead. */
    type Outbound = CreateAccessGroupProjectResponseBody$Outbound;
}
export declare function createAccessGroupProjectResponseBodyToJSON(createAccessGroupProjectResponseBody: CreateAccessGroupProjectResponseBody): string;
export declare function createAccessGroupProjectResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupProjectResponseBody, SDKValidationError>;
//# sourceMappingURL=createaccessgroupprojectop.d.ts.map