import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetAccountInfoRequest = {
    integrationConfigurationId: string;
};
/**
 * The best contact for the integration, which can change as team members and their roles change.
 */
export type Contact = {
    email: string;
    name?: string | undefined;
};
export type GetAccountInfoResponseBody = {
    /**
     * The name of the team the installation is tied to.
     */
    name?: string | undefined;
    /**
     * A URL linking to the installation in the Vercel Dashboard.
     */
    url: string;
    /**
     * The best contact for the integration, which can change as team members and their roles change.
     */
    contact: Contact | null;
};
/** @internal */
export declare const GetAccountInfoRequest$inboundSchema: z.ZodType<GetAccountInfoRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAccountInfoRequest$Outbound = {
    integrationConfigurationId: string;
};
/** @internal */
export declare const GetAccountInfoRequest$outboundSchema: z.ZodType<GetAccountInfoRequest$Outbound, z.ZodTypeDef, GetAccountInfoRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAccountInfoRequest$ {
    /** @deprecated use `GetAccountInfoRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAccountInfoRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAccountInfoRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAccountInfoRequest$Outbound, z.ZodTypeDef, GetAccountInfoRequest>;
    /** @deprecated use `GetAccountInfoRequest$Outbound` instead. */
    type Outbound = GetAccountInfoRequest$Outbound;
}
export declare function getAccountInfoRequestToJSON(getAccountInfoRequest: GetAccountInfoRequest): string;
export declare function getAccountInfoRequestFromJSON(jsonString: string): SafeParseResult<GetAccountInfoRequest, SDKValidationError>;
/** @internal */
export declare const Contact$inboundSchema: z.ZodType<Contact, z.ZodTypeDef, unknown>;
/** @internal */
export type Contact$Outbound = {
    email: string;
    name?: string | undefined;
};
/** @internal */
export declare const Contact$outboundSchema: z.ZodType<Contact$Outbound, z.ZodTypeDef, Contact>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Contact$ {
    /** @deprecated use `Contact$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Contact, z.ZodTypeDef, unknown>;
    /** @deprecated use `Contact$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Contact$Outbound, z.ZodTypeDef, Contact>;
    /** @deprecated use `Contact$Outbound` instead. */
    type Outbound = Contact$Outbound;
}
export declare function contactToJSON(contact: Contact): string;
export declare function contactFromJSON(jsonString: string): SafeParseResult<Contact, SDKValidationError>;
/** @internal */
export declare const GetAccountInfoResponseBody$inboundSchema: z.ZodType<GetAccountInfoResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAccountInfoResponseBody$Outbound = {
    name?: string | undefined;
    url: string;
    contact: Contact$Outbound | null;
};
/** @internal */
export declare const GetAccountInfoResponseBody$outboundSchema: z.ZodType<GetAccountInfoResponseBody$Outbound, z.ZodTypeDef, GetAccountInfoResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAccountInfoResponseBody$ {
    /** @deprecated use `GetAccountInfoResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAccountInfoResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAccountInfoResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAccountInfoResponseBody$Outbound, z.ZodTypeDef, GetAccountInfoResponseBody>;
    /** @deprecated use `GetAccountInfoResponseBody$Outbound` instead. */
    type Outbound = GetAccountInfoResponseBody$Outbound;
}
export declare function getAccountInfoResponseBodyToJSON(getAccountInfoResponseBody: GetAccountInfoResponseBody): string;
export declare function getAccountInfoResponseBodyFromJSON(jsonString: string): SafeParseResult<GetAccountInfoResponseBody, SDKValidationError>;
//# sourceMappingURL=getaccountinfoop.d.ts.map