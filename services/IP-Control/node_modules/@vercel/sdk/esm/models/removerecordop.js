/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const RemoveRecordRequest$inboundSchema = z.object({
    domain: z.string(),
    recordId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const RemoveRecordRequest$outboundSchema = z.object({
    domain: z.string(),
    recordId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveRecordRequest$;
(function (RemoveRecordRequest$) {
    /** @deprecated use `RemoveRecordRequest$inboundSchema` instead. */
    RemoveRecordRequest$.inboundSchema = RemoveRecordRequest$inboundSchema;
    /** @deprecated use `RemoveRecordRequest$outboundSchema` instead. */
    RemoveRecordRequest$.outboundSchema = RemoveRecordRequest$outboundSchema;
})(RemoveRecordRequest$ || (RemoveRecordRequest$ = {}));
export function removeRecordRequestToJSON(removeRecordRequest) {
    return JSON.stringify(RemoveRecordRequest$outboundSchema.parse(removeRecordRequest));
}
export function removeRecordRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveRecordRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveRecordRequest' from JSON`);
}
/** @internal */
export const RemoveRecordResponseBody$inboundSchema = z.object({});
/** @internal */
export const RemoveRecordResponseBody$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveRecordResponseBody$;
(function (RemoveRecordResponseBody$) {
    /** @deprecated use `RemoveRecordResponseBody$inboundSchema` instead. */
    RemoveRecordResponseBody$.inboundSchema = RemoveRecordResponseBody$inboundSchema;
    /** @deprecated use `RemoveRecordResponseBody$outboundSchema` instead. */
    RemoveRecordResponseBody$.outboundSchema = RemoveRecordResponseBody$outboundSchema;
})(RemoveRecordResponseBody$ || (RemoveRecordResponseBody$ = {}));
export function removeRecordResponseBodyToJSON(removeRecordResponseBody) {
    return JSON.stringify(RemoveRecordResponseBody$outboundSchema.parse(removeRecordResponseBody));
}
export function removeRecordResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveRecordResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveRecordResponseBody' from JSON`);
}
//# sourceMappingURL=removerecordop.js.map