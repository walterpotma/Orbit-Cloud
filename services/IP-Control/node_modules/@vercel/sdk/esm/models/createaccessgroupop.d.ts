import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The project role that will be added to this Access Group. \"null\" will remove this project level role.
 */
export declare const CreateAccessGroupRole: {
    readonly Admin: "ADMIN";
    readonly ProjectViewer: "PROJECT_VIEWER";
    readonly ProjectDeveloper: "PROJECT_DEVELOPER";
};
/**
 * The project role that will be added to this Access Group. \"null\" will remove this project level role.
 */
export type CreateAccessGroupRole = ClosedEnum<typeof CreateAccessGroupRole>;
export type CreateAccessGroupProjects = {
    /**
     * The ID of the project.
     */
    projectId: string;
    /**
     * The project role that will be added to this Access Group. \"null\" will remove this project level role.
     */
    role: CreateAccessGroupRole | null;
};
export type CreateAccessGroupRequestBody = {
    /**
     * The name of the access group
     */
    name: string;
    projects?: Array<CreateAccessGroupProjects> | undefined;
    /**
     * List of members to add to the access group.
     */
    membersToAdd?: Array<string> | undefined;
};
export type CreateAccessGroupRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateAccessGroupRequestBody;
};
export declare const CreateAccessGroupEntitlements: {
    readonly V0: "v0";
};
export type CreateAccessGroupEntitlements = ClosedEnum<typeof CreateAccessGroupEntitlements>;
export type CreateAccessGroupResponseBody = {
    entitlements: Array<CreateAccessGroupEntitlements>;
    membersCount: number;
    projectsCount: number;
    /**
     * The name of this access group.
     */
    name: string;
    /**
     * Timestamp in milliseconds when the access group was created.
     */
    createdAt: string;
    /**
     * ID of the team that this access group belongs to.
     */
    teamId: string;
    /**
     * Timestamp in milliseconds when the access group was last updated.
     */
    updatedAt: string;
    /**
     * ID of the access group.
     */
    accessGroupId: string;
    /**
     * Roles that the team has in the access group.
     */
    teamRoles?: Array<string> | undefined;
    /**
     * Permissions that the team has in the access group.
     */
    teamPermissions?: Array<string> | undefined;
};
/** @internal */
export declare const CreateAccessGroupRole$inboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupRole>;
/** @internal */
export declare const CreateAccessGroupRole$outboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupRole>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupRole$ {
    /** @deprecated use `CreateAccessGroupRole$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
    /** @deprecated use `CreateAccessGroupRole$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Admin: "ADMIN";
        readonly ProjectViewer: "PROJECT_VIEWER";
        readonly ProjectDeveloper: "PROJECT_DEVELOPER";
    }>;
}
/** @internal */
export declare const CreateAccessGroupProjects$inboundSchema: z.ZodType<CreateAccessGroupProjects, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupProjects$Outbound = {
    projectId: string;
    role: string | null;
};
/** @internal */
export declare const CreateAccessGroupProjects$outboundSchema: z.ZodType<CreateAccessGroupProjects$Outbound, z.ZodTypeDef, CreateAccessGroupProjects>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupProjects$ {
    /** @deprecated use `CreateAccessGroupProjects$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupProjects, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupProjects$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupProjects$Outbound, z.ZodTypeDef, CreateAccessGroupProjects>;
    /** @deprecated use `CreateAccessGroupProjects$Outbound` instead. */
    type Outbound = CreateAccessGroupProjects$Outbound;
}
export declare function createAccessGroupProjectsToJSON(createAccessGroupProjects: CreateAccessGroupProjects): string;
export declare function createAccessGroupProjectsFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupProjects, SDKValidationError>;
/** @internal */
export declare const CreateAccessGroupRequestBody$inboundSchema: z.ZodType<CreateAccessGroupRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupRequestBody$Outbound = {
    name: string;
    projects?: Array<CreateAccessGroupProjects$Outbound> | undefined;
    membersToAdd?: Array<string> | undefined;
};
/** @internal */
export declare const CreateAccessGroupRequestBody$outboundSchema: z.ZodType<CreateAccessGroupRequestBody$Outbound, z.ZodTypeDef, CreateAccessGroupRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupRequestBody$ {
    /** @deprecated use `CreateAccessGroupRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupRequestBody$Outbound, z.ZodTypeDef, CreateAccessGroupRequestBody>;
    /** @deprecated use `CreateAccessGroupRequestBody$Outbound` instead. */
    type Outbound = CreateAccessGroupRequestBody$Outbound;
}
export declare function createAccessGroupRequestBodyToJSON(createAccessGroupRequestBody: CreateAccessGroupRequestBody): string;
export declare function createAccessGroupRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateAccessGroupRequest$inboundSchema: z.ZodType<CreateAccessGroupRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupRequest$Outbound = {
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateAccessGroupRequestBody$Outbound;
};
/** @internal */
export declare const CreateAccessGroupRequest$outboundSchema: z.ZodType<CreateAccessGroupRequest$Outbound, z.ZodTypeDef, CreateAccessGroupRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupRequest$ {
    /** @deprecated use `CreateAccessGroupRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupRequest$Outbound, z.ZodTypeDef, CreateAccessGroupRequest>;
    /** @deprecated use `CreateAccessGroupRequest$Outbound` instead. */
    type Outbound = CreateAccessGroupRequest$Outbound;
}
export declare function createAccessGroupRequestToJSON(createAccessGroupRequest: CreateAccessGroupRequest): string;
export declare function createAccessGroupRequestFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupRequest, SDKValidationError>;
/** @internal */
export declare const CreateAccessGroupEntitlements$inboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupEntitlements>;
/** @internal */
export declare const CreateAccessGroupEntitlements$outboundSchema: z.ZodNativeEnum<typeof CreateAccessGroupEntitlements>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupEntitlements$ {
    /** @deprecated use `CreateAccessGroupEntitlements$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly V0: "v0";
    }>;
    /** @deprecated use `CreateAccessGroupEntitlements$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly V0: "v0";
    }>;
}
/** @internal */
export declare const CreateAccessGroupResponseBody$inboundSchema: z.ZodType<CreateAccessGroupResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAccessGroupResponseBody$Outbound = {
    entitlements: Array<string>;
    membersCount: number;
    projectsCount: number;
    name: string;
    createdAt: string;
    teamId: string;
    updatedAt: string;
    accessGroupId: string;
    teamRoles?: Array<string> | undefined;
    teamPermissions?: Array<string> | undefined;
};
/** @internal */
export declare const CreateAccessGroupResponseBody$outboundSchema: z.ZodType<CreateAccessGroupResponseBody$Outbound, z.ZodTypeDef, CreateAccessGroupResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAccessGroupResponseBody$ {
    /** @deprecated use `CreateAccessGroupResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAccessGroupResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAccessGroupResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAccessGroupResponseBody$Outbound, z.ZodTypeDef, CreateAccessGroupResponseBody>;
    /** @deprecated use `CreateAccessGroupResponseBody$Outbound` instead. */
    type Outbound = CreateAccessGroupResponseBody$Outbound;
}
export declare function createAccessGroupResponseBodyToJSON(createAccessGroupResponseBody: CreateAccessGroupResponseBody): string;
export declare function createAccessGroupResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateAccessGroupResponseBody, SDKValidationError>;
//# sourceMappingURL=createaccessgroupop.d.ts.map