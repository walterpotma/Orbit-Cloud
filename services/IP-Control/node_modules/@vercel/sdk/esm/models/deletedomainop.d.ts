import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type DeleteDomainRequest = {
    /**
     * The name of the domain.
     */
    domain: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * Successful response removing a domain.
 */
export type DeleteDomainResponseBody = {
    uid: string;
};
/** @internal */
export declare const DeleteDomainRequest$inboundSchema: z.ZodType<DeleteDomainRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDomainRequest$Outbound = {
    domain: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const DeleteDomainRequest$outboundSchema: z.ZodType<DeleteDomainRequest$Outbound, z.ZodTypeDef, DeleteDomainRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDomainRequest$ {
    /** @deprecated use `DeleteDomainRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDomainRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDomainRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDomainRequest$Outbound, z.ZodTypeDef, DeleteDomainRequest>;
    /** @deprecated use `DeleteDomainRequest$Outbound` instead. */
    type Outbound = DeleteDomainRequest$Outbound;
}
export declare function deleteDomainRequestToJSON(deleteDomainRequest: DeleteDomainRequest): string;
export declare function deleteDomainRequestFromJSON(jsonString: string): SafeParseResult<DeleteDomainRequest, SDKValidationError>;
/** @internal */
export declare const DeleteDomainResponseBody$inboundSchema: z.ZodType<DeleteDomainResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteDomainResponseBody$Outbound = {
    uid: string;
};
/** @internal */
export declare const DeleteDomainResponseBody$outboundSchema: z.ZodType<DeleteDomainResponseBody$Outbound, z.ZodTypeDef, DeleteDomainResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteDomainResponseBody$ {
    /** @deprecated use `DeleteDomainResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteDomainResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteDomainResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteDomainResponseBody$Outbound, z.ZodTypeDef, DeleteDomainResponseBody>;
    /** @deprecated use `DeleteDomainResponseBody$Outbound` instead. */
    type Outbound = DeleteDomainResponseBody$Outbound;
}
export declare function deleteDomainResponseBodyToJSON(deleteDomainResponseBody: DeleteDomainResponseBody): string;
export declare function deleteDomainResponseBodyFromJSON(jsonString: string): SafeParseResult<DeleteDomainResponseBody, SDKValidationError>;
//# sourceMappingURL=deletedomainop.d.ts.map