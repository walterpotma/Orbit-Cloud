import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type UpdateRollingReleaseConfigRequest = {
    /**
     * Project ID or project name (URL-encoded)
     */
    idOrName: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * A stage object configured for a rolling release once a new deployment is triggered the first stage will be read in the proxy for first time visitors, and if a RNG < targetPercentage then it will serve the new deployment. Upon approval the next stage will be read, etc.
 */
export type ResponseBodyStages = {
    /**
     * The percentage of traffic to serve to the canary deployment (0-100)
     */
    targetPercentage: number;
    /**
     * Whether or not this stage requires manual approval to proceed
     */
    requireApproval?: boolean | undefined;
    /**
     * Duration in minutes for automatic advancement to the next stage
     */
    duration?: number | undefined;
};
export type ResponseBodyRollingRelease = {
    stages?: Array<ResponseBodyStages> | null | undefined;
};
export type UpdateRollingReleaseConfigResponseBody2 = {
    rollingRelease: ResponseBodyRollingRelease | null;
};
export type UpdateRollingReleaseConfigResponseBody1 = {
    rollingRelease?: any | null | undefined;
};
export type UpdateRollingReleaseConfigResponseBody = UpdateRollingReleaseConfigResponseBody1 | UpdateRollingReleaseConfigResponseBody2;
/** @internal */
export declare const UpdateRollingReleaseConfigRequest$inboundSchema: z.ZodType<UpdateRollingReleaseConfigRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRollingReleaseConfigRequest$Outbound = {
    idOrName: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const UpdateRollingReleaseConfigRequest$outboundSchema: z.ZodType<UpdateRollingReleaseConfigRequest$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRollingReleaseConfigRequest$ {
    /** @deprecated use `UpdateRollingReleaseConfigRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRollingReleaseConfigRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRollingReleaseConfigRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRollingReleaseConfigRequest$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigRequest>;
    /** @deprecated use `UpdateRollingReleaseConfigRequest$Outbound` instead. */
    type Outbound = UpdateRollingReleaseConfigRequest$Outbound;
}
export declare function updateRollingReleaseConfigRequestToJSON(updateRollingReleaseConfigRequest: UpdateRollingReleaseConfigRequest): string;
export declare function updateRollingReleaseConfigRequestFromJSON(jsonString: string): SafeParseResult<UpdateRollingReleaseConfigRequest, SDKValidationError>;
/** @internal */
export declare const ResponseBodyStages$inboundSchema: z.ZodType<ResponseBodyStages, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyStages$Outbound = {
    targetPercentage: number;
    requireApproval?: boolean | undefined;
    duration?: number | undefined;
};
/** @internal */
export declare const ResponseBodyStages$outboundSchema: z.ZodType<ResponseBodyStages$Outbound, z.ZodTypeDef, ResponseBodyStages>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyStages$ {
    /** @deprecated use `ResponseBodyStages$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyStages, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyStages$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyStages$Outbound, z.ZodTypeDef, ResponseBodyStages>;
    /** @deprecated use `ResponseBodyStages$Outbound` instead. */
    type Outbound = ResponseBodyStages$Outbound;
}
export declare function responseBodyStagesToJSON(responseBodyStages: ResponseBodyStages): string;
export declare function responseBodyStagesFromJSON(jsonString: string): SafeParseResult<ResponseBodyStages, SDKValidationError>;
/** @internal */
export declare const ResponseBodyRollingRelease$inboundSchema: z.ZodType<ResponseBodyRollingRelease, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyRollingRelease$Outbound = {
    stages?: Array<ResponseBodyStages$Outbound> | null | undefined;
};
/** @internal */
export declare const ResponseBodyRollingRelease$outboundSchema: z.ZodType<ResponseBodyRollingRelease$Outbound, z.ZodTypeDef, ResponseBodyRollingRelease>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyRollingRelease$ {
    /** @deprecated use `ResponseBodyRollingRelease$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyRollingRelease, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyRollingRelease$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyRollingRelease$Outbound, z.ZodTypeDef, ResponseBodyRollingRelease>;
    /** @deprecated use `ResponseBodyRollingRelease$Outbound` instead. */
    type Outbound = ResponseBodyRollingRelease$Outbound;
}
export declare function responseBodyRollingReleaseToJSON(responseBodyRollingRelease: ResponseBodyRollingRelease): string;
export declare function responseBodyRollingReleaseFromJSON(jsonString: string): SafeParseResult<ResponseBodyRollingRelease, SDKValidationError>;
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody2$inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRollingReleaseConfigResponseBody2$Outbound = {
    rollingRelease: ResponseBodyRollingRelease$Outbound | null;
};
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody2$outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody2$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRollingReleaseConfigResponseBody2$ {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody2$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody2>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody2$Outbound` instead. */
    type Outbound = UpdateRollingReleaseConfigResponseBody2$Outbound;
}
export declare function updateRollingReleaseConfigResponseBody2ToJSON(updateRollingReleaseConfigResponseBody2: UpdateRollingReleaseConfigResponseBody2): string;
export declare function updateRollingReleaseConfigResponseBody2FromJSON(jsonString: string): SafeParseResult<UpdateRollingReleaseConfigResponseBody2, SDKValidationError>;
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody1$inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRollingReleaseConfigResponseBody1$Outbound = {
    rollingRelease?: any | null | undefined;
};
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody1$outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody1$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRollingReleaseConfigResponseBody1$ {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody1$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody1>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody1$Outbound` instead. */
    type Outbound = UpdateRollingReleaseConfigResponseBody1$Outbound;
}
export declare function updateRollingReleaseConfigResponseBody1ToJSON(updateRollingReleaseConfigResponseBody1: UpdateRollingReleaseConfigResponseBody1): string;
export declare function updateRollingReleaseConfigResponseBody1FromJSON(jsonString: string): SafeParseResult<UpdateRollingReleaseConfigResponseBody1, SDKValidationError>;
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody$inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRollingReleaseConfigResponseBody$Outbound = UpdateRollingReleaseConfigResponseBody1$Outbound | UpdateRollingReleaseConfigResponseBody2$Outbound;
/** @internal */
export declare const UpdateRollingReleaseConfigResponseBody$outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRollingReleaseConfigResponseBody$ {
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRollingReleaseConfigResponseBody$Outbound, z.ZodTypeDef, UpdateRollingReleaseConfigResponseBody>;
    /** @deprecated use `UpdateRollingReleaseConfigResponseBody$Outbound` instead. */
    type Outbound = UpdateRollingReleaseConfigResponseBody$Outbound;
}
export declare function updateRollingReleaseConfigResponseBodyToJSON(updateRollingReleaseConfigResponseBody: UpdateRollingReleaseConfigResponseBody): string;
export declare function updateRollingReleaseConfigResponseBodyFromJSON(jsonString: string): SafeParseResult<UpdateRollingReleaseConfigResponseBody, SDKValidationError>;
//# sourceMappingURL=updaterollingreleaseconfigop.d.ts.map