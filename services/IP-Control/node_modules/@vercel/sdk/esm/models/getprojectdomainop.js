/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const GetProjectDomainRequest$inboundSchema = z.object({
    idOrName: z.string(),
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetProjectDomainRequest$outboundSchema = z.object({
    idOrName: z.string(),
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectDomainRequest$;
(function (GetProjectDomainRequest$) {
    /** @deprecated use `GetProjectDomainRequest$inboundSchema` instead. */
    GetProjectDomainRequest$.inboundSchema = GetProjectDomainRequest$inboundSchema;
    /** @deprecated use `GetProjectDomainRequest$outboundSchema` instead. */
    GetProjectDomainRequest$.outboundSchema = GetProjectDomainRequest$outboundSchema;
})(GetProjectDomainRequest$ || (GetProjectDomainRequest$ = {}));
export function getProjectDomainRequestToJSON(getProjectDomainRequest) {
    return JSON.stringify(GetProjectDomainRequest$outboundSchema.parse(getProjectDomainRequest));
}
export function getProjectDomainRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectDomainRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectDomainRequest' from JSON`);
}
/** @internal */
export const Verification$inboundSchema = z.object({
    type: z.string(),
    domain: z.string(),
    value: z.string(),
    reason: z.string(),
});
/** @internal */
export const Verification$outboundSchema = z.object({
    type: z.string(),
    domain: z.string(),
    value: z.string(),
    reason: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Verification$;
(function (Verification$) {
    /** @deprecated use `Verification$inboundSchema` instead. */
    Verification$.inboundSchema = Verification$inboundSchema;
    /** @deprecated use `Verification$outboundSchema` instead. */
    Verification$.outboundSchema = Verification$outboundSchema;
})(Verification$ || (Verification$ = {}));
export function verificationToJSON(verification) {
    return JSON.stringify(Verification$outboundSchema.parse(verification));
}
export function verificationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Verification$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Verification' from JSON`);
}
/** @internal */
export const GetProjectDomainResponseBody$inboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
    verification: z.array(z.lazy(() => Verification$inboundSchema)).optional(),
});
/** @internal */
export const GetProjectDomainResponseBody$outboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
    verification: z.array(z.lazy(() => Verification$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetProjectDomainResponseBody$;
(function (GetProjectDomainResponseBody$) {
    /** @deprecated use `GetProjectDomainResponseBody$inboundSchema` instead. */
    GetProjectDomainResponseBody$.inboundSchema = GetProjectDomainResponseBody$inboundSchema;
    /** @deprecated use `GetProjectDomainResponseBody$outboundSchema` instead. */
    GetProjectDomainResponseBody$.outboundSchema = GetProjectDomainResponseBody$outboundSchema;
})(GetProjectDomainResponseBody$ || (GetProjectDomainResponseBody$ = {}));
export function getProjectDomainResponseBodyToJSON(getProjectDomainResponseBody) {
    return JSON.stringify(GetProjectDomainResponseBody$outboundSchema.parse(getProjectDomainResponseBody));
}
export function getProjectDomainResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetProjectDomainResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetProjectDomainResponseBody' from JSON`);
}
//# sourceMappingURL=getprojectdomainop.js.map