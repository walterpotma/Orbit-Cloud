/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteDomainRequest$inboundSchema = z.object({
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const DeleteDomainRequest$outboundSchema = z.object({
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteDomainRequest$;
(function (DeleteDomainRequest$) {
    /** @deprecated use `DeleteDomainRequest$inboundSchema` instead. */
    DeleteDomainRequest$.inboundSchema = DeleteDomainRequest$inboundSchema;
    /** @deprecated use `DeleteDomainRequest$outboundSchema` instead. */
    DeleteDomainRequest$.outboundSchema = DeleteDomainRequest$outboundSchema;
})(DeleteDomainRequest$ || (DeleteDomainRequest$ = {}));
export function deleteDomainRequestToJSON(deleteDomainRequest) {
    return JSON.stringify(DeleteDomainRequest$outboundSchema.parse(deleteDomainRequest));
}
export function deleteDomainRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteDomainRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteDomainRequest' from JSON`);
}
/** @internal */
export const DeleteDomainResponseBody$inboundSchema = z.object({
    uid: z.string(),
});
/** @internal */
export const DeleteDomainResponseBody$outboundSchema = z.object({
    uid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteDomainResponseBody$;
(function (DeleteDomainResponseBody$) {
    /** @deprecated use `DeleteDomainResponseBody$inboundSchema` instead. */
    DeleteDomainResponseBody$.inboundSchema = DeleteDomainResponseBody$inboundSchema;
    /** @deprecated use `DeleteDomainResponseBody$outboundSchema` instead. */
    DeleteDomainResponseBody$.outboundSchema = DeleteDomainResponseBody$outboundSchema;
})(DeleteDomainResponseBody$ || (DeleteDomainResponseBody$ = {}));
export function deleteDomainResponseBodyToJSON(deleteDomainResponseBody) {
    return JSON.stringify(DeleteDomainResponseBody$outboundSchema.parse(deleteDomainResponseBody));
}
export function deleteDomainResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteDomainResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteDomainResponseBody' from JSON`);
}
//# sourceMappingURL=deletedomainop.js.map