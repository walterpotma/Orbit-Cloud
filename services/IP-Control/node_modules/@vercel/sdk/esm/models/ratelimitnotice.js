/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const RateLimitNotice$inboundSchema = z.object({
    remaining: z.number().int(),
    reset: z.number().int(),
    resetMs: z.number().int(),
    total: z.number().int(),
});
/** @internal */
export const RateLimitNotice$outboundSchema = z.object({
    remaining: z.number().int(),
    reset: z.number().int(),
    resetMs: z.number().int(),
    total: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RateLimitNotice$;
(function (RateLimitNotice$) {
    /** @deprecated use `RateLimitNotice$inboundSchema` instead. */
    RateLimitNotice$.inboundSchema = RateLimitNotice$inboundSchema;
    /** @deprecated use `RateLimitNotice$outboundSchema` instead. */
    RateLimitNotice$.outboundSchema = RateLimitNotice$outboundSchema;
})(RateLimitNotice$ || (RateLimitNotice$ = {}));
export function rateLimitNoticeToJSON(rateLimitNotice) {
    return JSON.stringify(RateLimitNotice$outboundSchema.parse(rateLimitNotice));
}
export function rateLimitNoticeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RateLimitNotice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RateLimitNotice' from JSON`);
}
//# sourceMappingURL=ratelimitnotice.js.map