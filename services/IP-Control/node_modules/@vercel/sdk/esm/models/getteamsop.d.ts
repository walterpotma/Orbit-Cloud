import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import { Team, Team$Outbound } from "./team.js";
import { TeamLimited, TeamLimited$Outbound } from "./teamlimited.js";
export type GetTeamsRequest = {
    /**
     * Maximum number of Teams which may be returned.
     */
    limit?: number | undefined;
    /**
     * Timestamp (in milliseconds) to only include Teams created since then.
     */
    since?: number | undefined;
    /**
     * Timestamp (in milliseconds) to only include Teams created until then.
     */
    until?: number | undefined;
};
export type GetTeamsTeams = Team | TeamLimited;
/**
 * A paginated list of teams.
 */
export type GetTeamsResponseBody = {
    teams: Array<Team | TeamLimited>;
    /**
     * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
     */
    pagination: Pagination;
};
/** @internal */
export declare const GetTeamsRequest$inboundSchema: z.ZodType<GetTeamsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTeamsRequest$Outbound = {
    limit?: number | undefined;
    since?: number | undefined;
    until?: number | undefined;
};
/** @internal */
export declare const GetTeamsRequest$outboundSchema: z.ZodType<GetTeamsRequest$Outbound, z.ZodTypeDef, GetTeamsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTeamsRequest$ {
    /** @deprecated use `GetTeamsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTeamsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTeamsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTeamsRequest$Outbound, z.ZodTypeDef, GetTeamsRequest>;
    /** @deprecated use `GetTeamsRequest$Outbound` instead. */
    type Outbound = GetTeamsRequest$Outbound;
}
export declare function getTeamsRequestToJSON(getTeamsRequest: GetTeamsRequest): string;
export declare function getTeamsRequestFromJSON(jsonString: string): SafeParseResult<GetTeamsRequest, SDKValidationError>;
/** @internal */
export declare const GetTeamsTeams$inboundSchema: z.ZodType<GetTeamsTeams, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTeamsTeams$Outbound = Team$Outbound | TeamLimited$Outbound;
/** @internal */
export declare const GetTeamsTeams$outboundSchema: z.ZodType<GetTeamsTeams$Outbound, z.ZodTypeDef, GetTeamsTeams>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTeamsTeams$ {
    /** @deprecated use `GetTeamsTeams$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTeamsTeams, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTeamsTeams$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTeamsTeams$Outbound, z.ZodTypeDef, GetTeamsTeams>;
    /** @deprecated use `GetTeamsTeams$Outbound` instead. */
    type Outbound = GetTeamsTeams$Outbound;
}
export declare function getTeamsTeamsToJSON(getTeamsTeams: GetTeamsTeams): string;
export declare function getTeamsTeamsFromJSON(jsonString: string): SafeParseResult<GetTeamsTeams, SDKValidationError>;
/** @internal */
export declare const GetTeamsResponseBody$inboundSchema: z.ZodType<GetTeamsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTeamsResponseBody$Outbound = {
    teams: Array<Team$Outbound | TeamLimited$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const GetTeamsResponseBody$outboundSchema: z.ZodType<GetTeamsResponseBody$Outbound, z.ZodTypeDef, GetTeamsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTeamsResponseBody$ {
    /** @deprecated use `GetTeamsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTeamsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTeamsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTeamsResponseBody$Outbound, z.ZodTypeDef, GetTeamsResponseBody>;
    /** @deprecated use `GetTeamsResponseBody$Outbound` instead. */
    type Outbound = GetTeamsResponseBody$Outbound;
}
export declare function getTeamsResponseBodyToJSON(getTeamsResponseBody: GetTeamsResponseBody): string;
export declare function getTeamsResponseBodyFromJSON(jsonString: string): SafeParseResult<GetTeamsResponseBody, SDKValidationError>;
//# sourceMappingURL=getteamsop.d.ts.map