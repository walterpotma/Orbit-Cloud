/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const GetTeamRequest$inboundSchema = z.object({
    slug: z.string().optional(),
    teamId: z.string(),
});
/** @internal */
export const GetTeamRequest$outboundSchema = z.object({
    slug: z.string().optional(),
    teamId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetTeamRequest$;
(function (GetTeamRequest$) {
    /** @deprecated use `GetTeamRequest$inboundSchema` instead. */
    GetTeamRequest$.inboundSchema = GetTeamRequest$inboundSchema;
    /** @deprecated use `GetTeamRequest$outboundSchema` instead. */
    GetTeamRequest$.outboundSchema = GetTeamRequest$outboundSchema;
})(GetTeamRequest$ || (GetTeamRequest$ = {}));
export function getTeamRequestToJSON(getTeamRequest) {
    return JSON.stringify(GetTeamRequest$outboundSchema.parse(getTeamRequest));
}
export function getTeamRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetTeamRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetTeamRequest' from JSON`);
}
//# sourceMappingURL=getteamop.js.map