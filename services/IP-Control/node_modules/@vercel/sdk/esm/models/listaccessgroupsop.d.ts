import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type ListAccessGroupsRequest = {
    /**
     * Filter access groups by project.
     */
    projectId?: string | undefined;
    /**
     * Search for access groups by name.
     */
    search?: string | undefined;
    /**
     * Number of members to include in the response.
     */
    membersLimit?: number | undefined;
    /**
     * Number of projects to include in the response.
     */
    projectsLimit?: number | undefined;
    /**
     * Limit how many access group should be returned.
     */
    limit?: number | undefined;
    /**
     * Continuation cursor to retrieve the next page of results.
     */
    next?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export type AccessGroups = {
    members?: Array<string> | undefined;
    projects?: Array<string> | undefined;
    entitlements?: Array<string> | undefined;
    teamPermissions?: Array<string> | undefined;
    isDsyncManaged: boolean;
    /**
     * The name of this access group.
     */
    name: string;
    /**
     * Timestamp in milliseconds when the access group was created.
     */
    createdAt: string;
    /**
     * ID of the team that this access group belongs to.
     */
    teamId: string;
    /**
     * Timestamp in milliseconds when the access group was last updated.
     */
    updatedAt: string;
    /**
     * ID of the access group.
     */
    accessGroupId: string;
    /**
     * Number of members in the access group.
     */
    membersCount: number;
    /**
     * Number of projects in the access group.
     */
    projectsCount: number;
    /**
     * Roles that the team has in the access group.
     */
    teamRoles?: Array<string> | undefined;
};
export type ResponseBodyPagination = {
    count: number;
    next: string | null;
};
export type ListAccessGroupsResponseBody2 = {
    accessGroups: Array<AccessGroups>;
    pagination: ResponseBodyPagination;
};
export type ListAccessGroupsResponseBody1 = {};
export type ListAccessGroupsResponseBody = ListAccessGroupsResponseBody2 | ListAccessGroupsResponseBody1;
/** @internal */
export declare const ListAccessGroupsRequest$inboundSchema: z.ZodType<ListAccessGroupsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupsRequest$Outbound = {
    projectId?: string | undefined;
    search?: string | undefined;
    membersLimit?: number | undefined;
    projectsLimit?: number | undefined;
    limit?: number | undefined;
    next?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const ListAccessGroupsRequest$outboundSchema: z.ZodType<ListAccessGroupsRequest$Outbound, z.ZodTypeDef, ListAccessGroupsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupsRequest$ {
    /** @deprecated use `ListAccessGroupsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupsRequest$Outbound, z.ZodTypeDef, ListAccessGroupsRequest>;
    /** @deprecated use `ListAccessGroupsRequest$Outbound` instead. */
    type Outbound = ListAccessGroupsRequest$Outbound;
}
export declare function listAccessGroupsRequestToJSON(listAccessGroupsRequest: ListAccessGroupsRequest): string;
export declare function listAccessGroupsRequestFromJSON(jsonString: string): SafeParseResult<ListAccessGroupsRequest, SDKValidationError>;
/** @internal */
export declare const AccessGroups$inboundSchema: z.ZodType<AccessGroups, z.ZodTypeDef, unknown>;
/** @internal */
export type AccessGroups$Outbound = {
    members?: Array<string> | undefined;
    projects?: Array<string> | undefined;
    entitlements?: Array<string> | undefined;
    teamPermissions?: Array<string> | undefined;
    isDsyncManaged: boolean;
    name: string;
    createdAt: string;
    teamId: string;
    updatedAt: string;
    accessGroupId: string;
    membersCount: number;
    projectsCount: number;
    teamRoles?: Array<string> | undefined;
};
/** @internal */
export declare const AccessGroups$outboundSchema: z.ZodType<AccessGroups$Outbound, z.ZodTypeDef, AccessGroups>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AccessGroups$ {
    /** @deprecated use `AccessGroups$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AccessGroups, z.ZodTypeDef, unknown>;
    /** @deprecated use `AccessGroups$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AccessGroups$Outbound, z.ZodTypeDef, AccessGroups>;
    /** @deprecated use `AccessGroups$Outbound` instead. */
    type Outbound = AccessGroups$Outbound;
}
export declare function accessGroupsToJSON(accessGroups: AccessGroups): string;
export declare function accessGroupsFromJSON(jsonString: string): SafeParseResult<AccessGroups, SDKValidationError>;
/** @internal */
export declare const ResponseBodyPagination$inboundSchema: z.ZodType<ResponseBodyPagination, z.ZodTypeDef, unknown>;
/** @internal */
export type ResponseBodyPagination$Outbound = {
    count: number;
    next: string | null;
};
/** @internal */
export declare const ResponseBodyPagination$outboundSchema: z.ZodType<ResponseBodyPagination$Outbound, z.ZodTypeDef, ResponseBodyPagination>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseBodyPagination$ {
    /** @deprecated use `ResponseBodyPagination$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResponseBodyPagination, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResponseBodyPagination$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResponseBodyPagination$Outbound, z.ZodTypeDef, ResponseBodyPagination>;
    /** @deprecated use `ResponseBodyPagination$Outbound` instead. */
    type Outbound = ResponseBodyPagination$Outbound;
}
export declare function responseBodyPaginationToJSON(responseBodyPagination: ResponseBodyPagination): string;
export declare function responseBodyPaginationFromJSON(jsonString: string): SafeParseResult<ResponseBodyPagination, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupsResponseBody2$inboundSchema: z.ZodType<ListAccessGroupsResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupsResponseBody2$Outbound = {
    accessGroups: Array<AccessGroups$Outbound>;
    pagination: ResponseBodyPagination$Outbound;
};
/** @internal */
export declare const ListAccessGroupsResponseBody2$outboundSchema: z.ZodType<ListAccessGroupsResponseBody2$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupsResponseBody2$ {
    /** @deprecated use `ListAccessGroupsResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupsResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupsResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupsResponseBody2$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody2>;
    /** @deprecated use `ListAccessGroupsResponseBody2$Outbound` instead. */
    type Outbound = ListAccessGroupsResponseBody2$Outbound;
}
export declare function listAccessGroupsResponseBody2ToJSON(listAccessGroupsResponseBody2: ListAccessGroupsResponseBody2): string;
export declare function listAccessGroupsResponseBody2FromJSON(jsonString: string): SafeParseResult<ListAccessGroupsResponseBody2, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupsResponseBody1$inboundSchema: z.ZodType<ListAccessGroupsResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupsResponseBody1$Outbound = {};
/** @internal */
export declare const ListAccessGroupsResponseBody1$outboundSchema: z.ZodType<ListAccessGroupsResponseBody1$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupsResponseBody1$ {
    /** @deprecated use `ListAccessGroupsResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupsResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupsResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupsResponseBody1$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody1>;
    /** @deprecated use `ListAccessGroupsResponseBody1$Outbound` instead. */
    type Outbound = ListAccessGroupsResponseBody1$Outbound;
}
export declare function listAccessGroupsResponseBody1ToJSON(listAccessGroupsResponseBody1: ListAccessGroupsResponseBody1): string;
export declare function listAccessGroupsResponseBody1FromJSON(jsonString: string): SafeParseResult<ListAccessGroupsResponseBody1, SDKValidationError>;
/** @internal */
export declare const ListAccessGroupsResponseBody$inboundSchema: z.ZodType<ListAccessGroupsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAccessGroupsResponseBody$Outbound = ListAccessGroupsResponseBody2$Outbound | ListAccessGroupsResponseBody1$Outbound;
/** @internal */
export declare const ListAccessGroupsResponseBody$outboundSchema: z.ZodType<ListAccessGroupsResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAccessGroupsResponseBody$ {
    /** @deprecated use `ListAccessGroupsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAccessGroupsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAccessGroupsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAccessGroupsResponseBody$Outbound, z.ZodTypeDef, ListAccessGroupsResponseBody>;
    /** @deprecated use `ListAccessGroupsResponseBody$Outbound` instead. */
    type Outbound = ListAccessGroupsResponseBody$Outbound;
}
export declare function listAccessGroupsResponseBodyToJSON(listAccessGroupsResponseBody: ListAccessGroupsResponseBody): string;
export declare function listAccessGroupsResponseBodyFromJSON(jsonString: string): SafeParseResult<ListAccessGroupsResponseBody, SDKValidationError>;
//# sourceMappingURL=listaccessgroupsop.d.ts.map