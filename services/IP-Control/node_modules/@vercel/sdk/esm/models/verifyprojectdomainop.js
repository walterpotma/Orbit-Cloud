/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const VerifyProjectDomainRequest$inboundSchema = z.object({
    idOrName: z.string(),
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const VerifyProjectDomainRequest$outboundSchema = z.object({
    idOrName: z.string(),
    domain: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var VerifyProjectDomainRequest$;
(function (VerifyProjectDomainRequest$) {
    /** @deprecated use `VerifyProjectDomainRequest$inboundSchema` instead. */
    VerifyProjectDomainRequest$.inboundSchema = VerifyProjectDomainRequest$inboundSchema;
    /** @deprecated use `VerifyProjectDomainRequest$outboundSchema` instead. */
    VerifyProjectDomainRequest$.outboundSchema = VerifyProjectDomainRequest$outboundSchema;
})(VerifyProjectDomainRequest$ || (VerifyProjectDomainRequest$ = {}));
export function verifyProjectDomainRequestToJSON(verifyProjectDomainRequest) {
    return JSON.stringify(VerifyProjectDomainRequest$outboundSchema.parse(verifyProjectDomainRequest));
}
export function verifyProjectDomainRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => VerifyProjectDomainRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'VerifyProjectDomainRequest' from JSON`);
}
/** @internal */
export const VerifyProjectDomainResponseBody$inboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
});
/** @internal */
export const VerifyProjectDomainResponseBody$outboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var VerifyProjectDomainResponseBody$;
(function (VerifyProjectDomainResponseBody$) {
    /** @deprecated use `VerifyProjectDomainResponseBody$inboundSchema` instead. */
    VerifyProjectDomainResponseBody$.inboundSchema = VerifyProjectDomainResponseBody$inboundSchema;
    /** @deprecated use `VerifyProjectDomainResponseBody$outboundSchema` instead. */
    VerifyProjectDomainResponseBody$.outboundSchema = VerifyProjectDomainResponseBody$outboundSchema;
})(VerifyProjectDomainResponseBody$ || (VerifyProjectDomainResponseBody$ = {}));
export function verifyProjectDomainResponseBodyToJSON(verifyProjectDomainResponseBody) {
    return JSON.stringify(VerifyProjectDomainResponseBody$outboundSchema.parse(verifyProjectDomainResponseBody));
}
export function verifyProjectDomainResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => VerifyProjectDomainResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'VerifyProjectDomainResponseBody' from JSON`);
}
//# sourceMappingURL=verifyprojectdomainop.js.map