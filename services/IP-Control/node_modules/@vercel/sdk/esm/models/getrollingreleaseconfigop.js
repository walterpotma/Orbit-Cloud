/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const GetRollingReleaseConfigRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetRollingReleaseConfigRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseConfigRequest$;
(function (GetRollingReleaseConfigRequest$) {
    /** @deprecated use `GetRollingReleaseConfigRequest$inboundSchema` instead. */
    GetRollingReleaseConfigRequest$.inboundSchema = GetRollingReleaseConfigRequest$inboundSchema;
    /** @deprecated use `GetRollingReleaseConfigRequest$outboundSchema` instead. */
    GetRollingReleaseConfigRequest$.outboundSchema = GetRollingReleaseConfigRequest$outboundSchema;
})(GetRollingReleaseConfigRequest$ || (GetRollingReleaseConfigRequest$ = {}));
export function getRollingReleaseConfigRequestToJSON(getRollingReleaseConfigRequest) {
    return JSON.stringify(GetRollingReleaseConfigRequest$outboundSchema.parse(getRollingReleaseConfigRequest));
}
export function getRollingReleaseConfigRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseConfigRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseConfigRequest' from JSON`);
}
/** @internal */
export const GetRollingReleaseConfigStages$inboundSchema = z.object({
    targetPercentage: z.number(),
    requireApproval: z.boolean().optional(),
    duration: z.number().optional(),
});
/** @internal */
export const GetRollingReleaseConfigStages$outboundSchema = z.object({
    targetPercentage: z.number(),
    requireApproval: z.boolean().optional(),
    duration: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseConfigStages$;
(function (GetRollingReleaseConfigStages$) {
    /** @deprecated use `GetRollingReleaseConfigStages$inboundSchema` instead. */
    GetRollingReleaseConfigStages$.inboundSchema = GetRollingReleaseConfigStages$inboundSchema;
    /** @deprecated use `GetRollingReleaseConfigStages$outboundSchema` instead. */
    GetRollingReleaseConfigStages$.outboundSchema = GetRollingReleaseConfigStages$outboundSchema;
})(GetRollingReleaseConfigStages$ || (GetRollingReleaseConfigStages$ = {}));
export function getRollingReleaseConfigStagesToJSON(getRollingReleaseConfigStages) {
    return JSON.stringify(GetRollingReleaseConfigStages$outboundSchema.parse(getRollingReleaseConfigStages));
}
export function getRollingReleaseConfigStagesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseConfigStages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseConfigStages' from JSON`);
}
/** @internal */
export const GetRollingReleaseConfigRollingRelease$inboundSchema = z.object({
    target: z.string(),
    stages: z.nullable(z.array(z.lazy(() => GetRollingReleaseConfigStages$inboundSchema))).optional(),
    canaryResponseHeader: z.boolean().optional(),
});
/** @internal */
export const GetRollingReleaseConfigRollingRelease$outboundSchema = z.object({
    target: z.string(),
    stages: z.nullable(z.array(z.lazy(() => GetRollingReleaseConfigStages$outboundSchema))).optional(),
    canaryResponseHeader: z.boolean().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseConfigRollingRelease$;
(function (GetRollingReleaseConfigRollingRelease$) {
    /** @deprecated use `GetRollingReleaseConfigRollingRelease$inboundSchema` instead. */
    GetRollingReleaseConfigRollingRelease$.inboundSchema = GetRollingReleaseConfigRollingRelease$inboundSchema;
    /** @deprecated use `GetRollingReleaseConfigRollingRelease$outboundSchema` instead. */
    GetRollingReleaseConfigRollingRelease$.outboundSchema = GetRollingReleaseConfigRollingRelease$outboundSchema;
})(GetRollingReleaseConfigRollingRelease$ || (GetRollingReleaseConfigRollingRelease$ = {}));
export function getRollingReleaseConfigRollingReleaseToJSON(getRollingReleaseConfigRollingRelease) {
    return JSON.stringify(GetRollingReleaseConfigRollingRelease$outboundSchema.parse(getRollingReleaseConfigRollingRelease));
}
export function getRollingReleaseConfigRollingReleaseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseConfigRollingRelease$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseConfigRollingRelease' from JSON`);
}
/** @internal */
export const GetRollingReleaseConfigResponseBody$inboundSchema = z.object({
    rollingRelease: z.nullable(z.lazy(() => GetRollingReleaseConfigRollingRelease$inboundSchema)),
});
/** @internal */
export const GetRollingReleaseConfigResponseBody$outboundSchema = z.object({
    rollingRelease: z.nullable(z.lazy(() => GetRollingReleaseConfigRollingRelease$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRollingReleaseConfigResponseBody$;
(function (GetRollingReleaseConfigResponseBody$) {
    /** @deprecated use `GetRollingReleaseConfigResponseBody$inboundSchema` instead. */
    GetRollingReleaseConfigResponseBody$.inboundSchema = GetRollingReleaseConfigResponseBody$inboundSchema;
    /** @deprecated use `GetRollingReleaseConfigResponseBody$outboundSchema` instead. */
    GetRollingReleaseConfigResponseBody$.outboundSchema = GetRollingReleaseConfigResponseBody$outboundSchema;
})(GetRollingReleaseConfigResponseBody$ || (GetRollingReleaseConfigResponseBody$ = {}));
export function getRollingReleaseConfigResponseBodyToJSON(getRollingReleaseConfigResponseBody) {
    return JSON.stringify(GetRollingReleaseConfigResponseBody$outboundSchema.parse(getRollingReleaseConfigResponseBody));
}
export function getRollingReleaseConfigResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRollingReleaseConfigResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRollingReleaseConfigResponseBody' from JSON`);
}
//# sourceMappingURL=getrollingreleaseconfigop.js.map