import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export declare const EditProjectEnvTarget: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type EditProjectEnvTarget = ClosedEnum<typeof EditProjectEnvTarget>;
/**
 * The type of environment variable
 */
export declare const EditProjectEnvType: {
    readonly System: "system";
    readonly Secret: "secret";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
};
/**
 * The type of environment variable
 */
export type EditProjectEnvType = ClosedEnum<typeof EditProjectEnvType>;
export type EditProjectEnvRequestBody = {
    /**
     * The name of the environment variable
     */
    key?: string | undefined;
    /**
     * The target environment of the environment variable
     */
    target?: Array<EditProjectEnvTarget> | undefined;
    /**
     * If defined, the git branch of the environment variable (must have target=preview)
     */
    gitBranch?: string | null | undefined;
    /**
     * The type of environment variable
     */
    type?: EditProjectEnvType | undefined;
    /**
     * The value of the environment variable
     */
    value?: string | undefined;
    /**
     * The custom environments that the environment variable should be synced to
     */
    customEnvironmentIds?: Array<string> | undefined;
    /**
     * A comment to add context on what this env var is for
     */
    comment?: string | undefined;
};
export type EditProjectEnvRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The unique environment variable identifier
     */
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: EditProjectEnvRequestBody;
};
export type EditProjectEnvResponseBody2 = {};
export declare const EditProjectEnvTarget2: {
    readonly Production: "production";
    readonly Preview: "preview";
    readonly Development: "development";
};
export type EditProjectEnvTarget2 = ClosedEnum<typeof EditProjectEnvTarget2>;
export type EditProjectEnvResponseBodyTarget = Array<string> | EditProjectEnvTarget2;
export declare const EditProjectEnvResponseBodyType: {
    readonly System: "system";
    readonly Encrypted: "encrypted";
    readonly Plain: "plain";
    readonly Sensitive: "sensitive";
    readonly Secret: "secret";
};
export type EditProjectEnvResponseBodyType = ClosedEnum<typeof EditProjectEnvResponseBodyType>;
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type: {
    readonly FlagsConnectionString: "flags-connection-string";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
export type EditProjectEnvContentHint15 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type;
    projectId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type: {
    readonly IntegrationStoreSecret: "integration-store-secret";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
export type EditProjectEnvContentHint14 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type: {
    readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
export type EditProjectEnvContentHint13 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type: {
    readonly PostgresDatabase: "postgres-database";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
export type EditProjectEnvContentHint12 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type: {
    readonly PostgresPassword: "postgres-password";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
export type EditProjectEnvContentHint11 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type: {
    readonly PostgresHost: "postgres-host";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
export type EditProjectEnvContentHint10 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type: {
    readonly PostgresUser: "postgres-user";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
export type EditProjectEnvContentHint9 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type: {
    readonly PostgresPrismaUrl: "postgres-prisma-url";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
export type EditProjectEnvContentHint8 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type: {
    readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
export type EditProjectEnvContentHint7 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType: {
    readonly PostgresUrl: "postgres-url";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
export type EditProjectEnvContentHint6 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType: {
    readonly BlobReadWriteToken: "blob-read-write-token";
};
export type EditProjectEnvContentHintProjectsResponse200ApplicationJSONType = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONType>;
export type EditProjectEnvContentHint5 = {
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONType;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponse200Type: {
    readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
};
export type EditProjectEnvContentHintProjectsResponse200Type = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponse200Type>;
export type EditProjectEnvContentHint4 = {
    type: EditProjectEnvContentHintProjectsResponse200Type;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsResponseType: {
    readonly RedisRestApiToken: "redis-rest-api-token";
};
export type EditProjectEnvContentHintProjectsResponseType = ClosedEnum<typeof EditProjectEnvContentHintProjectsResponseType>;
export type EditProjectEnvContentHint3 = {
    type: EditProjectEnvContentHintProjectsResponseType;
    storeId: string;
};
export declare const EditProjectEnvContentHintProjectsType: {
    readonly RedisRestApiUrl: "redis-rest-api-url";
};
export type EditProjectEnvContentHintProjectsType = ClosedEnum<typeof EditProjectEnvContentHintProjectsType>;
export type EditProjectEnvContentHint2 = {
    type: EditProjectEnvContentHintProjectsType;
    storeId: string;
};
export declare const EditProjectEnvContentHintType: {
    readonly RedisUrl: "redis-url";
};
export type EditProjectEnvContentHintType = ClosedEnum<typeof EditProjectEnvContentHintType>;
export type EditProjectEnvContentHint1 = {
    type: EditProjectEnvContentHintType;
    storeId: string;
};
export type EditProjectEnvResponseBodyContentHint = EditProjectEnvContentHint14 | EditProjectEnvContentHint1 | EditProjectEnvContentHint2 | EditProjectEnvContentHint3 | EditProjectEnvContentHint4 | EditProjectEnvContentHint5 | EditProjectEnvContentHint6 | EditProjectEnvContentHint7 | EditProjectEnvContentHint8 | EditProjectEnvContentHint9 | EditProjectEnvContentHint10 | EditProjectEnvContentHint11 | EditProjectEnvContentHint12 | EditProjectEnvContentHint13 | EditProjectEnvContentHint15;
export declare const EditProjectEnvResponseBodyProjectsType: {
    readonly FlagsSecret: "flags-secret";
};
export type EditProjectEnvResponseBodyProjectsType = ClosedEnum<typeof EditProjectEnvResponseBodyProjectsType>;
/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type EditProjectEnvResponseBodyInternalContentHint = {
    type: EditProjectEnvResponseBodyProjectsType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};
export type EditProjectEnvResponseBody1 = {
    target?: Array<string> | EditProjectEnvTarget2 | undefined;
    type: EditProjectEnvResponseBodyType;
    /**
     * This is used to identiy variables that have been migrated from type secret to sensitive.
     */
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: EditProjectEnvContentHint14 | EditProjectEnvContentHint1 | EditProjectEnvContentHint2 | EditProjectEnvContentHint3 | EditProjectEnvContentHint4 | EditProjectEnvContentHint5 | EditProjectEnvContentHint6 | EditProjectEnvContentHint7 | EditProjectEnvContentHint8 | EditProjectEnvContentHint9 | EditProjectEnvContentHint10 | EditProjectEnvContentHint11 | EditProjectEnvContentHint12 | EditProjectEnvContentHint13 | EditProjectEnvContentHint15 | null | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: EditProjectEnvResponseBodyInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
};
/**
 * The environment variable was successfully edited
 */
export type EditProjectEnvResponseBody = EditProjectEnvResponseBody1 | EditProjectEnvResponseBody2;
/** @internal */
export declare const EditProjectEnvTarget$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvTarget>;
/** @internal */
export declare const EditProjectEnvTarget$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvTarget$ {
    /** @deprecated use `EditProjectEnvTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `EditProjectEnvTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const EditProjectEnvType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvType>;
/** @internal */
export declare const EditProjectEnvType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvType$ {
    /** @deprecated use `EditProjectEnvType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
    /** @deprecated use `EditProjectEnvType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Secret: "secret";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
    }>;
}
/** @internal */
export declare const EditProjectEnvRequestBody$inboundSchema: z.ZodType<EditProjectEnvRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvRequestBody$Outbound = {
    key?: string | undefined;
    target?: Array<string> | undefined;
    gitBranch?: string | null | undefined;
    type?: string | undefined;
    value?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
    comment?: string | undefined;
};
/** @internal */
export declare const EditProjectEnvRequestBody$outboundSchema: z.ZodType<EditProjectEnvRequestBody$Outbound, z.ZodTypeDef, EditProjectEnvRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvRequestBody$ {
    /** @deprecated use `EditProjectEnvRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvRequestBody$Outbound, z.ZodTypeDef, EditProjectEnvRequestBody>;
    /** @deprecated use `EditProjectEnvRequestBody$Outbound` instead. */
    type Outbound = EditProjectEnvRequestBody$Outbound;
}
export declare function editProjectEnvRequestBodyToJSON(editProjectEnvRequestBody: EditProjectEnvRequestBody): string;
export declare function editProjectEnvRequestBodyFromJSON(jsonString: string): SafeParseResult<EditProjectEnvRequestBody, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvRequest$inboundSchema: z.ZodType<EditProjectEnvRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvRequest$Outbound = {
    idOrName: string;
    id: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: EditProjectEnvRequestBody$Outbound;
};
/** @internal */
export declare const EditProjectEnvRequest$outboundSchema: z.ZodType<EditProjectEnvRequest$Outbound, z.ZodTypeDef, EditProjectEnvRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvRequest$ {
    /** @deprecated use `EditProjectEnvRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvRequest$Outbound, z.ZodTypeDef, EditProjectEnvRequest>;
    /** @deprecated use `EditProjectEnvRequest$Outbound` instead. */
    type Outbound = EditProjectEnvRequest$Outbound;
}
export declare function editProjectEnvRequestToJSON(editProjectEnvRequest: EditProjectEnvRequest): string;
export declare function editProjectEnvRequestFromJSON(jsonString: string): SafeParseResult<EditProjectEnvRequest, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBody2$inboundSchema: z.ZodType<EditProjectEnvResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBody2$Outbound = {};
/** @internal */
export declare const EditProjectEnvResponseBody2$outboundSchema: z.ZodType<EditProjectEnvResponseBody2$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBody2$ {
    /** @deprecated use `EditProjectEnvResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBody2$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody2>;
    /** @deprecated use `EditProjectEnvResponseBody2$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBody2$Outbound;
}
export declare function editProjectEnvResponseBody2ToJSON(editProjectEnvResponseBody2: EditProjectEnvResponseBody2): string;
export declare function editProjectEnvResponseBody2FromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBody2, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvTarget2>;
/** @internal */
export declare const EditProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvTarget2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvTarget2$ {
    /** @deprecated use `EditProjectEnvTarget2$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
    /** @deprecated use `EditProjectEnvTarget2$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
        readonly Development: "development";
    }>;
}
/** @internal */
export declare const EditProjectEnvResponseBodyTarget$inboundSchema: z.ZodType<EditProjectEnvResponseBodyTarget, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBodyTarget$Outbound = Array<string> | string;
/** @internal */
export declare const EditProjectEnvResponseBodyTarget$outboundSchema: z.ZodType<EditProjectEnvResponseBodyTarget$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyTarget>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBodyTarget$ {
    /** @deprecated use `EditProjectEnvResponseBodyTarget$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBodyTarget, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBodyTarget$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBodyTarget$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyTarget>;
    /** @deprecated use `EditProjectEnvResponseBodyTarget$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBodyTarget$Outbound;
}
export declare function editProjectEnvResponseBodyTargetToJSON(editProjectEnvResponseBodyTarget: EditProjectEnvResponseBodyTarget): string;
export declare function editProjectEnvResponseBodyTargetFromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBodyTarget, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBodyType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvResponseBodyType>;
/** @internal */
export declare const EditProjectEnvResponseBodyType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvResponseBodyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBodyType$ {
    /** @deprecated use `EditProjectEnvResponseBodyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
    /** @deprecated use `EditProjectEnvResponseBodyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
        readonly Encrypted: "encrypted";
        readonly Plain: "plain";
        readonly Sensitive: "sensitive";
        readonly Secret: "secret";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsConnectionString: "flags-connection-string";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint15$inboundSchema: z.ZodType<EditProjectEnvContentHint15, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint15$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint15$outboundSchema: z.ZodType<EditProjectEnvContentHint15$Outbound, z.ZodTypeDef, EditProjectEnvContentHint15>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint15$ {
    /** @deprecated use `EditProjectEnvContentHint15$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint15, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint15$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint15$Outbound, z.ZodTypeDef, EditProjectEnvContentHint15>;
    /** @deprecated use `EditProjectEnvContentHint15$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint15$Outbound;
}
export declare function editProjectEnvContentHint15ToJSON(editProjectEnvContentHint15: EditProjectEnvContentHint15): string;
export declare function editProjectEnvContentHint15FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint15, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly IntegrationStoreSecret: "integration-store-secret";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint14$inboundSchema: z.ZodType<EditProjectEnvContentHint14, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint14$Outbound = {
    type: string;
    storeId: string;
    integrationId: string;
    integrationProductId: string;
    integrationConfigurationId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint14$outboundSchema: z.ZodType<EditProjectEnvContentHint14$Outbound, z.ZodTypeDef, EditProjectEnvContentHint14>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint14$ {
    /** @deprecated use `EditProjectEnvContentHint14$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint14, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint14$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint14$Outbound, z.ZodTypeDef, EditProjectEnvContentHint14>;
    /** @deprecated use `EditProjectEnvContentHint14$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint14$Outbound;
}
export declare function editProjectEnvContentHint14ToJSON(editProjectEnvContentHint14: EditProjectEnvContentHint14): string;
export declare function editProjectEnvContentHint14FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint14, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNoSsl: "postgres-url-no-ssl";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint13$inboundSchema: z.ZodType<EditProjectEnvContentHint13, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint13$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint13$outboundSchema: z.ZodType<EditProjectEnvContentHint13$Outbound, z.ZodTypeDef, EditProjectEnvContentHint13>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint13$ {
    /** @deprecated use `EditProjectEnvContentHint13$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint13, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint13$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint13$Outbound, z.ZodTypeDef, EditProjectEnvContentHint13>;
    /** @deprecated use `EditProjectEnvContentHint13$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint13$Outbound;
}
export declare function editProjectEnvContentHint13ToJSON(editProjectEnvContentHint13: EditProjectEnvContentHint13): string;
export declare function editProjectEnvContentHint13FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint13, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresDatabase: "postgres-database";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint12$inboundSchema: z.ZodType<EditProjectEnvContentHint12, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint12$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint12$outboundSchema: z.ZodType<EditProjectEnvContentHint12$Outbound, z.ZodTypeDef, EditProjectEnvContentHint12>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint12$ {
    /** @deprecated use `EditProjectEnvContentHint12$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint12, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint12$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint12$Outbound, z.ZodTypeDef, EditProjectEnvContentHint12>;
    /** @deprecated use `EditProjectEnvContentHint12$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint12$Outbound;
}
export declare function editProjectEnvContentHint12ToJSON(editProjectEnvContentHint12: EditProjectEnvContentHint12): string;
export declare function editProjectEnvContentHint12FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint12, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPassword: "postgres-password";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint11$inboundSchema: z.ZodType<EditProjectEnvContentHint11, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint11$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint11$outboundSchema: z.ZodType<EditProjectEnvContentHint11$Outbound, z.ZodTypeDef, EditProjectEnvContentHint11>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint11$ {
    /** @deprecated use `EditProjectEnvContentHint11$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint11, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint11$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint11$Outbound, z.ZodTypeDef, EditProjectEnvContentHint11>;
    /** @deprecated use `EditProjectEnvContentHint11$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint11$Outbound;
}
export declare function editProjectEnvContentHint11ToJSON(editProjectEnvContentHint11: EditProjectEnvContentHint11): string;
export declare function editProjectEnvContentHint11FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint11, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresHost: "postgres-host";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint10$inboundSchema: z.ZodType<EditProjectEnvContentHint10, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint10$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint10$outboundSchema: z.ZodType<EditProjectEnvContentHint10$Outbound, z.ZodTypeDef, EditProjectEnvContentHint10>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint10$ {
    /** @deprecated use `EditProjectEnvContentHint10$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint10, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint10$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint10$Outbound, z.ZodTypeDef, EditProjectEnvContentHint10>;
    /** @deprecated use `EditProjectEnvContentHint10$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint10$Outbound;
}
export declare function editProjectEnvContentHint10ToJSON(editProjectEnvContentHint10: EditProjectEnvContentHint10): string;
export declare function editProjectEnvContentHint10FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint10, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUser: "postgres-user";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint9$inboundSchema: z.ZodType<EditProjectEnvContentHint9, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint9$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint9$outboundSchema: z.ZodType<EditProjectEnvContentHint9$Outbound, z.ZodTypeDef, EditProjectEnvContentHint9>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint9$ {
    /** @deprecated use `EditProjectEnvContentHint9$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint9, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint9$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint9$Outbound, z.ZodTypeDef, EditProjectEnvContentHint9>;
    /** @deprecated use `EditProjectEnvContentHint9$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint9$Outbound;
}
export declare function editProjectEnvContentHint9ToJSON(editProjectEnvContentHint9: EditProjectEnvContentHint9): string;
export declare function editProjectEnvContentHint9FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint9, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresPrismaUrl: "postgres-prisma-url";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint8$inboundSchema: z.ZodType<EditProjectEnvContentHint8, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint8$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint8$outboundSchema: z.ZodType<EditProjectEnvContentHint8$Outbound, z.ZodTypeDef, EditProjectEnvContentHint8>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint8$ {
    /** @deprecated use `EditProjectEnvContentHint8$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint8, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint8$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint8$Outbound, z.ZodTypeDef, EditProjectEnvContentHint8>;
    /** @deprecated use `EditProjectEnvContentHint8$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint8$Outbound;
}
export declare function editProjectEnvContentHint8ToJSON(editProjectEnvContentHint8: EditProjectEnvContentHint8): string;
export declare function editProjectEnvContentHint8FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint8, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrlNonPooling: "postgres-url-non-pooling";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint7$inboundSchema: z.ZodType<EditProjectEnvContentHint7, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint7$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint7$outboundSchema: z.ZodType<EditProjectEnvContentHint7$Outbound, z.ZodTypeDef, EditProjectEnvContentHint7>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint7$ {
    /** @deprecated use `EditProjectEnvContentHint7$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint7, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint7$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint7$Outbound, z.ZodTypeDef, EditProjectEnvContentHint7>;
    /** @deprecated use `EditProjectEnvContentHint7$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint7$Outbound;
}
export declare function editProjectEnvContentHint7ToJSON(editProjectEnvContentHint7: EditProjectEnvContentHint7): string;
export declare function editProjectEnvContentHint7FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint7, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PostgresUrl: "postgres-url";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint6$inboundSchema: z.ZodType<EditProjectEnvContentHint6, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint6$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint6$outboundSchema: z.ZodType<EditProjectEnvContentHint6$Outbound, z.ZodTypeDef, EditProjectEnvContentHint6>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint6$ {
    /** @deprecated use `EditProjectEnvContentHint6$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint6, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint6$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint6$Outbound, z.ZodTypeDef, EditProjectEnvContentHint6>;
    /** @deprecated use `EditProjectEnvContentHint6$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint6$Outbound;
}
export declare function editProjectEnvContentHint6ToJSON(editProjectEnvContentHint6: EditProjectEnvContentHint6): string;
export declare function editProjectEnvContentHint6FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint6, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONType>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200ApplicationJSONType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly BlobReadWriteToken: "blob-read-write-token";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint5$inboundSchema: z.ZodType<EditProjectEnvContentHint5, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint5$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint5$outboundSchema: z.ZodType<EditProjectEnvContentHint5$Outbound, z.ZodTypeDef, EditProjectEnvContentHint5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint5$ {
    /** @deprecated use `EditProjectEnvContentHint5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint5, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint5$Outbound, z.ZodTypeDef, EditProjectEnvContentHint5>;
    /** @deprecated use `EditProjectEnvContentHint5$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint5$Outbound;
}
export declare function editProjectEnvContentHint5ToJSON(editProjectEnvContentHint5: EditProjectEnvContentHint5): string;
export declare function editProjectEnvContentHint5FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint5, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200Type$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200Type>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponse200Type$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponse200Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponse200Type$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint4$inboundSchema: z.ZodType<EditProjectEnvContentHint4, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint4$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint4$outboundSchema: z.ZodType<EditProjectEnvContentHint4$Outbound, z.ZodTypeDef, EditProjectEnvContentHint4>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint4$ {
    /** @deprecated use `EditProjectEnvContentHint4$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint4, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint4$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint4$Outbound, z.ZodTypeDef, EditProjectEnvContentHint4>;
    /** @deprecated use `EditProjectEnvContentHint4$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint4$Outbound;
}
export declare function editProjectEnvContentHint4ToJSON(editProjectEnvContentHint4: EditProjectEnvContentHint4): string;
export declare function editProjectEnvContentHint4FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint4, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponseType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponseType>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsResponseType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsResponseType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsResponseType$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiToken: "redis-rest-api-token";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint3$inboundSchema: z.ZodType<EditProjectEnvContentHint3, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint3$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint3$outboundSchema: z.ZodType<EditProjectEnvContentHint3$Outbound, z.ZodTypeDef, EditProjectEnvContentHint3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint3$ {
    /** @deprecated use `EditProjectEnvContentHint3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint3, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint3$Outbound, z.ZodTypeDef, EditProjectEnvContentHint3>;
    /** @deprecated use `EditProjectEnvContentHint3$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint3$Outbound;
}
export declare function editProjectEnvContentHint3ToJSON(editProjectEnvContentHint3: EditProjectEnvContentHint3): string;
export declare function editProjectEnvContentHint3FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint3, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsType>;
/** @internal */
export declare const EditProjectEnvContentHintProjectsType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintProjectsType$ {
    /** @deprecated use `EditProjectEnvContentHintProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
    /** @deprecated use `EditProjectEnvContentHintProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisRestApiUrl: "redis-rest-api-url";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint2$inboundSchema: z.ZodType<EditProjectEnvContentHint2, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint2$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint2$outboundSchema: z.ZodType<EditProjectEnvContentHint2$Outbound, z.ZodTypeDef, EditProjectEnvContentHint2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint2$ {
    /** @deprecated use `EditProjectEnvContentHint2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint2, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint2$Outbound, z.ZodTypeDef, EditProjectEnvContentHint2>;
    /** @deprecated use `EditProjectEnvContentHint2$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint2$Outbound;
}
export declare function editProjectEnvContentHint2ToJSON(editProjectEnvContentHint2: EditProjectEnvContentHint2): string;
export declare function editProjectEnvContentHint2FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint2, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintType>;
/** @internal */
export declare const EditProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvContentHintType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHintType$ {
    /** @deprecated use `EditProjectEnvContentHintType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
    /** @deprecated use `EditProjectEnvContentHintType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly RedisUrl: "redis-url";
    }>;
}
/** @internal */
export declare const EditProjectEnvContentHint1$inboundSchema: z.ZodType<EditProjectEnvContentHint1, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvContentHint1$Outbound = {
    type: string;
    storeId: string;
};
/** @internal */
export declare const EditProjectEnvContentHint1$outboundSchema: z.ZodType<EditProjectEnvContentHint1$Outbound, z.ZodTypeDef, EditProjectEnvContentHint1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvContentHint1$ {
    /** @deprecated use `EditProjectEnvContentHint1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvContentHint1, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvContentHint1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvContentHint1$Outbound, z.ZodTypeDef, EditProjectEnvContentHint1>;
    /** @deprecated use `EditProjectEnvContentHint1$Outbound` instead. */
    type Outbound = EditProjectEnvContentHint1$Outbound;
}
export declare function editProjectEnvContentHint1ToJSON(editProjectEnvContentHint1: EditProjectEnvContentHint1): string;
export declare function editProjectEnvContentHint1FromJSON(jsonString: string): SafeParseResult<EditProjectEnvContentHint1, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBodyContentHint$inboundSchema: z.ZodType<EditProjectEnvResponseBodyContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBodyContentHint$Outbound = EditProjectEnvContentHint14$Outbound | EditProjectEnvContentHint1$Outbound | EditProjectEnvContentHint2$Outbound | EditProjectEnvContentHint3$Outbound | EditProjectEnvContentHint4$Outbound | EditProjectEnvContentHint5$Outbound | EditProjectEnvContentHint6$Outbound | EditProjectEnvContentHint7$Outbound | EditProjectEnvContentHint8$Outbound | EditProjectEnvContentHint9$Outbound | EditProjectEnvContentHint10$Outbound | EditProjectEnvContentHint11$Outbound | EditProjectEnvContentHint12$Outbound | EditProjectEnvContentHint13$Outbound | EditProjectEnvContentHint15$Outbound;
/** @internal */
export declare const EditProjectEnvResponseBodyContentHint$outboundSchema: z.ZodType<EditProjectEnvResponseBodyContentHint$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBodyContentHint$ {
    /** @deprecated use `EditProjectEnvResponseBodyContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBodyContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBodyContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBodyContentHint$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyContentHint>;
    /** @deprecated use `EditProjectEnvResponseBodyContentHint$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBodyContentHint$Outbound;
}
export declare function editProjectEnvResponseBodyContentHintToJSON(editProjectEnvResponseBodyContentHint: EditProjectEnvResponseBodyContentHint): string;
export declare function editProjectEnvResponseBodyContentHintFromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBodyContentHint, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBodyProjectsType$inboundSchema: z.ZodNativeEnum<typeof EditProjectEnvResponseBodyProjectsType>;
/** @internal */
export declare const EditProjectEnvResponseBodyProjectsType$outboundSchema: z.ZodNativeEnum<typeof EditProjectEnvResponseBodyProjectsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBodyProjectsType$ {
    /** @deprecated use `EditProjectEnvResponseBodyProjectsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
    /** @deprecated use `EditProjectEnvResponseBodyProjectsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FlagsSecret: "flags-secret";
    }>;
}
/** @internal */
export declare const EditProjectEnvResponseBodyInternalContentHint$inboundSchema: z.ZodType<EditProjectEnvResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBodyInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};
/** @internal */
export declare const EditProjectEnvResponseBodyInternalContentHint$outboundSchema: z.ZodType<EditProjectEnvResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyInternalContentHint>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBodyInternalContentHint$ {
    /** @deprecated use `EditProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBodyInternalContentHint, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBodyInternalContentHint$Outbound, z.ZodTypeDef, EditProjectEnvResponseBodyInternalContentHint>;
    /** @deprecated use `EditProjectEnvResponseBodyInternalContentHint$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBodyInternalContentHint$Outbound;
}
export declare function editProjectEnvResponseBodyInternalContentHintToJSON(editProjectEnvResponseBodyInternalContentHint: EditProjectEnvResponseBodyInternalContentHint): string;
export declare function editProjectEnvResponseBodyInternalContentHintFromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBodyInternalContentHint, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBody1$inboundSchema: z.ZodType<EditProjectEnvResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBody1$Outbound = {
    target?: Array<string> | string | undefined;
    type: string;
    sunsetSecretId?: string | undefined;
    decrypted?: boolean | undefined;
    value: string;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?: EditProjectEnvContentHint14$Outbound | EditProjectEnvContentHint1$Outbound | EditProjectEnvContentHint2$Outbound | EditProjectEnvContentHint3$Outbound | EditProjectEnvContentHint4$Outbound | EditProjectEnvContentHint5$Outbound | EditProjectEnvContentHint6$Outbound | EditProjectEnvContentHint7$Outbound | EditProjectEnvContentHint8$Outbound | EditProjectEnvContentHint9$Outbound | EditProjectEnvContentHint10$Outbound | EditProjectEnvContentHint11$Outbound | EditProjectEnvContentHint12$Outbound | EditProjectEnvContentHint13$Outbound | EditProjectEnvContentHint15$Outbound | null | undefined;
    internalContentHint?: EditProjectEnvResponseBodyInternalContentHint$Outbound | null | undefined;
    comment?: string | undefined;
    customEnvironmentIds?: Array<string> | undefined;
};
/** @internal */
export declare const EditProjectEnvResponseBody1$outboundSchema: z.ZodType<EditProjectEnvResponseBody1$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBody1$ {
    /** @deprecated use `EditProjectEnvResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBody1$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody1>;
    /** @deprecated use `EditProjectEnvResponseBody1$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBody1$Outbound;
}
export declare function editProjectEnvResponseBody1ToJSON(editProjectEnvResponseBody1: EditProjectEnvResponseBody1): string;
export declare function editProjectEnvResponseBody1FromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBody1, SDKValidationError>;
/** @internal */
export declare const EditProjectEnvResponseBody$inboundSchema: z.ZodType<EditProjectEnvResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type EditProjectEnvResponseBody$Outbound = EditProjectEnvResponseBody1$Outbound | EditProjectEnvResponseBody2$Outbound;
/** @internal */
export declare const EditProjectEnvResponseBody$outboundSchema: z.ZodType<EditProjectEnvResponseBody$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EditProjectEnvResponseBody$ {
    /** @deprecated use `EditProjectEnvResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EditProjectEnvResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `EditProjectEnvResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EditProjectEnvResponseBody$Outbound, z.ZodTypeDef, EditProjectEnvResponseBody>;
    /** @deprecated use `EditProjectEnvResponseBody$Outbound` instead. */
    type Outbound = EditProjectEnvResponseBody$Outbound;
}
export declare function editProjectEnvResponseBodyToJSON(editProjectEnvResponseBody: EditProjectEnvResponseBody): string;
export declare function editProjectEnvResponseBodyFromJSON(jsonString: string): SafeParseResult<EditProjectEnvResponseBody, SDKValidationError>;
//# sourceMappingURL=editprojectenvop.d.ts.map