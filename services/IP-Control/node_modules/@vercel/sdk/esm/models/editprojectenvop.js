/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
export const EditProjectEnvTarget = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
/**
 * The type of environment variable
 */
export const EditProjectEnvType = {
    System: "system",
    Secret: "secret",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
};
export const EditProjectEnvTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
};
export const EditProjectEnvResponseBodyType = {
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
    Secret: "secret",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type = {
    FlagsConnectionString: "flags-connection-string",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type = {
    IntegrationStoreSecret: "integration-store-secret",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type = {
    PostgresDatabase: "postgres-database",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type = {
    PostgresPassword: "postgres-password",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type = {
    PostgresHost: "postgres-host",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type = {
    PostgresUser: "postgres-user",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
};
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
};
export const EditProjectEnvContentHintProjectsResponse200Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
};
export const EditProjectEnvContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
};
export const EditProjectEnvContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
};
export const EditProjectEnvContentHintType = {
    RedisUrl: "redis-url",
};
export const EditProjectEnvResponseBodyProjectsType = {
    FlagsSecret: "flags-secret",
};
/** @internal */
export const EditProjectEnvTarget$inboundSchema = z.nativeEnum(EditProjectEnvTarget);
/** @internal */
export const EditProjectEnvTarget$outboundSchema = EditProjectEnvTarget$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvTarget$;
(function (EditProjectEnvTarget$) {
    /** @deprecated use `EditProjectEnvTarget$inboundSchema` instead. */
    EditProjectEnvTarget$.inboundSchema = EditProjectEnvTarget$inboundSchema;
    /** @deprecated use `EditProjectEnvTarget$outboundSchema` instead. */
    EditProjectEnvTarget$.outboundSchema = EditProjectEnvTarget$outboundSchema;
})(EditProjectEnvTarget$ || (EditProjectEnvTarget$ = {}));
/** @internal */
export const EditProjectEnvType$inboundSchema = z.nativeEnum(EditProjectEnvType);
/** @internal */
export const EditProjectEnvType$outboundSchema = EditProjectEnvType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvType$;
(function (EditProjectEnvType$) {
    /** @deprecated use `EditProjectEnvType$inboundSchema` instead. */
    EditProjectEnvType$.inboundSchema = EditProjectEnvType$inboundSchema;
    /** @deprecated use `EditProjectEnvType$outboundSchema` instead. */
    EditProjectEnvType$.outboundSchema = EditProjectEnvType$outboundSchema;
})(EditProjectEnvType$ || (EditProjectEnvType$ = {}));
/** @internal */
export const EditProjectEnvRequestBody$inboundSchema = z.object({
    key: z.string().optional(),
    target: z.array(EditProjectEnvTarget$inboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    type: EditProjectEnvType$inboundSchema.optional(),
    value: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    comment: z.string().optional(),
});
/** @internal */
export const EditProjectEnvRequestBody$outboundSchema = z.object({
    key: z.string().optional(),
    target: z.array(EditProjectEnvTarget$outboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    type: EditProjectEnvType$outboundSchema.optional(),
    value: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
    comment: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvRequestBody$;
(function (EditProjectEnvRequestBody$) {
    /** @deprecated use `EditProjectEnvRequestBody$inboundSchema` instead. */
    EditProjectEnvRequestBody$.inboundSchema = EditProjectEnvRequestBody$inboundSchema;
    /** @deprecated use `EditProjectEnvRequestBody$outboundSchema` instead. */
    EditProjectEnvRequestBody$.outboundSchema = EditProjectEnvRequestBody$outboundSchema;
})(EditProjectEnvRequestBody$ || (EditProjectEnvRequestBody$ = {}));
export function editProjectEnvRequestBodyToJSON(editProjectEnvRequestBody) {
    return JSON.stringify(EditProjectEnvRequestBody$outboundSchema.parse(editProjectEnvRequestBody));
}
export function editProjectEnvRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvRequestBody' from JSON`);
}
/** @internal */
export const EditProjectEnvRequest$inboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.lazy(() => EditProjectEnvRequestBody$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const EditProjectEnvRequest$outboundSchema = z.object({
    idOrName: z.string(),
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.lazy(() => EditProjectEnvRequestBody$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvRequest$;
(function (EditProjectEnvRequest$) {
    /** @deprecated use `EditProjectEnvRequest$inboundSchema` instead. */
    EditProjectEnvRequest$.inboundSchema = EditProjectEnvRequest$inboundSchema;
    /** @deprecated use `EditProjectEnvRequest$outboundSchema` instead. */
    EditProjectEnvRequest$.outboundSchema = EditProjectEnvRequest$outboundSchema;
})(EditProjectEnvRequest$ || (EditProjectEnvRequest$ = {}));
export function editProjectEnvRequestToJSON(editProjectEnvRequest) {
    return JSON.stringify(EditProjectEnvRequest$outboundSchema.parse(editProjectEnvRequest));
}
export function editProjectEnvRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvRequest' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBody2$inboundSchema = z.object({});
/** @internal */
export const EditProjectEnvResponseBody2$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBody2$;
(function (EditProjectEnvResponseBody2$) {
    /** @deprecated use `EditProjectEnvResponseBody2$inboundSchema` instead. */
    EditProjectEnvResponseBody2$.inboundSchema = EditProjectEnvResponseBody2$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBody2$outboundSchema` instead. */
    EditProjectEnvResponseBody2$.outboundSchema = EditProjectEnvResponseBody2$outboundSchema;
})(EditProjectEnvResponseBody2$ || (EditProjectEnvResponseBody2$ = {}));
export function editProjectEnvResponseBody2ToJSON(editProjectEnvResponseBody2) {
    return JSON.stringify(EditProjectEnvResponseBody2$outboundSchema.parse(editProjectEnvResponseBody2));
}
export function editProjectEnvResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBody2' from JSON`);
}
/** @internal */
export const EditProjectEnvTarget2$inboundSchema = z.nativeEnum(EditProjectEnvTarget2);
/** @internal */
export const EditProjectEnvTarget2$outboundSchema = EditProjectEnvTarget2$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvTarget2$;
(function (EditProjectEnvTarget2$) {
    /** @deprecated use `EditProjectEnvTarget2$inboundSchema` instead. */
    EditProjectEnvTarget2$.inboundSchema = EditProjectEnvTarget2$inboundSchema;
    /** @deprecated use `EditProjectEnvTarget2$outboundSchema` instead. */
    EditProjectEnvTarget2$.outboundSchema = EditProjectEnvTarget2$outboundSchema;
})(EditProjectEnvTarget2$ || (EditProjectEnvTarget2$ = {}));
/** @internal */
export const EditProjectEnvResponseBodyTarget$inboundSchema = z.union([z.array(z.string()), EditProjectEnvTarget2$inboundSchema]);
/** @internal */
export const EditProjectEnvResponseBodyTarget$outboundSchema = z.union([z.array(z.string()), EditProjectEnvTarget2$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBodyTarget$;
(function (EditProjectEnvResponseBodyTarget$) {
    /** @deprecated use `EditProjectEnvResponseBodyTarget$inboundSchema` instead. */
    EditProjectEnvResponseBodyTarget$.inboundSchema = EditProjectEnvResponseBodyTarget$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBodyTarget$outboundSchema` instead. */
    EditProjectEnvResponseBodyTarget$.outboundSchema = EditProjectEnvResponseBodyTarget$outboundSchema;
})(EditProjectEnvResponseBodyTarget$ || (EditProjectEnvResponseBodyTarget$ = {}));
export function editProjectEnvResponseBodyTargetToJSON(editProjectEnvResponseBodyTarget) {
    return JSON.stringify(EditProjectEnvResponseBodyTarget$outboundSchema.parse(editProjectEnvResponseBodyTarget));
}
export function editProjectEnvResponseBodyTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBodyTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBodyTarget' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBodyType$inboundSchema = z.nativeEnum(EditProjectEnvResponseBodyType);
/** @internal */
export const EditProjectEnvResponseBodyType$outboundSchema = EditProjectEnvResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBodyType$;
(function (EditProjectEnvResponseBodyType$) {
    /** @deprecated use `EditProjectEnvResponseBodyType$inboundSchema` instead. */
    EditProjectEnvResponseBodyType$.inboundSchema = EditProjectEnvResponseBodyType$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBodyType$outboundSchema` instead. */
    EditProjectEnvResponseBodyType$.outboundSchema = EditProjectEnvResponseBodyType$outboundSchema;
})(EditProjectEnvResponseBodyType$ || (EditProjectEnvResponseBodyType$ = {}));
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint15$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$inboundSchema,
    projectId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint15$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type$outboundSchema,
    projectId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint15$;
(function (EditProjectEnvContentHint15$) {
    /** @deprecated use `EditProjectEnvContentHint15$inboundSchema` instead. */
    EditProjectEnvContentHint15$.inboundSchema = EditProjectEnvContentHint15$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint15$outboundSchema` instead. */
    EditProjectEnvContentHint15$.outboundSchema = EditProjectEnvContentHint15$outboundSchema;
})(EditProjectEnvContentHint15$ || (EditProjectEnvContentHint15$ = {}));
export function editProjectEnvContentHint15ToJSON(editProjectEnvContentHint15) {
    return JSON.stringify(EditProjectEnvContentHint15$outboundSchema.parse(editProjectEnvContentHint15));
}
export function editProjectEnvContentHint15FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint15$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint15' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint14$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint14$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint14$;
(function (EditProjectEnvContentHint14$) {
    /** @deprecated use `EditProjectEnvContentHint14$inboundSchema` instead. */
    EditProjectEnvContentHint14$.inboundSchema = EditProjectEnvContentHint14$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint14$outboundSchema` instead. */
    EditProjectEnvContentHint14$.outboundSchema = EditProjectEnvContentHint14$outboundSchema;
})(EditProjectEnvContentHint14$ || (EditProjectEnvContentHint14$ = {}));
export function editProjectEnvContentHint14ToJSON(editProjectEnvContentHint14) {
    return JSON.stringify(EditProjectEnvContentHint14$outboundSchema.parse(editProjectEnvContentHint14));
}
export function editProjectEnvContentHint14FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint14$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint14' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint13$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint13$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint13$;
(function (EditProjectEnvContentHint13$) {
    /** @deprecated use `EditProjectEnvContentHint13$inboundSchema` instead. */
    EditProjectEnvContentHint13$.inboundSchema = EditProjectEnvContentHint13$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint13$outboundSchema` instead. */
    EditProjectEnvContentHint13$.outboundSchema = EditProjectEnvContentHint13$outboundSchema;
})(EditProjectEnvContentHint13$ || (EditProjectEnvContentHint13$ = {}));
export function editProjectEnvContentHint13ToJSON(editProjectEnvContentHint13) {
    return JSON.stringify(EditProjectEnvContentHint13$outboundSchema.parse(editProjectEnvContentHint13));
}
export function editProjectEnvContentHint13FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint13$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint13' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint12$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint12$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint12$;
(function (EditProjectEnvContentHint12$) {
    /** @deprecated use `EditProjectEnvContentHint12$inboundSchema` instead. */
    EditProjectEnvContentHint12$.inboundSchema = EditProjectEnvContentHint12$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint12$outboundSchema` instead. */
    EditProjectEnvContentHint12$.outboundSchema = EditProjectEnvContentHint12$outboundSchema;
})(EditProjectEnvContentHint12$ || (EditProjectEnvContentHint12$ = {}));
export function editProjectEnvContentHint12ToJSON(editProjectEnvContentHint12) {
    return JSON.stringify(EditProjectEnvContentHint12$outboundSchema.parse(editProjectEnvContentHint12));
}
export function editProjectEnvContentHint12FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint12$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint12' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint11$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint11$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint11$;
(function (EditProjectEnvContentHint11$) {
    /** @deprecated use `EditProjectEnvContentHint11$inboundSchema` instead. */
    EditProjectEnvContentHint11$.inboundSchema = EditProjectEnvContentHint11$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint11$outboundSchema` instead. */
    EditProjectEnvContentHint11$.outboundSchema = EditProjectEnvContentHint11$outboundSchema;
})(EditProjectEnvContentHint11$ || (EditProjectEnvContentHint11$ = {}));
export function editProjectEnvContentHint11ToJSON(editProjectEnvContentHint11) {
    return JSON.stringify(EditProjectEnvContentHint11$outboundSchema.parse(editProjectEnvContentHint11));
}
export function editProjectEnvContentHint11FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint11$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint11' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint10$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint10$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint10$;
(function (EditProjectEnvContentHint10$) {
    /** @deprecated use `EditProjectEnvContentHint10$inboundSchema` instead. */
    EditProjectEnvContentHint10$.inboundSchema = EditProjectEnvContentHint10$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint10$outboundSchema` instead. */
    EditProjectEnvContentHint10$.outboundSchema = EditProjectEnvContentHint10$outboundSchema;
})(EditProjectEnvContentHint10$ || (EditProjectEnvContentHint10$ = {}));
export function editProjectEnvContentHint10ToJSON(editProjectEnvContentHint10) {
    return JSON.stringify(EditProjectEnvContentHint10$outboundSchema.parse(editProjectEnvContentHint10));
}
export function editProjectEnvContentHint10FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint10$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint10' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint9$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint9$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint9$;
(function (EditProjectEnvContentHint9$) {
    /** @deprecated use `EditProjectEnvContentHint9$inboundSchema` instead. */
    EditProjectEnvContentHint9$.inboundSchema = EditProjectEnvContentHint9$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint9$outboundSchema` instead. */
    EditProjectEnvContentHint9$.outboundSchema = EditProjectEnvContentHint9$outboundSchema;
})(EditProjectEnvContentHint9$ || (EditProjectEnvContentHint9$ = {}));
export function editProjectEnvContentHint9ToJSON(editProjectEnvContentHint9) {
    return JSON.stringify(EditProjectEnvContentHint9$outboundSchema.parse(editProjectEnvContentHint9));
}
export function editProjectEnvContentHint9FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint9$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint9' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint8$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint8$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint8$;
(function (EditProjectEnvContentHint8$) {
    /** @deprecated use `EditProjectEnvContentHint8$inboundSchema` instead. */
    EditProjectEnvContentHint8$.inboundSchema = EditProjectEnvContentHint8$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint8$outboundSchema` instead. */
    EditProjectEnvContentHint8$.outboundSchema = EditProjectEnvContentHint8$outboundSchema;
})(EditProjectEnvContentHint8$ || (EditProjectEnvContentHint8$ = {}));
export function editProjectEnvContentHint8ToJSON(editProjectEnvContentHint8) {
    return JSON.stringify(EditProjectEnvContentHint8$outboundSchema.parse(editProjectEnvContentHint8));
}
export function editProjectEnvContentHint8FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint8$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint8' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint7$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint7$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint7$;
(function (EditProjectEnvContentHint7$) {
    /** @deprecated use `EditProjectEnvContentHint7$inboundSchema` instead. */
    EditProjectEnvContentHint7$.inboundSchema = EditProjectEnvContentHint7$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint7$outboundSchema` instead. */
    EditProjectEnvContentHint7$.outboundSchema = EditProjectEnvContentHint7$outboundSchema;
})(EditProjectEnvContentHint7$ || (EditProjectEnvContentHint7$ = {}));
export function editProjectEnvContentHint7ToJSON(editProjectEnvContentHint7) {
    return JSON.stringify(EditProjectEnvContentHint7$outboundSchema.parse(editProjectEnvContentHint7));
}
export function editProjectEnvContentHint7FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint7' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ = {}));
/** @internal */
export const EditProjectEnvContentHint6$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint6$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint6$;
(function (EditProjectEnvContentHint6$) {
    /** @deprecated use `EditProjectEnvContentHint6$inboundSchema` instead. */
    EditProjectEnvContentHint6$.inboundSchema = EditProjectEnvContentHint6$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint6$outboundSchema` instead. */
    EditProjectEnvContentHint6$.outboundSchema = EditProjectEnvContentHint6$outboundSchema;
})(EditProjectEnvContentHint6$ || (EditProjectEnvContentHint6$ = {}));
export function editProjectEnvContentHint6ToJSON(editProjectEnvContentHint6) {
    return JSON.stringify(EditProjectEnvContentHint6$outboundSchema.parse(editProjectEnvContentHint6));
}
export function editProjectEnvContentHint6FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint6$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint6' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsResponse200ApplicationJSONType);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$;
(function (EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$.inboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$.outboundSchema = EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$ || (EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$ = {}));
/** @internal */
export const EditProjectEnvContentHint5$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint5$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint5$;
(function (EditProjectEnvContentHint5$) {
    /** @deprecated use `EditProjectEnvContentHint5$inboundSchema` instead. */
    EditProjectEnvContentHint5$.inboundSchema = EditProjectEnvContentHint5$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint5$outboundSchema` instead. */
    EditProjectEnvContentHint5$.outboundSchema = EditProjectEnvContentHint5$outboundSchema;
})(EditProjectEnvContentHint5$ || (EditProjectEnvContentHint5$ = {}));
export function editProjectEnvContentHint5ToJSON(editProjectEnvContentHint5) {
    return JSON.stringify(EditProjectEnvContentHint5$outboundSchema.parse(editProjectEnvContentHint5));
}
export function editProjectEnvContentHint5FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint5$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint5' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200Type$inboundSchema = z
    .nativeEnum(EditProjectEnvContentHintProjectsResponse200Type);
/** @internal */
export const EditProjectEnvContentHintProjectsResponse200Type$outboundSchema = EditProjectEnvContentHintProjectsResponse200Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponse200Type$;
(function (EditProjectEnvContentHintProjectsResponse200Type$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200Type$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200Type$.inboundSchema = EditProjectEnvContentHintProjectsResponse200Type$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponse200Type$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponse200Type$.outboundSchema = EditProjectEnvContentHintProjectsResponse200Type$outboundSchema;
})(EditProjectEnvContentHintProjectsResponse200Type$ || (EditProjectEnvContentHintProjectsResponse200Type$ = {}));
/** @internal */
export const EditProjectEnvContentHint4$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200Type$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint4$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponse200Type$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint4$;
(function (EditProjectEnvContentHint4$) {
    /** @deprecated use `EditProjectEnvContentHint4$inboundSchema` instead. */
    EditProjectEnvContentHint4$.inboundSchema = EditProjectEnvContentHint4$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint4$outboundSchema` instead. */
    EditProjectEnvContentHint4$.outboundSchema = EditProjectEnvContentHint4$outboundSchema;
})(EditProjectEnvContentHint4$ || (EditProjectEnvContentHint4$ = {}));
export function editProjectEnvContentHint4ToJSON(editProjectEnvContentHint4) {
    return JSON.stringify(EditProjectEnvContentHint4$outboundSchema.parse(editProjectEnvContentHint4));
}
export function editProjectEnvContentHint4FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint4' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsResponseType$inboundSchema = z
    .nativeEnum(EditProjectEnvContentHintProjectsResponseType);
/** @internal */
export const EditProjectEnvContentHintProjectsResponseType$outboundSchema = EditProjectEnvContentHintProjectsResponseType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsResponseType$;
(function (EditProjectEnvContentHintProjectsResponseType$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsResponseType$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponseType$.inboundSchema = EditProjectEnvContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsResponseType$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsResponseType$.outboundSchema = EditProjectEnvContentHintProjectsResponseType$outboundSchema;
})(EditProjectEnvContentHintProjectsResponseType$ || (EditProjectEnvContentHintProjectsResponseType$ = {}));
/** @internal */
export const EditProjectEnvContentHint3$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint3$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint3$;
(function (EditProjectEnvContentHint3$) {
    /** @deprecated use `EditProjectEnvContentHint3$inboundSchema` instead. */
    EditProjectEnvContentHint3$.inboundSchema = EditProjectEnvContentHint3$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint3$outboundSchema` instead. */
    EditProjectEnvContentHint3$.outboundSchema = EditProjectEnvContentHint3$outboundSchema;
})(EditProjectEnvContentHint3$ || (EditProjectEnvContentHint3$ = {}));
export function editProjectEnvContentHint3ToJSON(editProjectEnvContentHint3) {
    return JSON.stringify(EditProjectEnvContentHint3$outboundSchema.parse(editProjectEnvContentHint3));
}
export function editProjectEnvContentHint3FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint3$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint3' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintProjectsType$inboundSchema = z.nativeEnum(EditProjectEnvContentHintProjectsType);
/** @internal */
export const EditProjectEnvContentHintProjectsType$outboundSchema = EditProjectEnvContentHintProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintProjectsType$;
(function (EditProjectEnvContentHintProjectsType$) {
    /** @deprecated use `EditProjectEnvContentHintProjectsType$inboundSchema` instead. */
    EditProjectEnvContentHintProjectsType$.inboundSchema = EditProjectEnvContentHintProjectsType$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintProjectsType$outboundSchema` instead. */
    EditProjectEnvContentHintProjectsType$.outboundSchema = EditProjectEnvContentHintProjectsType$outboundSchema;
})(EditProjectEnvContentHintProjectsType$ || (EditProjectEnvContentHintProjectsType$ = {}));
/** @internal */
export const EditProjectEnvContentHint2$inboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint2$outboundSchema = z.object({
    type: EditProjectEnvContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint2$;
(function (EditProjectEnvContentHint2$) {
    /** @deprecated use `EditProjectEnvContentHint2$inboundSchema` instead. */
    EditProjectEnvContentHint2$.inboundSchema = EditProjectEnvContentHint2$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint2$outboundSchema` instead. */
    EditProjectEnvContentHint2$.outboundSchema = EditProjectEnvContentHint2$outboundSchema;
})(EditProjectEnvContentHint2$ || (EditProjectEnvContentHint2$ = {}));
export function editProjectEnvContentHint2ToJSON(editProjectEnvContentHint2) {
    return JSON.stringify(EditProjectEnvContentHint2$outboundSchema.parse(editProjectEnvContentHint2));
}
export function editProjectEnvContentHint2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint2' from JSON`);
}
/** @internal */
export const EditProjectEnvContentHintType$inboundSchema = z.nativeEnum(EditProjectEnvContentHintType);
/** @internal */
export const EditProjectEnvContentHintType$outboundSchema = EditProjectEnvContentHintType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHintType$;
(function (EditProjectEnvContentHintType$) {
    /** @deprecated use `EditProjectEnvContentHintType$inboundSchema` instead. */
    EditProjectEnvContentHintType$.inboundSchema = EditProjectEnvContentHintType$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHintType$outboundSchema` instead. */
    EditProjectEnvContentHintType$.outboundSchema = EditProjectEnvContentHintType$outboundSchema;
})(EditProjectEnvContentHintType$ || (EditProjectEnvContentHintType$ = {}));
/** @internal */
export const EditProjectEnvContentHint1$inboundSchema = z.object({
    type: EditProjectEnvContentHintType$inboundSchema,
    storeId: z.string(),
});
/** @internal */
export const EditProjectEnvContentHint1$outboundSchema = z.object({
    type: EditProjectEnvContentHintType$outboundSchema,
    storeId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvContentHint1$;
(function (EditProjectEnvContentHint1$) {
    /** @deprecated use `EditProjectEnvContentHint1$inboundSchema` instead. */
    EditProjectEnvContentHint1$.inboundSchema = EditProjectEnvContentHint1$inboundSchema;
    /** @deprecated use `EditProjectEnvContentHint1$outboundSchema` instead. */
    EditProjectEnvContentHint1$.outboundSchema = EditProjectEnvContentHint1$outboundSchema;
})(EditProjectEnvContentHint1$ || (EditProjectEnvContentHint1$ = {}));
export function editProjectEnvContentHint1ToJSON(editProjectEnvContentHint1) {
    return JSON.stringify(EditProjectEnvContentHint1$outboundSchema.parse(editProjectEnvContentHint1));
}
export function editProjectEnvContentHint1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvContentHint1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvContentHint1' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBodyContentHint$inboundSchema = z.union([
    z.lazy(() => EditProjectEnvContentHint14$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint1$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint2$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint3$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint4$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint5$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint6$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint7$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint8$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint9$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint10$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint11$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint12$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint13$inboundSchema),
    z.lazy(() => EditProjectEnvContentHint15$inboundSchema),
]);
/** @internal */
export const EditProjectEnvResponseBodyContentHint$outboundSchema = z.union([
    z.lazy(() => EditProjectEnvContentHint14$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint1$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint2$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint3$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint4$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint5$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint6$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint7$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint8$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint9$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint10$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint11$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint12$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint13$outboundSchema),
    z.lazy(() => EditProjectEnvContentHint15$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBodyContentHint$;
(function (EditProjectEnvResponseBodyContentHint$) {
    /** @deprecated use `EditProjectEnvResponseBodyContentHint$inboundSchema` instead. */
    EditProjectEnvResponseBodyContentHint$.inboundSchema = EditProjectEnvResponseBodyContentHint$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBodyContentHint$outboundSchema` instead. */
    EditProjectEnvResponseBodyContentHint$.outboundSchema = EditProjectEnvResponseBodyContentHint$outboundSchema;
})(EditProjectEnvResponseBodyContentHint$ || (EditProjectEnvResponseBodyContentHint$ = {}));
export function editProjectEnvResponseBodyContentHintToJSON(editProjectEnvResponseBodyContentHint) {
    return JSON.stringify(EditProjectEnvResponseBodyContentHint$outboundSchema.parse(editProjectEnvResponseBodyContentHint));
}
export function editProjectEnvResponseBodyContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBodyContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBodyContentHint' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBodyProjectsType$inboundSchema = z.nativeEnum(EditProjectEnvResponseBodyProjectsType);
/** @internal */
export const EditProjectEnvResponseBodyProjectsType$outboundSchema = EditProjectEnvResponseBodyProjectsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBodyProjectsType$;
(function (EditProjectEnvResponseBodyProjectsType$) {
    /** @deprecated use `EditProjectEnvResponseBodyProjectsType$inboundSchema` instead. */
    EditProjectEnvResponseBodyProjectsType$.inboundSchema = EditProjectEnvResponseBodyProjectsType$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBodyProjectsType$outboundSchema` instead. */
    EditProjectEnvResponseBodyProjectsType$.outboundSchema = EditProjectEnvResponseBodyProjectsType$outboundSchema;
})(EditProjectEnvResponseBodyProjectsType$ || (EditProjectEnvResponseBodyProjectsType$ = {}));
/** @internal */
export const EditProjectEnvResponseBodyInternalContentHint$inboundSchema = z.object({
    type: EditProjectEnvResponseBodyProjectsType$inboundSchema,
    encryptedValue: z.string(),
});
/** @internal */
export const EditProjectEnvResponseBodyInternalContentHint$outboundSchema = z.object({
    type: EditProjectEnvResponseBodyProjectsType$outboundSchema,
    encryptedValue: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBodyInternalContentHint$;
(function (EditProjectEnvResponseBodyInternalContentHint$) {
    /** @deprecated use `EditProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
    EditProjectEnvResponseBodyInternalContentHint$.inboundSchema = EditProjectEnvResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
    EditProjectEnvResponseBodyInternalContentHint$.outboundSchema = EditProjectEnvResponseBodyInternalContentHint$outboundSchema;
})(EditProjectEnvResponseBodyInternalContentHint$ || (EditProjectEnvResponseBodyInternalContentHint$ = {}));
export function editProjectEnvResponseBodyInternalContentHintToJSON(editProjectEnvResponseBodyInternalContentHint) {
    return JSON.stringify(EditProjectEnvResponseBodyInternalContentHint$outboundSchema.parse(editProjectEnvResponseBodyInternalContentHint));
}
export function editProjectEnvResponseBodyInternalContentHintFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBodyInternalContentHint$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBodyInternalContentHint' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBody1$inboundSchema = z.object({
    target: z.union([z.array(z.string()), EditProjectEnvTarget2$inboundSchema])
        .optional(),
    type: EditProjectEnvResponseBodyType$inboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => EditProjectEnvContentHint14$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint1$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint2$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint3$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint4$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint5$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint6$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint7$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint8$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint9$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint10$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint11$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint12$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint13$inboundSchema),
        z.lazy(() => EditProjectEnvContentHint15$inboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => EditProjectEnvResponseBodyInternalContentHint$inboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/** @internal */
export const EditProjectEnvResponseBody1$outboundSchema = z.object({
    target: z.union([z.array(z.string()), EditProjectEnvTarget2$outboundSchema])
        .optional(),
    type: EditProjectEnvResponseBodyType$outboundSchema,
    sunsetSecretId: z.string().optional(),
    decrypted: z.boolean().optional(),
    value: z.string(),
    id: z.string().optional(),
    key: z.string(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z.nullable(z.union([
        z.lazy(() => EditProjectEnvContentHint14$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint1$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint2$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint3$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint4$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint5$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint6$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint7$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint8$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint9$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint10$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint11$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint12$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint13$outboundSchema),
        z.lazy(() => EditProjectEnvContentHint15$outboundSchema),
    ])).optional(),
    internalContentHint: z.nullable(z.lazy(() => EditProjectEnvResponseBodyInternalContentHint$outboundSchema)).optional(),
    comment: z.string().optional(),
    customEnvironmentIds: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBody1$;
(function (EditProjectEnvResponseBody1$) {
    /** @deprecated use `EditProjectEnvResponseBody1$inboundSchema` instead. */
    EditProjectEnvResponseBody1$.inboundSchema = EditProjectEnvResponseBody1$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBody1$outboundSchema` instead. */
    EditProjectEnvResponseBody1$.outboundSchema = EditProjectEnvResponseBody1$outboundSchema;
})(EditProjectEnvResponseBody1$ || (EditProjectEnvResponseBody1$ = {}));
export function editProjectEnvResponseBody1ToJSON(editProjectEnvResponseBody1) {
    return JSON.stringify(EditProjectEnvResponseBody1$outboundSchema.parse(editProjectEnvResponseBody1));
}
export function editProjectEnvResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBody1' from JSON`);
}
/** @internal */
export const EditProjectEnvResponseBody$inboundSchema = z.union([
    z.lazy(() => EditProjectEnvResponseBody1$inboundSchema),
    z.lazy(() => EditProjectEnvResponseBody2$inboundSchema),
]);
/** @internal */
export const EditProjectEnvResponseBody$outboundSchema = z.union([
    z.lazy(() => EditProjectEnvResponseBody1$outboundSchema),
    z.lazy(() => EditProjectEnvResponseBody2$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditProjectEnvResponseBody$;
(function (EditProjectEnvResponseBody$) {
    /** @deprecated use `EditProjectEnvResponseBody$inboundSchema` instead. */
    EditProjectEnvResponseBody$.inboundSchema = EditProjectEnvResponseBody$inboundSchema;
    /** @deprecated use `EditProjectEnvResponseBody$outboundSchema` instead. */
    EditProjectEnvResponseBody$.outboundSchema = EditProjectEnvResponseBody$outboundSchema;
})(EditProjectEnvResponseBody$ || (EditProjectEnvResponseBody$ = {}));
export function editProjectEnvResponseBodyToJSON(editProjectEnvResponseBody) {
    return JSON.stringify(EditProjectEnvResponseBody$outboundSchema.parse(editProjectEnvResponseBody));
}
export function editProjectEnvResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditProjectEnvResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditProjectEnvResponseBody' from JSON`);
}
//# sourceMappingURL=editprojectenvop.js.map