/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const RequestDeleteReasons$inboundSchema = z.object({
    slug: z.string(),
    description: z.string(),
});
/** @internal */
export const RequestDeleteReasons$outboundSchema = z.object({
    slug: z.string(),
    description: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestDeleteReasons$;
(function (RequestDeleteReasons$) {
    /** @deprecated use `RequestDeleteReasons$inboundSchema` instead. */
    RequestDeleteReasons$.inboundSchema = RequestDeleteReasons$inboundSchema;
    /** @deprecated use `RequestDeleteReasons$outboundSchema` instead. */
    RequestDeleteReasons$.outboundSchema = RequestDeleteReasons$outboundSchema;
})(RequestDeleteReasons$ || (RequestDeleteReasons$ = {}));
export function requestDeleteReasonsToJSON(requestDeleteReasons) {
    return JSON.stringify(RequestDeleteReasons$outboundSchema.parse(requestDeleteReasons));
}
export function requestDeleteReasonsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestDeleteReasons$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestDeleteReasons' from JSON`);
}
/** @internal */
export const RequestDeleteRequestBody$inboundSchema = z.object({
    reasons: z.array(z.lazy(() => RequestDeleteReasons$inboundSchema)).optional(),
});
/** @internal */
export const RequestDeleteRequestBody$outboundSchema = z.object({
    reasons: z.array(z.lazy(() => RequestDeleteReasons$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestDeleteRequestBody$;
(function (RequestDeleteRequestBody$) {
    /** @deprecated use `RequestDeleteRequestBody$inboundSchema` instead. */
    RequestDeleteRequestBody$.inboundSchema = RequestDeleteRequestBody$inboundSchema;
    /** @deprecated use `RequestDeleteRequestBody$outboundSchema` instead. */
    RequestDeleteRequestBody$.outboundSchema = RequestDeleteRequestBody$outboundSchema;
})(RequestDeleteRequestBody$ || (RequestDeleteRequestBody$ = {}));
export function requestDeleteRequestBodyToJSON(requestDeleteRequestBody) {
    return JSON.stringify(RequestDeleteRequestBody$outboundSchema.parse(requestDeleteRequestBody));
}
export function requestDeleteRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestDeleteRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestDeleteRequestBody' from JSON`);
}
/** @internal */
export const RequestDeleteResponseBody$inboundSchema = z.object({
    id: z.string(),
    email: z.string(),
    message: z.string(),
});
/** @internal */
export const RequestDeleteResponseBody$outboundSchema = z.object({
    id: z.string(),
    email: z.string(),
    message: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestDeleteResponseBody$;
(function (RequestDeleteResponseBody$) {
    /** @deprecated use `RequestDeleteResponseBody$inboundSchema` instead. */
    RequestDeleteResponseBody$.inboundSchema = RequestDeleteResponseBody$inboundSchema;
    /** @deprecated use `RequestDeleteResponseBody$outboundSchema` instead. */
    RequestDeleteResponseBody$.outboundSchema = RequestDeleteResponseBody$outboundSchema;
})(RequestDeleteResponseBody$ || (RequestDeleteResponseBody$ = {}));
export function requestDeleteResponseBodyToJSON(requestDeleteResponseBody) {
    return JSON.stringify(RequestDeleteResponseBody$outboundSchema.parse(requestDeleteResponseBody));
}
export function requestDeleteResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestDeleteResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestDeleteResponseBody' from JSON`);
}
//# sourceMappingURL=requestdeleteop.js.map