/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteIntegrationLogDrainRequest$inboundSchema = z.object({
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const DeleteIntegrationLogDrainRequest$outboundSchema = z.object({
    id: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteIntegrationLogDrainRequest$;
(function (DeleteIntegrationLogDrainRequest$) {
    /** @deprecated use `DeleteIntegrationLogDrainRequest$inboundSchema` instead. */
    DeleteIntegrationLogDrainRequest$.inboundSchema = DeleteIntegrationLogDrainRequest$inboundSchema;
    /** @deprecated use `DeleteIntegrationLogDrainRequest$outboundSchema` instead. */
    DeleteIntegrationLogDrainRequest$.outboundSchema = DeleteIntegrationLogDrainRequest$outboundSchema;
})(DeleteIntegrationLogDrainRequest$ || (DeleteIntegrationLogDrainRequest$ = {}));
export function deleteIntegrationLogDrainRequestToJSON(deleteIntegrationLogDrainRequest) {
    return JSON.stringify(DeleteIntegrationLogDrainRequest$outboundSchema.parse(deleteIntegrationLogDrainRequest));
}
export function deleteIntegrationLogDrainRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteIntegrationLogDrainRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteIntegrationLogDrainRequest' from JSON`);
}
//# sourceMappingURL=deleteintegrationlogdrainop.js.map