import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * move-out
 */
export type PatchDomainRequestBody2 = {
    op?: string | undefined;
    /**
     * User or team to move domain to
     */
    destination?: string | undefined;
};
/**
 * update
 */
export type PatchDomainRequestBody1 = {
    op?: string | undefined;
    /**
     * Specifies whether domain should be renewed.
     */
    renew?: boolean | undefined;
    /**
     * The custom nameservers for this project.
     */
    customNameservers?: Array<string> | undefined;
    /**
     * Specifies whether this is a DNS zone that intends to use Vercel's nameservers.
     */
    zone?: boolean | undefined;
};
export type PatchDomainRequestBody = PatchDomainRequestBody1 | PatchDomainRequestBody2;
export type PatchDomainRequest = {
    domain: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: PatchDomainRequestBody1 | PatchDomainRequestBody2;
};
export type PatchDomainResponseBody3 = {
    renew?: boolean | undefined;
    customNameservers?: Array<string> | undefined;
    zone?: boolean | undefined;
};
export type PatchDomainResponseBody2 = {
    moved: boolean;
    token: string;
};
export type PatchDomainResponseBody1 = {
    moved: boolean;
};
export type PatchDomainResponseBody = PatchDomainResponseBody2 | PatchDomainResponseBody1 | PatchDomainResponseBody3;
/** @internal */
export declare const PatchDomainRequestBody2$inboundSchema: z.ZodType<PatchDomainRequestBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainRequestBody2$Outbound = {
    op?: string | undefined;
    destination?: string | undefined;
};
/** @internal */
export declare const PatchDomainRequestBody2$outboundSchema: z.ZodType<PatchDomainRequestBody2$Outbound, z.ZodTypeDef, PatchDomainRequestBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainRequestBody2$ {
    /** @deprecated use `PatchDomainRequestBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainRequestBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainRequestBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainRequestBody2$Outbound, z.ZodTypeDef, PatchDomainRequestBody2>;
    /** @deprecated use `PatchDomainRequestBody2$Outbound` instead. */
    type Outbound = PatchDomainRequestBody2$Outbound;
}
export declare function patchDomainRequestBody2ToJSON(patchDomainRequestBody2: PatchDomainRequestBody2): string;
export declare function patchDomainRequestBody2FromJSON(jsonString: string): SafeParseResult<PatchDomainRequestBody2, SDKValidationError>;
/** @internal */
export declare const PatchDomainRequestBody1$inboundSchema: z.ZodType<PatchDomainRequestBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainRequestBody1$Outbound = {
    op?: string | undefined;
    renew?: boolean | undefined;
    customNameservers?: Array<string> | undefined;
    zone?: boolean | undefined;
};
/** @internal */
export declare const PatchDomainRequestBody1$outboundSchema: z.ZodType<PatchDomainRequestBody1$Outbound, z.ZodTypeDef, PatchDomainRequestBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainRequestBody1$ {
    /** @deprecated use `PatchDomainRequestBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainRequestBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainRequestBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainRequestBody1$Outbound, z.ZodTypeDef, PatchDomainRequestBody1>;
    /** @deprecated use `PatchDomainRequestBody1$Outbound` instead. */
    type Outbound = PatchDomainRequestBody1$Outbound;
}
export declare function patchDomainRequestBody1ToJSON(patchDomainRequestBody1: PatchDomainRequestBody1): string;
export declare function patchDomainRequestBody1FromJSON(jsonString: string): SafeParseResult<PatchDomainRequestBody1, SDKValidationError>;
/** @internal */
export declare const PatchDomainRequestBody$inboundSchema: z.ZodType<PatchDomainRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainRequestBody$Outbound = PatchDomainRequestBody1$Outbound | PatchDomainRequestBody2$Outbound;
/** @internal */
export declare const PatchDomainRequestBody$outboundSchema: z.ZodType<PatchDomainRequestBody$Outbound, z.ZodTypeDef, PatchDomainRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainRequestBody$ {
    /** @deprecated use `PatchDomainRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainRequestBody$Outbound, z.ZodTypeDef, PatchDomainRequestBody>;
    /** @deprecated use `PatchDomainRequestBody$Outbound` instead. */
    type Outbound = PatchDomainRequestBody$Outbound;
}
export declare function patchDomainRequestBodyToJSON(patchDomainRequestBody: PatchDomainRequestBody): string;
export declare function patchDomainRequestBodyFromJSON(jsonString: string): SafeParseResult<PatchDomainRequestBody, SDKValidationError>;
/** @internal */
export declare const PatchDomainRequest$inboundSchema: z.ZodType<PatchDomainRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainRequest$Outbound = {
    domain: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: PatchDomainRequestBody1$Outbound | PatchDomainRequestBody2$Outbound;
};
/** @internal */
export declare const PatchDomainRequest$outboundSchema: z.ZodType<PatchDomainRequest$Outbound, z.ZodTypeDef, PatchDomainRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainRequest$ {
    /** @deprecated use `PatchDomainRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainRequest$Outbound, z.ZodTypeDef, PatchDomainRequest>;
    /** @deprecated use `PatchDomainRequest$Outbound` instead. */
    type Outbound = PatchDomainRequest$Outbound;
}
export declare function patchDomainRequestToJSON(patchDomainRequest: PatchDomainRequest): string;
export declare function patchDomainRequestFromJSON(jsonString: string): SafeParseResult<PatchDomainRequest, SDKValidationError>;
/** @internal */
export declare const PatchDomainResponseBody3$inboundSchema: z.ZodType<PatchDomainResponseBody3, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainResponseBody3$Outbound = {
    renew?: boolean | undefined;
    customNameservers?: Array<string> | undefined;
    zone?: boolean | undefined;
};
/** @internal */
export declare const PatchDomainResponseBody3$outboundSchema: z.ZodType<PatchDomainResponseBody3$Outbound, z.ZodTypeDef, PatchDomainResponseBody3>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainResponseBody3$ {
    /** @deprecated use `PatchDomainResponseBody3$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainResponseBody3, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainResponseBody3$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainResponseBody3$Outbound, z.ZodTypeDef, PatchDomainResponseBody3>;
    /** @deprecated use `PatchDomainResponseBody3$Outbound` instead. */
    type Outbound = PatchDomainResponseBody3$Outbound;
}
export declare function patchDomainResponseBody3ToJSON(patchDomainResponseBody3: PatchDomainResponseBody3): string;
export declare function patchDomainResponseBody3FromJSON(jsonString: string): SafeParseResult<PatchDomainResponseBody3, SDKValidationError>;
/** @internal */
export declare const PatchDomainResponseBody2$inboundSchema: z.ZodType<PatchDomainResponseBody2, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainResponseBody2$Outbound = {
    moved: boolean;
    token: string;
};
/** @internal */
export declare const PatchDomainResponseBody2$outboundSchema: z.ZodType<PatchDomainResponseBody2$Outbound, z.ZodTypeDef, PatchDomainResponseBody2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainResponseBody2$ {
    /** @deprecated use `PatchDomainResponseBody2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainResponseBody2, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainResponseBody2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainResponseBody2$Outbound, z.ZodTypeDef, PatchDomainResponseBody2>;
    /** @deprecated use `PatchDomainResponseBody2$Outbound` instead. */
    type Outbound = PatchDomainResponseBody2$Outbound;
}
export declare function patchDomainResponseBody2ToJSON(patchDomainResponseBody2: PatchDomainResponseBody2): string;
export declare function patchDomainResponseBody2FromJSON(jsonString: string): SafeParseResult<PatchDomainResponseBody2, SDKValidationError>;
/** @internal */
export declare const PatchDomainResponseBody1$inboundSchema: z.ZodType<PatchDomainResponseBody1, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainResponseBody1$Outbound = {
    moved: boolean;
};
/** @internal */
export declare const PatchDomainResponseBody1$outboundSchema: z.ZodType<PatchDomainResponseBody1$Outbound, z.ZodTypeDef, PatchDomainResponseBody1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainResponseBody1$ {
    /** @deprecated use `PatchDomainResponseBody1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainResponseBody1, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainResponseBody1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainResponseBody1$Outbound, z.ZodTypeDef, PatchDomainResponseBody1>;
    /** @deprecated use `PatchDomainResponseBody1$Outbound` instead. */
    type Outbound = PatchDomainResponseBody1$Outbound;
}
export declare function patchDomainResponseBody1ToJSON(patchDomainResponseBody1: PatchDomainResponseBody1): string;
export declare function patchDomainResponseBody1FromJSON(jsonString: string): SafeParseResult<PatchDomainResponseBody1, SDKValidationError>;
/** @internal */
export declare const PatchDomainResponseBody$inboundSchema: z.ZodType<PatchDomainResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchDomainResponseBody$Outbound = PatchDomainResponseBody2$Outbound | PatchDomainResponseBody1$Outbound | PatchDomainResponseBody3$Outbound;
/** @internal */
export declare const PatchDomainResponseBody$outboundSchema: z.ZodType<PatchDomainResponseBody$Outbound, z.ZodTypeDef, PatchDomainResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchDomainResponseBody$ {
    /** @deprecated use `PatchDomainResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchDomainResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchDomainResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchDomainResponseBody$Outbound, z.ZodTypeDef, PatchDomainResponseBody>;
    /** @deprecated use `PatchDomainResponseBody$Outbound` instead. */
    type Outbound = PatchDomainResponseBody$Outbound;
}
export declare function patchDomainResponseBodyToJSON(patchDomainResponseBody: PatchDomainResponseBody): string;
export declare function patchDomainResponseBodyFromJSON(jsonString: string): SafeParseResult<PatchDomainResponseBody, SDKValidationError>;
//# sourceMappingURL=patchdomainop.d.ts.map