/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/**
 * The type of environment (production, preview, or development)
 */
export const GetCustomEnvironmentType = {
    Preview: "preview",
    Production: "production",
    Development: "development",
};
/**
 * The type of matching to perform
 */
export const GetCustomEnvironmentEnvironmentType = {
    EndsWith: "endsWith",
    StartsWith: "startsWith",
    Equals: "equals",
};
/** @internal */
export const GetCustomEnvironmentRequest$inboundSchema = z.object({
    idOrName: z.string(),
    environmentSlugOrId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetCustomEnvironmentRequest$outboundSchema = z.object({
    idOrName: z.string(),
    environmentSlugOrId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentRequest$;
(function (GetCustomEnvironmentRequest$) {
    /** @deprecated use `GetCustomEnvironmentRequest$inboundSchema` instead. */
    GetCustomEnvironmentRequest$.inboundSchema = GetCustomEnvironmentRequest$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentRequest$outboundSchema` instead. */
    GetCustomEnvironmentRequest$.outboundSchema = GetCustomEnvironmentRequest$outboundSchema;
})(GetCustomEnvironmentRequest$ || (GetCustomEnvironmentRequest$ = {}));
export function getCustomEnvironmentRequestToJSON(getCustomEnvironmentRequest) {
    return JSON.stringify(GetCustomEnvironmentRequest$outboundSchema.parse(getCustomEnvironmentRequest));
}
export function getCustomEnvironmentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetCustomEnvironmentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomEnvironmentRequest' from JSON`);
}
/** @internal */
export const GetCustomEnvironmentType$inboundSchema = z.nativeEnum(GetCustomEnvironmentType);
/** @internal */
export const GetCustomEnvironmentType$outboundSchema = GetCustomEnvironmentType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentType$;
(function (GetCustomEnvironmentType$) {
    /** @deprecated use `GetCustomEnvironmentType$inboundSchema` instead. */
    GetCustomEnvironmentType$.inboundSchema = GetCustomEnvironmentType$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentType$outboundSchema` instead. */
    GetCustomEnvironmentType$.outboundSchema = GetCustomEnvironmentType$outboundSchema;
})(GetCustomEnvironmentType$ || (GetCustomEnvironmentType$ = {}));
/** @internal */
export const GetCustomEnvironmentEnvironmentType$inboundSchema = z.nativeEnum(GetCustomEnvironmentEnvironmentType);
/** @internal */
export const GetCustomEnvironmentEnvironmentType$outboundSchema = GetCustomEnvironmentEnvironmentType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentEnvironmentType$;
(function (GetCustomEnvironmentEnvironmentType$) {
    /** @deprecated use `GetCustomEnvironmentEnvironmentType$inboundSchema` instead. */
    GetCustomEnvironmentEnvironmentType$.inboundSchema = GetCustomEnvironmentEnvironmentType$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentEnvironmentType$outboundSchema` instead. */
    GetCustomEnvironmentEnvironmentType$.outboundSchema = GetCustomEnvironmentEnvironmentType$outboundSchema;
})(GetCustomEnvironmentEnvironmentType$ || (GetCustomEnvironmentEnvironmentType$ = {}));
/** @internal */
export const GetCustomEnvironmentBranchMatcher$inboundSchema = z.object({
    type: GetCustomEnvironmentEnvironmentType$inboundSchema,
    pattern: z.string(),
});
/** @internal */
export const GetCustomEnvironmentBranchMatcher$outboundSchema = z.object({
    type: GetCustomEnvironmentEnvironmentType$outboundSchema,
    pattern: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentBranchMatcher$;
(function (GetCustomEnvironmentBranchMatcher$) {
    /** @deprecated use `GetCustomEnvironmentBranchMatcher$inboundSchema` instead. */
    GetCustomEnvironmentBranchMatcher$.inboundSchema = GetCustomEnvironmentBranchMatcher$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentBranchMatcher$outboundSchema` instead. */
    GetCustomEnvironmentBranchMatcher$.outboundSchema = GetCustomEnvironmentBranchMatcher$outboundSchema;
})(GetCustomEnvironmentBranchMatcher$ || (GetCustomEnvironmentBranchMatcher$ = {}));
export function getCustomEnvironmentBranchMatcherToJSON(getCustomEnvironmentBranchMatcher) {
    return JSON.stringify(GetCustomEnvironmentBranchMatcher$outboundSchema.parse(getCustomEnvironmentBranchMatcher));
}
export function getCustomEnvironmentBranchMatcherFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetCustomEnvironmentBranchMatcher$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomEnvironmentBranchMatcher' from JSON`);
}
/** @internal */
export const GetCustomEnvironmentVerification$inboundSchema = z.object({
    type: z.string(),
    domain: z.string(),
    value: z.string(),
    reason: z.string(),
});
/** @internal */
export const GetCustomEnvironmentVerification$outboundSchema = z.object({
    type: z.string(),
    domain: z.string(),
    value: z.string(),
    reason: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentVerification$;
(function (GetCustomEnvironmentVerification$) {
    /** @deprecated use `GetCustomEnvironmentVerification$inboundSchema` instead. */
    GetCustomEnvironmentVerification$.inboundSchema = GetCustomEnvironmentVerification$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentVerification$outboundSchema` instead. */
    GetCustomEnvironmentVerification$.outboundSchema = GetCustomEnvironmentVerification$outboundSchema;
})(GetCustomEnvironmentVerification$ || (GetCustomEnvironmentVerification$ = {}));
export function getCustomEnvironmentVerificationToJSON(getCustomEnvironmentVerification) {
    return JSON.stringify(GetCustomEnvironmentVerification$outboundSchema.parse(getCustomEnvironmentVerification));
}
export function getCustomEnvironmentVerificationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetCustomEnvironmentVerification$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomEnvironmentVerification' from JSON`);
}
/** @internal */
export const GetCustomEnvironmentDomains$inboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
    verification: z.array(z.lazy(() => GetCustomEnvironmentVerification$inboundSchema)).optional(),
});
/** @internal */
export const GetCustomEnvironmentDomains$outboundSchema = z.object({
    name: z.string(),
    apexName: z.string(),
    projectId: z.string(),
    redirect: z.nullable(z.string()).optional(),
    redirectStatusCode: z.nullable(z.number()).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    customEnvironmentId: z.nullable(z.string()).optional(),
    updatedAt: z.number().optional(),
    createdAt: z.number().optional(),
    verified: z.boolean(),
    verification: z.array(z.lazy(() => GetCustomEnvironmentVerification$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentDomains$;
(function (GetCustomEnvironmentDomains$) {
    /** @deprecated use `GetCustomEnvironmentDomains$inboundSchema` instead. */
    GetCustomEnvironmentDomains$.inboundSchema = GetCustomEnvironmentDomains$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentDomains$outboundSchema` instead. */
    GetCustomEnvironmentDomains$.outboundSchema = GetCustomEnvironmentDomains$outboundSchema;
})(GetCustomEnvironmentDomains$ || (GetCustomEnvironmentDomains$ = {}));
export function getCustomEnvironmentDomainsToJSON(getCustomEnvironmentDomains) {
    return JSON.stringify(GetCustomEnvironmentDomains$outboundSchema.parse(getCustomEnvironmentDomains));
}
export function getCustomEnvironmentDomainsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetCustomEnvironmentDomains$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomEnvironmentDomains' from JSON`);
}
/** @internal */
export const GetCustomEnvironmentResponseBody$inboundSchema = z.object({
    id: z.string(),
    slug: z.string(),
    type: GetCustomEnvironmentType$inboundSchema,
    description: z.string().optional(),
    branchMatcher: z.lazy(() => GetCustomEnvironmentBranchMatcher$inboundSchema)
        .optional(),
    domains: z.array(z.lazy(() => GetCustomEnvironmentDomains$inboundSchema))
        .optional(),
    currentDeploymentAliases: z.array(z.string()).optional(),
    createdAt: z.number(),
    updatedAt: z.number(),
});
/** @internal */
export const GetCustomEnvironmentResponseBody$outboundSchema = z.object({
    id: z.string(),
    slug: z.string(),
    type: GetCustomEnvironmentType$outboundSchema,
    description: z.string().optional(),
    branchMatcher: z.lazy(() => GetCustomEnvironmentBranchMatcher$outboundSchema)
        .optional(),
    domains: z.array(z.lazy(() => GetCustomEnvironmentDomains$outboundSchema))
        .optional(),
    currentDeploymentAliases: z.array(z.string()).optional(),
    createdAt: z.number(),
    updatedAt: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetCustomEnvironmentResponseBody$;
(function (GetCustomEnvironmentResponseBody$) {
    /** @deprecated use `GetCustomEnvironmentResponseBody$inboundSchema` instead. */
    GetCustomEnvironmentResponseBody$.inboundSchema = GetCustomEnvironmentResponseBody$inboundSchema;
    /** @deprecated use `GetCustomEnvironmentResponseBody$outboundSchema` instead. */
    GetCustomEnvironmentResponseBody$.outboundSchema = GetCustomEnvironmentResponseBody$outboundSchema;
})(GetCustomEnvironmentResponseBody$ || (GetCustomEnvironmentResponseBody$ = {}));
export function getCustomEnvironmentResponseBodyToJSON(getCustomEnvironmentResponseBody) {
    return JSON.stringify(GetCustomEnvironmentResponseBody$outboundSchema.parse(getCustomEnvironmentResponseBody));
}
export function getCustomEnvironmentResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetCustomEnvironmentResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCustomEnvironmentResponseBody' from JSON`);
}
//# sourceMappingURL=getcustomenvironmentop.js.map