/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
/** @internal */
export const ListPromoteAliasesRequest$inboundSchema = z.object({
    projectId: z.string(),
    limit: z.number().optional(),
    since: z.number().optional(),
    until: z.number().optional(),
    failedOnly: z.boolean().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const ListPromoteAliasesRequest$outboundSchema = z.object({
    projectId: z.string(),
    limit: z.number().optional(),
    since: z.number().optional(),
    until: z.number().optional(),
    failedOnly: z.boolean().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPromoteAliasesRequest$;
(function (ListPromoteAliasesRequest$) {
    /** @deprecated use `ListPromoteAliasesRequest$inboundSchema` instead. */
    ListPromoteAliasesRequest$.inboundSchema = ListPromoteAliasesRequest$inboundSchema;
    /** @deprecated use `ListPromoteAliasesRequest$outboundSchema` instead. */
    ListPromoteAliasesRequest$.outboundSchema = ListPromoteAliasesRequest$outboundSchema;
})(ListPromoteAliasesRequest$ || (ListPromoteAliasesRequest$ = {}));
export function listPromoteAliasesRequestToJSON(listPromoteAliasesRequest) {
    return JSON.stringify(ListPromoteAliasesRequest$outboundSchema.parse(listPromoteAliasesRequest));
}
export function listPromoteAliasesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPromoteAliasesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPromoteAliasesRequest' from JSON`);
}
/** @internal */
export const ResponseBodyAliases$inboundSchema = z.object({
    status: z.string(),
    alias: z.string(),
    id: z.string(),
});
/** @internal */
export const ResponseBodyAliases$outboundSchema = z.object({
    status: z.string(),
    alias: z.string(),
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseBodyAliases$;
(function (ResponseBodyAliases$) {
    /** @deprecated use `ResponseBodyAliases$inboundSchema` instead. */
    ResponseBodyAliases$.inboundSchema = ResponseBodyAliases$inboundSchema;
    /** @deprecated use `ResponseBodyAliases$outboundSchema` instead. */
    ResponseBodyAliases$.outboundSchema = ResponseBodyAliases$outboundSchema;
})(ResponseBodyAliases$ || (ResponseBodyAliases$ = {}));
export function responseBodyAliasesToJSON(responseBodyAliases) {
    return JSON.stringify(ResponseBodyAliases$outboundSchema.parse(responseBodyAliases));
}
export function responseBodyAliasesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseBodyAliases$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseBodyAliases' from JSON`);
}
/** @internal */
export const ListPromoteAliasesResponseBody2$inboundSchema = z.object({
    aliases: z.array(z.lazy(() => ResponseBodyAliases$inboundSchema)),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ListPromoteAliasesResponseBody2$outboundSchema = z.object({
    aliases: z.array(z.lazy(() => ResponseBodyAliases$outboundSchema)),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPromoteAliasesResponseBody2$;
(function (ListPromoteAliasesResponseBody2$) {
    /** @deprecated use `ListPromoteAliasesResponseBody2$inboundSchema` instead. */
    ListPromoteAliasesResponseBody2$.inboundSchema = ListPromoteAliasesResponseBody2$inboundSchema;
    /** @deprecated use `ListPromoteAliasesResponseBody2$outboundSchema` instead. */
    ListPromoteAliasesResponseBody2$.outboundSchema = ListPromoteAliasesResponseBody2$outboundSchema;
})(ListPromoteAliasesResponseBody2$ || (ListPromoteAliasesResponseBody2$ = {}));
export function listPromoteAliasesResponseBody2ToJSON(listPromoteAliasesResponseBody2) {
    return JSON.stringify(ListPromoteAliasesResponseBody2$outboundSchema.parse(listPromoteAliasesResponseBody2));
}
export function listPromoteAliasesResponseBody2FromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPromoteAliasesResponseBody2$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPromoteAliasesResponseBody2' from JSON`);
}
/** @internal */
export const ListPromoteAliasesResponseBody1$inboundSchema = z.object({});
/** @internal */
export const ListPromoteAliasesResponseBody1$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPromoteAliasesResponseBody1$;
(function (ListPromoteAliasesResponseBody1$) {
    /** @deprecated use `ListPromoteAliasesResponseBody1$inboundSchema` instead. */
    ListPromoteAliasesResponseBody1$.inboundSchema = ListPromoteAliasesResponseBody1$inboundSchema;
    /** @deprecated use `ListPromoteAliasesResponseBody1$outboundSchema` instead. */
    ListPromoteAliasesResponseBody1$.outboundSchema = ListPromoteAliasesResponseBody1$outboundSchema;
})(ListPromoteAliasesResponseBody1$ || (ListPromoteAliasesResponseBody1$ = {}));
export function listPromoteAliasesResponseBody1ToJSON(listPromoteAliasesResponseBody1) {
    return JSON.stringify(ListPromoteAliasesResponseBody1$outboundSchema.parse(listPromoteAliasesResponseBody1));
}
export function listPromoteAliasesResponseBody1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPromoteAliasesResponseBody1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPromoteAliasesResponseBody1' from JSON`);
}
/** @internal */
export const ListPromoteAliasesResponseBody$inboundSchema = z.union([
    z.lazy(() => ListPromoteAliasesResponseBody2$inboundSchema),
    z.lazy(() => ListPromoteAliasesResponseBody1$inboundSchema),
]);
/** @internal */
export const ListPromoteAliasesResponseBody$outboundSchema = z.union([
    z.lazy(() => ListPromoteAliasesResponseBody2$outboundSchema),
    z.lazy(() => ListPromoteAliasesResponseBody1$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPromoteAliasesResponseBody$;
(function (ListPromoteAliasesResponseBody$) {
    /** @deprecated use `ListPromoteAliasesResponseBody$inboundSchema` instead. */
    ListPromoteAliasesResponseBody$.inboundSchema = ListPromoteAliasesResponseBody$inboundSchema;
    /** @deprecated use `ListPromoteAliasesResponseBody$outboundSchema` instead. */
    ListPromoteAliasesResponseBody$.outboundSchema = ListPromoteAliasesResponseBody$outboundSchema;
})(ListPromoteAliasesResponseBody$ || (ListPromoteAliasesResponseBody$ = {}));
export function listPromoteAliasesResponseBodyToJSON(listPromoteAliasesResponseBody) {
    return JSON.stringify(ListPromoteAliasesResponseBody$outboundSchema.parse(listPromoteAliasesResponseBody));
}
export function listPromoteAliasesResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPromoteAliasesResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPromoteAliasesResponseBody' from JSON`);
}
//# sourceMappingURL=listpromotealiasesop.js.map