import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { AuthToken, AuthToken$Outbound } from "./authtoken.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type CreateAuthTokenRequestBody = {
    name: string;
    expiresAt?: number | undefined;
};
export type CreateAuthTokenRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateAuthTokenRequestBody;
};
/**
 * Successful response.
 */
export type CreateAuthTokenResponseBody = {
    /**
     * Authentication token metadata.
     */
    token: AuthToken;
    /**
     * The authentication token's actual value. This token is only provided in this response, and can never be retrieved again in the future. Be sure to save it somewhere safe!
     */
    bearerToken: string;
};
/** @internal */
export declare const CreateAuthTokenRequestBody$inboundSchema: z.ZodType<CreateAuthTokenRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAuthTokenRequestBody$Outbound = {
    name: string;
    expiresAt?: number | undefined;
};
/** @internal */
export declare const CreateAuthTokenRequestBody$outboundSchema: z.ZodType<CreateAuthTokenRequestBody$Outbound, z.ZodTypeDef, CreateAuthTokenRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAuthTokenRequestBody$ {
    /** @deprecated use `CreateAuthTokenRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAuthTokenRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAuthTokenRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAuthTokenRequestBody$Outbound, z.ZodTypeDef, CreateAuthTokenRequestBody>;
    /** @deprecated use `CreateAuthTokenRequestBody$Outbound` instead. */
    type Outbound = CreateAuthTokenRequestBody$Outbound;
}
export declare function createAuthTokenRequestBodyToJSON(createAuthTokenRequestBody: CreateAuthTokenRequestBody): string;
export declare function createAuthTokenRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateAuthTokenRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateAuthTokenRequest$inboundSchema: z.ZodType<CreateAuthTokenRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAuthTokenRequest$Outbound = {
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateAuthTokenRequestBody$Outbound;
};
/** @internal */
export declare const CreateAuthTokenRequest$outboundSchema: z.ZodType<CreateAuthTokenRequest$Outbound, z.ZodTypeDef, CreateAuthTokenRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAuthTokenRequest$ {
    /** @deprecated use `CreateAuthTokenRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAuthTokenRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAuthTokenRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAuthTokenRequest$Outbound, z.ZodTypeDef, CreateAuthTokenRequest>;
    /** @deprecated use `CreateAuthTokenRequest$Outbound` instead. */
    type Outbound = CreateAuthTokenRequest$Outbound;
}
export declare function createAuthTokenRequestToJSON(createAuthTokenRequest: CreateAuthTokenRequest): string;
export declare function createAuthTokenRequestFromJSON(jsonString: string): SafeParseResult<CreateAuthTokenRequest, SDKValidationError>;
/** @internal */
export declare const CreateAuthTokenResponseBody$inboundSchema: z.ZodType<CreateAuthTokenResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateAuthTokenResponseBody$Outbound = {
    token: AuthToken$Outbound;
    bearerToken: string;
};
/** @internal */
export declare const CreateAuthTokenResponseBody$outboundSchema: z.ZodType<CreateAuthTokenResponseBody$Outbound, z.ZodTypeDef, CreateAuthTokenResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateAuthTokenResponseBody$ {
    /** @deprecated use `CreateAuthTokenResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateAuthTokenResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateAuthTokenResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateAuthTokenResponseBody$Outbound, z.ZodTypeDef, CreateAuthTokenResponseBody>;
    /** @deprecated use `CreateAuthTokenResponseBody$Outbound` instead. */
    type Outbound = CreateAuthTokenResponseBody$Outbound;
}
export declare function createAuthTokenResponseBodyToJSON(createAuthTokenResponseBody: CreateAuthTokenResponseBody): string;
export declare function createAuthTokenResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateAuthTokenResponseBody, SDKValidationError>;
//# sourceMappingURL=createauthtokenop.d.ts.map