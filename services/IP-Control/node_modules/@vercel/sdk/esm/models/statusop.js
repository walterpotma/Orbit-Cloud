/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const StatusStatus = {
    Disabled: "disabled",
    Enabled: "enabled",
    OverLimit: "over_limit",
    Paused: "paused",
};
/** @internal */
export const StatusRequest$inboundSchema = z.object({
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const StatusRequest$outboundSchema = z.object({
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StatusRequest$;
(function (StatusRequest$) {
    /** @deprecated use `StatusRequest$inboundSchema` instead. */
    StatusRequest$.inboundSchema = StatusRequest$inboundSchema;
    /** @deprecated use `StatusRequest$outboundSchema` instead. */
    StatusRequest$.outboundSchema = StatusRequest$outboundSchema;
})(StatusRequest$ || (StatusRequest$ = {}));
export function statusRequestToJSON(statusRequest) {
    return JSON.stringify(StatusRequest$outboundSchema.parse(statusRequest));
}
export function statusRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => StatusRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StatusRequest' from JSON`);
}
/** @internal */
export const StatusStatus$inboundSchema = z.nativeEnum(StatusStatus);
/** @internal */
export const StatusStatus$outboundSchema = StatusStatus$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StatusStatus$;
(function (StatusStatus$) {
    /** @deprecated use `StatusStatus$inboundSchema` instead. */
    StatusStatus$.inboundSchema = StatusStatus$inboundSchema;
    /** @deprecated use `StatusStatus$outboundSchema` instead. */
    StatusStatus$.outboundSchema = StatusStatus$outboundSchema;
})(StatusStatus$ || (StatusStatus$ = {}));
/** @internal */
export const StatusResponseBody$inboundSchema = z.object({
    status: StatusStatus$inboundSchema,
});
/** @internal */
export const StatusResponseBody$outboundSchema = z.object({
    status: StatusStatus$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StatusResponseBody$;
(function (StatusResponseBody$) {
    /** @deprecated use `StatusResponseBody$inboundSchema` instead. */
    StatusResponseBody$.inboundSchema = StatusResponseBody$inboundSchema;
    /** @deprecated use `StatusResponseBody$outboundSchema` instead. */
    StatusResponseBody$.outboundSchema = StatusResponseBody$outboundSchema;
})(StatusResponseBody$ || (StatusResponseBody$ = {}));
export function statusResponseBodyToJSON(statusResponseBody) {
    return JSON.stringify(StatusResponseBody$outboundSchema.parse(statusResponseBody));
}
export function statusResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => StatusResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StatusResponseBody' from JSON`);
}
//# sourceMappingURL=statusop.js.map