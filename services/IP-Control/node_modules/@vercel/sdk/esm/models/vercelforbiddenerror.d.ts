import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import { VercelError } from "./vercelerror.js";
export type VercelForbiddenErrorError = {
    code: string;
    message: string;
};
export type VercelForbiddenErrorData = {
    error: VercelForbiddenErrorError;
};
export declare class VercelForbiddenError extends VercelError {
    error: VercelForbiddenErrorError;
    /** The original data that was passed to this error instance. */
    data$: VercelForbiddenErrorData;
    constructor(err: VercelForbiddenErrorData, httpMeta: {
        response: Response;
        request: Request;
        body: string;
    });
}
/** @internal */
export declare const VercelForbiddenErrorError$inboundSchema: z.ZodType<VercelForbiddenErrorError, z.ZodTypeDef, unknown>;
/** @internal */
export type VercelForbiddenErrorError$Outbound = {
    code: string;
    message: string;
};
/** @internal */
export declare const VercelForbiddenErrorError$outboundSchema: z.ZodType<VercelForbiddenErrorError$Outbound, z.ZodTypeDef, VercelForbiddenErrorError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VercelForbiddenErrorError$ {
    /** @deprecated use `VercelForbiddenErrorError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VercelForbiddenErrorError, z.ZodTypeDef, unknown>;
    /** @deprecated use `VercelForbiddenErrorError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VercelForbiddenErrorError$Outbound, z.ZodTypeDef, VercelForbiddenErrorError>;
    /** @deprecated use `VercelForbiddenErrorError$Outbound` instead. */
    type Outbound = VercelForbiddenErrorError$Outbound;
}
export declare function vercelForbiddenErrorErrorToJSON(vercelForbiddenErrorError: VercelForbiddenErrorError): string;
export declare function vercelForbiddenErrorErrorFromJSON(jsonString: string): SafeParseResult<VercelForbiddenErrorError, SDKValidationError>;
/** @internal */
export declare const VercelForbiddenError$inboundSchema: z.ZodType<VercelForbiddenError, z.ZodTypeDef, unknown>;
/** @internal */
export type VercelForbiddenError$Outbound = {
    error: VercelForbiddenErrorError$Outbound;
};
/** @internal */
export declare const VercelForbiddenError$outboundSchema: z.ZodType<VercelForbiddenError$Outbound, z.ZodTypeDef, VercelForbiddenError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VercelForbiddenError$ {
    /** @deprecated use `VercelForbiddenError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VercelForbiddenError, z.ZodTypeDef, unknown>;
    /** @deprecated use `VercelForbiddenError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VercelForbiddenError$Outbound, z.ZodTypeDef, VercelForbiddenError>;
    /** @deprecated use `VercelForbiddenError$Outbound` instead. */
    type Outbound = VercelForbiddenError$Outbound;
}
//# sourceMappingURL=vercelforbiddenerror.d.ts.map