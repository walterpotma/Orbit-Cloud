/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const PatchEdgeConfigSchemaRequestBody$inboundSchema = z.object({
    definition: z.any().optional(),
});
/** @internal */
export const PatchEdgeConfigSchemaRequestBody$outboundSchema = z.object({
    definition: z.any().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PatchEdgeConfigSchemaRequestBody$;
(function (PatchEdgeConfigSchemaRequestBody$) {
    /** @deprecated use `PatchEdgeConfigSchemaRequestBody$inboundSchema` instead. */
    PatchEdgeConfigSchemaRequestBody$.inboundSchema = PatchEdgeConfigSchemaRequestBody$inboundSchema;
    /** @deprecated use `PatchEdgeConfigSchemaRequestBody$outboundSchema` instead. */
    PatchEdgeConfigSchemaRequestBody$.outboundSchema = PatchEdgeConfigSchemaRequestBody$outboundSchema;
})(PatchEdgeConfigSchemaRequestBody$ || (PatchEdgeConfigSchemaRequestBody$ = {}));
export function patchEdgeConfigSchemaRequestBodyToJSON(patchEdgeConfigSchemaRequestBody) {
    return JSON.stringify(PatchEdgeConfigSchemaRequestBody$outboundSchema.parse(patchEdgeConfigSchemaRequestBody));
}
export function patchEdgeConfigSchemaRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PatchEdgeConfigSchemaRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PatchEdgeConfigSchemaRequestBody' from JSON`);
}
/** @internal */
export const PatchEdgeConfigSchemaRequest$inboundSchema = z.object({
    edgeConfigId: z.string(),
    dryRun: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.lazy(() => PatchEdgeConfigSchemaRequestBody$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const PatchEdgeConfigSchemaRequest$outboundSchema = z.object({
    edgeConfigId: z.string(),
    dryRun: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.lazy(() => PatchEdgeConfigSchemaRequestBody$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PatchEdgeConfigSchemaRequest$;
(function (PatchEdgeConfigSchemaRequest$) {
    /** @deprecated use `PatchEdgeConfigSchemaRequest$inboundSchema` instead. */
    PatchEdgeConfigSchemaRequest$.inboundSchema = PatchEdgeConfigSchemaRequest$inboundSchema;
    /** @deprecated use `PatchEdgeConfigSchemaRequest$outboundSchema` instead. */
    PatchEdgeConfigSchemaRequest$.outboundSchema = PatchEdgeConfigSchemaRequest$outboundSchema;
})(PatchEdgeConfigSchemaRequest$ || (PatchEdgeConfigSchemaRequest$ = {}));
export function patchEdgeConfigSchemaRequestToJSON(patchEdgeConfigSchemaRequest) {
    return JSON.stringify(PatchEdgeConfigSchemaRequest$outboundSchema.parse(patchEdgeConfigSchemaRequest));
}
export function patchEdgeConfigSchemaRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PatchEdgeConfigSchemaRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PatchEdgeConfigSchemaRequest' from JSON`);
}
/** @internal */
export const PatchEdgeConfigSchemaResponseBody$inboundSchema = z.object({});
/** @internal */
export const PatchEdgeConfigSchemaResponseBody$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PatchEdgeConfigSchemaResponseBody$;
(function (PatchEdgeConfigSchemaResponseBody$) {
    /** @deprecated use `PatchEdgeConfigSchemaResponseBody$inboundSchema` instead. */
    PatchEdgeConfigSchemaResponseBody$.inboundSchema = PatchEdgeConfigSchemaResponseBody$inboundSchema;
    /** @deprecated use `PatchEdgeConfigSchemaResponseBody$outboundSchema` instead. */
    PatchEdgeConfigSchemaResponseBody$.outboundSchema = PatchEdgeConfigSchemaResponseBody$outboundSchema;
})(PatchEdgeConfigSchemaResponseBody$ || (PatchEdgeConfigSchemaResponseBody$ = {}));
export function patchEdgeConfigSchemaResponseBodyToJSON(patchEdgeConfigSchemaResponseBody) {
    return JSON.stringify(PatchEdgeConfigSchemaResponseBody$outboundSchema.parse(patchEdgeConfigSchemaResponseBody));
}
export function patchEdgeConfigSchemaResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PatchEdgeConfigSchemaResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PatchEdgeConfigSchemaResponseBody' from JSON`);
}
//# sourceMappingURL=patchedgeconfigschemaop.js.map