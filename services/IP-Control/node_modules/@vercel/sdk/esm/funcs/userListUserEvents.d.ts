import { VercelCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/httpclienterrors.js";
import { ListUserEventsRequest, ListUserEventsResponseBody } from "../models/listusereventsop.js";
import { ResponseValidationError } from "../models/responsevalidationerror.js";
import { SDKValidationError } from "../models/sdkvalidationerror.js";
import { VercelBadRequestError } from "../models/vercelbadrequesterror.js";
import { VercelError } from "../models/vercelerror.js";
import { VercelForbiddenError } from "../models/vercelforbiddenerror.js";
import { APIPromise } from "../types/async.js";
import { Result } from "../types/fp.js";
/**
 * List User Events
 *
 * @remarks
 * Retrieves a list of "events" generated by the User on Vercel. Events are generated when the User performs a particular action, such as logging in, creating a deployment, and joining a Team (just to name a few). When the `teamId` parameter is supplied, then the events that are returned will be in relation to the Team that was specified.
 */
export declare function userListUserEvents(client: VercelCore, request: ListUserEventsRequest, options?: RequestOptions): APIPromise<Result<ListUserEventsResponseBody, VercelBadRequestError | VercelForbiddenError | VercelError | ResponseValidationError | ConnectionError | RequestAbortedError | RequestTimeoutError | InvalidRequestError | UnexpectedClientError | SDKValidationError>>;
//# sourceMappingURL=userListUserEvents.d.ts.map