/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { integrationsGetConfiguration } from "../../funcs/integrationsGetConfiguration.js";
import { GetConfigurationRequest$inboundSchema } from "../../models/getconfigurationop.js";
import { formatResult } from "../tools.js";
const args = {
    request: GetConfigurationRequest$inboundSchema,
};
export const tool$integrationsGetConfiguration = {
    name: "integrations-get-configuration",
    description: `Retrieve an integration configuration

Allows to retrieve a the configuration with the provided id in case it exists. The authenticated user or team must be the owner of the config in order to access it.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await integrationsGetConfiguration(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=integrationsGetConfiguration.js.map