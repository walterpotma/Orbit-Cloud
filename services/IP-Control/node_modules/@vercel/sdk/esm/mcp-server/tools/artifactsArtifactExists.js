/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { artifactsArtifactExists } from "../../funcs/artifactsArtifactExists.js";
import { ArtifactExistsRequest$inboundSchema } from "../../models/artifactexistsop.js";
import { formatResult } from "../tools.js";
const args = {
    request: ArtifactExistsRequest$inboundSchema,
};
export const tool$artifactsArtifactExists = {
    name: "artifacts-artifact-exists",
    description: `Check if a cache artifact exists

Check that a cache artifact with the given \`hash\` exists. This request returns response headers only and is equivalent to a \`GET\` request to this endpoint where the response contains no body.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await artifactsArtifactExists(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        return formatResult(void 0, apiCall);
    },
};
//# sourceMappingURL=artifactsArtifactExists.js.map