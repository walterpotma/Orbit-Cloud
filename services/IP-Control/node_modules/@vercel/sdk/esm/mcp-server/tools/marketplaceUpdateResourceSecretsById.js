/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { marketplaceUpdateResourceSecretsById } from "../../funcs/marketplaceUpdateResourceSecretsById.js";
import { UpdateResourceSecretsByIdRequest$inboundSchema } from "../../models/updateresourcesecretsbyidop.js";
import { formatResult } from "../tools.js";
const args = {
    request: UpdateResourceSecretsByIdRequest$inboundSchema,
};
export const tool$marketplaceUpdateResourceSecretsById = {
    name: "marketplace-update-resource-secrets-by-id",
    description: `Update Resource Secrets

This endpoint updates the secrets of a resource. If a resource has projects connected, the connected secrets are updated with the new secrets. The old secrets may still be used by existing connected projects because they are not automatically redeployed. Redeployment is a manual action and must be completed by the user. All new project connections will use the new secrets.<br/> <br/> Use cases for this endpoint:<br/> <br/> - Resetting the credentials of a database in the partner. If the user requests the credentials to be updated in the partnerâ€™s application, the partner post the new set of secrets to Vercel, the user should redeploy their application and the expire the old credentials.<br/>`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await marketplaceUpdateResourceSecretsById(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        return formatResult(void 0, apiCall);
    },
};
//# sourceMappingURL=marketplaceUpdateResourceSecretsById.js.map