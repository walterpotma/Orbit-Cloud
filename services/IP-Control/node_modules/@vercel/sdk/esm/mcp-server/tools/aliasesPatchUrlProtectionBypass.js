/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { aliasesPatchUrlProtectionBypass } from "../../funcs/aliasesPatchUrlProtectionBypass.js";
import { PatchUrlProtectionBypassRequest$inboundSchema } from "../../models/patchurlprotectionbypassop.js";
import { formatResult } from "../tools.js";
const args = {
    request: PatchUrlProtectionBypassRequest$inboundSchema,
};
export const tool$aliasesPatchUrlProtectionBypass = {
    name: "aliases-patch-url-protection-bypass",
    description: `Update the protection bypass for a URL

Update the protection bypass for the alias or deployment URL (used for user access & comment access for deployments). Used as shareable links and user scoped access for Vercel Authentication and also to allow external (logged in) people to comment on previews for Preview Comments (next-live-mode).`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await aliasesPatchUrlProtectionBypass(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=aliasesPatchUrlProtectionBypass.js.map