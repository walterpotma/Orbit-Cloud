/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { aliasesAssignAlias } from "../../funcs/aliasesAssignAlias.js";
import { AssignAliasRequest$inboundSchema } from "../../models/assignaliasop.js";
import { formatResult } from "../tools.js";
const args = {
    request: AssignAliasRequest$inboundSchema,
};
export const tool$aliasesAssignAlias = {
    name: "aliases-assign-alias",
    description: `Assign an Alias

Creates a new alias for the deployment with the given deployment ID. The authenticated user or team must own this deployment. If the desired alias is already assigned to another deployment, then it will be removed from the old deployment and assigned to the new one.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await aliasesAssignAlias(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=aliasesAssignAlias.js.map