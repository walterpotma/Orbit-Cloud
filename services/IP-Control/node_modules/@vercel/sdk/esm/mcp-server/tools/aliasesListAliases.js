/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { aliasesListAliases } from "../../funcs/aliasesListAliases.js";
import { ListAliasesRequest$inboundSchema } from "../../models/listaliasesop.js";
import { formatResult } from "../tools.js";
const args = {
    request: ListAliasesRequest$inboundSchema,
};
export const tool$aliasesListAliases = {
    name: "aliases-list-aliases",
    description: `List aliases

Retrieves a list of aliases for the authenticated User or Team. When \`domain\` is provided, only aliases for that domain will be returned. When \`projectId\` is provided, it will only return the given project aliases.`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await aliasesListAliases(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=aliasesListAliases.js.map